var XDate=function(t,n,e,l){function a(){return i(this instanceof a?this:new a,arguments)}function i(n,e){var l,i=e.length;if(I(e[i-1])&&(l=e[--i],e=O(e,0,i)),i)if(1==i){var r=e[0];r instanceof t||N(r)?n[0]=new t((+r)):r instanceof a?n[0]=x(r):H(r)&&(n[0]=new t(0),n=m(r,l||!1,n))}else n[0]=new t(et.apply(t,e)),l||(n[0]=A(n[0]));else n[0]=new t;return I(l)&&o(n,l),n}function r(t){return t[0].toString===lt}function o(n,e,l){return e?r(n)||(l&&(n[0]=T(n[0])),n[0].toString=lt):r(n)&&(l?n[0]=A(n[0]):n[0]=new t((+n[0]))),n}function s(t,n,e,l,a){var i,r=B(L,t[0],a),o=B(M,t[0],a),s=!1;2==l.length&&I(l[1])&&(s=l[1],l=[e]),i=n==j?(e%12+12)%12:r(j),o(n,l),s&&r(j)!=i&&(o(j,[r(j)-1]),o(G,[P(r(F),r(j))]))}function g(t,e,l,a){l=Number(l);var i=n.floor(l);t["set"+X[e]](t["get"+X[e]]()+i,a||!1),i!=l&&e<z&&g(t,e+1,(l-i)*tt[e],a)}function u(t,e,l){t=t.clone().setUTCMode(!0,!0),e=a(e).setUTCMode(!0,!0);var i=0;if(l==F||l==j){for(var r=z;r>=l;r--)i/=tt[r],i+=L(e,!1,r)-L(t,!1,r);l==j&&(i+=12*(e.getFullYear()-t.getFullYear()))}else if(l==G){var o=t.toDate().setUTCHours(0,0,0,0),s=e.toDate().setUTCHours(0,0,0,0);i=n.round((s-o)/K)+(e-s-(t-o))/K}else i=(e-t)/[36e5,6e4,1e3,1][l-3];return i}function c(t){return h(t(F),t(j),t(G))}function h(e,l,a){var i=new t(et(e,l,a)),r=f(d(e,l,a));return n.floor(n.round((i-r)/K)/7)+1}function d(n,e,l){var a=new t(et(n,e,l));return a<f(n)?n-1:a>=f(n+1)?n+1:n}function f(n){var e=new t(et(n,0,4));return e.setUTCDate(e.getUTCDate()-(e.getUTCDay()+6)%7),e}function p(t,n,e,a){var i=B(L,t,a),r=B(M,t,a);e===l&&(e=d(i(F),i(j),i(G)));var o=f(e);a||(o=A(o)),t.setTime(+o),r(G,[i(G)+7*(n-1)])}function m(n,e,l){for(var i,r=a.parsers,o=0;o<r.length;o++)if(i=r[o](n,e,l))return i;return l[0]=new t(n),l}function v(n,e,l){var a=n.match(/^(\d{4})(-(\d{2})(-(\d{2})([T ](\d{2}):(\d{2})(:(\d{2})(\.(\d+))?)?(Z|(([-+])(\d{2})(:?(\d{2}))?))?)?)?)?$/);if(a){var i=new t(et(a[1],a[3]?a[3]-1:0,a[5]||1,a[7]||0,a[8]||0,a[10]||0,a[12]?1e3*Number("0."+a[12]):0));return a[13]?a[14]&&i.setUTCMinutes(i.getUTCMinutes()+("-"==a[15]?1:-1)*(60*Number(a[16])+(a[18]?Number(a[18]):0))):e||(i=A(i)),l.setTime(+i)}}function y(t,n,e,l,i){function r(t){return e[t]||g[t]}function o(t){if(l)for(var n=(t==V?G:t)-1;n>=0;n--)l.push(u(n));return u(t)}var s=a.locales,g=s[a.defaultLocale]||{},u=B(L,t,i);return e=(H(e)?s[e]:e)||{},b(t,n,o,r,i)}function b(t,n,e,l,a){for(var i,r,o="";i=n.match(nt);)o+=n.substr(0,i.index),i[1]?o+=w(t,i[1],e,l,a):i[3]?(r=b(t,i[4],e,l,a),parseInt(r.replace(/\D/g,""),10)&&(o+=r)):o+=i[7]||"'",n=n.substr(i.index+i[0].length);return o+n}function w(t,n,e,a,i){for(var r,o=n.length,s="";o>0;)r=_(t,n.substr(0,o),e,a,i),r!==l?(s+=r,n=n.substr(o),o=n.length):o--;return s+n}function _(t,n,e,l,i){var r=a.formatters[n];if(H(r))return b(t,r,e,l,i);if(R(r))return r(t,i||!1,l);switch(n){case"fff":return W(e(z),3);case"s":return e(U);case"ss":return W(e(U));case"m":return e(q);case"mm":return W(e(q));case"h":return e($)%12||12;case"hh":return W(e($)%12||12);case"H":return e($);case"HH":return W(e($));case"d":return e(G);case"dd":return W(e(G));case"ddd":return l("dayNamesShort")[e(V)]||"";case"dddd":return l("dayNames")[e(V)]||"";case"M":return e(j)+1;case"MM":return W(e(j)+1);case"MMM":return l("monthNamesShort")[e(j)]||"";case"MMMM":return l("monthNames")[e(j)]||"";case"yy":return(e(F)+"").substring(2);case"yyyy":return e(F);case"t":return k(e,l).substr(0,1).toLowerCase();case"tt":return k(e,l).toLowerCase();case"T":return k(e,l).substr(0,1);case"TT":return k(e,l);case"z":case"zz":case"zzz":return i?"Z":C(t,n);case"w":return c(e);case"ww":return W(c(e));case"S":var o=e(G);return o>10&&o<20?"th":["st","nd","rd"][o%10-1]||"th"}}function C(t,e){var l=t.getTimezoneOffset(),a=l<0?"+":"-",i=n.floor(n.abs(l)/60),r=n.abs(l)%60,o=i;return"zz"==e?o=W(i):"zzz"==e&&(o=W(i)+":"+W(r)),a+o}function k(t,n){return n(t($)<12?"amDesignator":"pmDesignator")}function S(t){return!isNaN(+t[0])}function x(n){var e=new t((+n[0]));return r(n)&&(e.toString=lt),e}function L(t,n,e){return t["get"+(n?"UTC":"")+X[e]]()}function M(t,n,e,l){t["set"+(n?"UTC":"")+X[e]].apply(t,l)}function T(n){return new t(et(n.getFullYear(),n.getMonth(),n.getDate(),n.getHours(),n.getMinutes(),n.getSeconds(),n.getMilliseconds()))}function A(n){return new t(n.getUTCFullYear(),n.getUTCMonth(),n.getUTCDate(),n.getUTCHours(),n.getUTCMinutes(),n.getUTCSeconds(),n.getUTCMilliseconds())}function P(n,e){return 32-new t(et(n,e,32)).getUTCDate()}function D(t){return function(){return t.apply(l,[this].concat(O(arguments)))}}function B(t){var n=O(arguments,1);return function(){return t.apply(l,n.concat(O(arguments)))}}function O(t,n,a){return e.prototype.slice.call(t,n||0,a===l?t.length:a)}function E(t,n){for(var e=0;e<t.length;e++)n(t[e],e)}function H(t){return"string"==typeof t}function N(t){return"number"==typeof t}function I(t){return"boolean"==typeof t}function R(t){return"function"==typeof t}function W(t,n){for(n=n||2,t+="";t.length<n;)t="0"+t;return t}var F=0,j=1,G=2,$=3,q=4,U=5,z=6,V=7,J=8,K=864e5,Z="yyyy-MM-dd'T'HH:mm:ss(.fff)",Y=Z+"zzz",X=["FullYear","Month","Date","Hours","Minutes","Seconds","Milliseconds","Day","Year"],Q=["Years","Months","Days"],tt=[12,31,24,60,60,1e3,1],nt=new RegExp("(([a-zA-Z])\\2*)|(\\((('.*?'|\\(.*?\\)|.)*?)\\))|('(.*?)')"),et=t.UTC,lt=t.prototype.toUTCString,at=a.prototype;return at.length=1,at.splice=e.prototype.splice,at.getUTCMode=D(r),at.setUTCMode=D(o),at.getTimezoneOffset=function(){return r(this)?0:this[0].getTimezoneOffset()},E(X,function(t,n){at["get"+t]=function(){return L(this[0],r(this),n)},n!=J&&(at["getUTC"+t]=function(){return L(this[0],!0,n)}),n!=V&&(at["set"+t]=function(t){return s(this,n,t,arguments,r(this)),this},n!=J&&(at["setUTC"+t]=function(t){return s(this,n,t,arguments,!0),this},at["add"+(Q[n]||t)]=function(t,e){return g(this,n,t,e),this},at["diff"+(Q[n]||t)]=function(t){return u(this,t,n)}))}),at.getWeek=function(){return c(B(L,this,!1))},at.getUTCWeek=function(){return c(B(L,this,!0))},at.setWeek=function(t,n){return p(this,t,n,!1),this},at.setUTCWeek=function(t,n){return p(this,t,n,!0),this},at.addWeeks=function(t){return this.addDays(7*Number(t))},at.diffWeeks=function(t){return u(this,t,G)/7},a.parsers=[v],a.parse=function(t){return+a(""+t)},at.toString=function(t,n,e){return t!==l&&S(this)?y(this,t,n,e,r(this)):this[0].toString()},at.toUTCString=at.toGMTString=function(t,n,e){return t!==l&&S(this)?y(this,t,n,e,!0):this[0].toUTCString()},at.toISOString=function(){return this.toUTCString(Y)},a.defaultLocale="",a.locales={"":{monthNames:["January","February","March","April","May","June","July","August","September","October","November","December"],monthNamesShort:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],dayNames:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],dayNamesShort:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],amDesignator:"AM",pmDesignator:"PM"}},a.formatters={i:Z,u:Y},E(["getTime","valueOf","toDateString","toTimeString","toLocaleString","toLocaleDateString","toLocaleTimeString","toJSON"],function(t){at[t]=function(){return this[0][t]()}}),at.setTime=function(t){return this[0].setTime(t),this},at.valid=D(S),at.clone=function(){return new a(this)},at.clearTime=function(){return this.setHours(0,0,0,0)},at.toDate=function(){return new t((+this[0]))},a.now=function(){return+new t},a.today=function(){return(new a).clearTime()},a.UTC=et,a.getDaysInMonth=P,"undefined"!=typeof module&&module.exports&&(module.exports=a),"function"==typeof define&&define.amd&&define([],function(){return a}),a}(Date,Math,Array);!function(t,n){"object"==typeof module&&"object"==typeof module.exports?module.exports=t.document?n(t,!0):function(t){if(!t.document)throw new Error("jQuery requires a window with a document");return n(t)}:n(t)}("undefined"!=typeof window?window:this,function(t,n){function e(t){var n="length"in t&&t.length,e=Q.type(t);return"function"!==e&&!Q.isWindow(t)&&(!(1!==t.nodeType||!n)||("array"===e||0===n||"number"==typeof n&&n>0&&n-1 in t))}function l(t,n,e){if(Q.isFunction(n))return Q.grep(t,function(t,l){return!!n.call(t,l,t)!==e});if(n.nodeType)return Q.grep(t,function(t){return t===n!==e});if("string"==typeof n){if(ot.test(n))return Q.filter(n,t,e);n=Q.filter(n,t)}return Q.grep(t,function(t){return z.call(n,t)>=0!==e})}function a(t,n){for(;(t=t[n])&&1!==t.nodeType;);return t}function i(t){var n=ft[t]={};return Q.each(t.match(dt)||[],function(t,e){n[e]=!0}),n}function r(){Y.removeEventListener("DOMContentLoaded",r,!1),t.removeEventListener("load",r,!1),Q.ready()}function o(){Object.defineProperty(this.cache={},0,{get:function(){return{}}}),this.expando=Q.expando+o.uid++}function s(t,n,e){var l;if(void 0===e&&1===t.nodeType)if(l="data-"+n.replace(wt,"-$1").toLowerCase(),e=t.getAttribute(l),"string"==typeof e){try{e="true"===e||"false"!==e&&("null"===e?null:+e+""===e?+e:bt.test(e)?Q.parseJSON(e):e)}catch(a){}yt.set(t,n,e)}else e=void 0;return e}function g(){return!0}function u(){return!1}function c(){try{return Y.activeElement}catch(t){}}function h(t,n){return Q.nodeName(t,"table")&&Q.nodeName(11!==n.nodeType?n:n.firstChild,"tr")?t.getElementsByTagName("tbody")[0]||t.appendChild(t.ownerDocument.createElement("tbody")):t}function d(t){return t.type=(null!==t.getAttribute("type"))+"/"+t.type,t}function f(t){var n=Nt.exec(t.type);return n?t.type=n[1]:t.removeAttribute("type"),t}function p(t,n){for(var e=0,l=t.length;e<l;e++)vt.set(t[e],"globalEval",!n||vt.get(n[e],"globalEval"))}function m(t,n){var e,l,a,i,r,o,s,g;if(1===n.nodeType){if(vt.hasData(t)&&(i=vt.access(t),r=vt.set(n,i),g=i.events)){delete r.handle,r.events={};for(a in g)for(e=0,l=g[a].length;e<l;e++)Q.event.add(n,a,g[a][e])}yt.hasData(t)&&(o=yt.access(t),s=Q.extend({},o),yt.set(n,s))}}function v(t,n){var e=t.getElementsByTagName?t.getElementsByTagName(n||"*"):t.querySelectorAll?t.querySelectorAll(n||"*"):[];return void 0===n||n&&Q.nodeName(t,n)?Q.merge([t],e):e}function y(t,n){var e=n.nodeName.toLowerCase();"input"===e&&St.test(t.type)?n.checked=t.checked:"input"!==e&&"textarea"!==e||(n.defaultValue=t.defaultValue)}function b(n,e){var l,a=Q(e.createElement(n)).appendTo(e.body),i=t.getDefaultComputedStyle&&(l=t.getDefaultComputedStyle(a[0]))?l.display:Q.css(a[0],"display");return a.detach(),i}function w(t){var n=Y,e=Ft[t];return e||(e=b(t,n),"none"!==e&&e||(Wt=(Wt||Q("<iframe frameborder='0' width='0' height='0'/>")).appendTo(n.documentElement),n=Wt[0].contentDocument,n.write(),n.close(),e=b(t,n),Wt.detach()),Ft[t]=e),e}function _(t,n,e){var l,a,i,r,o=t.style;return e=e||$t(t),e&&(r=e.getPropertyValue(n)||e[n]),e&&(""!==r||Q.contains(t.ownerDocument,t)||(r=Q.style(t,n)),Gt.test(r)&&jt.test(n)&&(l=o.width,a=o.minWidth,i=o.maxWidth,o.minWidth=o.maxWidth=o.width=r,r=e.width,o.width=l,o.minWidth=a,o.maxWidth=i)),void 0!==r?r+"":r}function C(t,n){return{get:function(){return t()?void delete this.get:(this.get=n).apply(this,arguments)}}}function k(t,n){if(n in t)return n;for(var e=n[0].toUpperCase()+n.slice(1),l=n,a=Kt.length;a--;)if(n=Kt[a]+e,n in t)return n;return l}function S(t,n,e){var l=Ut.exec(n);return l?Math.max(0,l[1]-(e||0))+(l[2]||"px"):n}function x(t,n,e,l,a){for(var i=e===(l?"border":"content")?4:"width"===n?1:0,r=0;i<4;i+=2)"margin"===e&&(r+=Q.css(t,e+Ct[i],!0,a)),l?("content"===e&&(r-=Q.css(t,"padding"+Ct[i],!0,a)),"margin"!==e&&(r-=Q.css(t,"border"+Ct[i]+"Width",!0,a))):(r+=Q.css(t,"padding"+Ct[i],!0,a),"padding"!==e&&(r+=Q.css(t,"border"+Ct[i]+"Width",!0,a)));return r}function L(t,n,e){var l=!0,a="width"===n?t.offsetWidth:t.offsetHeight,i=$t(t),r="border-box"===Q.css(t,"boxSizing",!1,i);if(a<=0||null==a){if(a=_(t,n,i),(a<0||null==a)&&(a=t.style[n]),Gt.test(a))return a;l=r&&(Z.boxSizingReliable()||a===t.style[n]),a=parseFloat(a)||0}return a+x(t,n,e||(r?"border":"content"),l,i)+"px"}function M(t,n){for(var e,l,a,i=[],r=0,o=t.length;r<o;r++)l=t[r],l.style&&(i[r]=vt.get(l,"olddisplay"),e=l.style.display,n?(i[r]||"none"!==e||(l.style.display=""),""===l.style.display&&kt(l)&&(i[r]=vt.access(l,"olddisplay",w(l.nodeName)))):(a=kt(l),"none"===e&&a||vt.set(l,"olddisplay",a?e:Q.css(l,"display"))));for(r=0;r<o;r++)l=t[r],l.style&&(n&&"none"!==l.style.display&&""!==l.style.display||(l.style.display=n?i[r]||"":"none"));return t}function T(t,n,e,l,a){return new T.prototype.init(t,n,e,l,a)}function A(){return setTimeout(function(){Zt=void 0}),Zt=Q.now()}function P(t,n){var e,l=0,a={height:t};for(n=n?1:0;l<4;l+=2-n)e=Ct[l],a["margin"+e]=a["padding"+e]=t;return n&&(a.opacity=a.width=t),a}function D(t,n,e){for(var l,a=(en[n]||[]).concat(en["*"]),i=0,r=a.length;i<r;i++)if(l=a[i].call(e,n,t))return l}function B(t,n,e){var l,a,i,r,o,s,g,u,c=this,h={},d=t.style,f=t.nodeType&&kt(t),p=vt.get(t,"fxshow");e.queue||(o=Q._queueHooks(t,"fx"),null==o.unqueued&&(o.unqueued=0,s=o.empty.fire,o.empty.fire=function(){o.unqueued||s()}),o.unqueued++,c.always(function(){c.always(function(){o.unqueued--,Q.queue(t,"fx").length||o.empty.fire()})})),1===t.nodeType&&("height"in n||"width"in n)&&(e.overflow=[d.overflow,d.overflowX,d.overflowY],g=Q.css(t,"display"),u="none"===g?vt.get(t,"olddisplay")||w(t.nodeName):g,"inline"===u&&"none"===Q.css(t,"float")&&(d.display="inline-block")),e.overflow&&(d.overflow="hidden",c.always(function(){d.overflow=e.overflow[0],d.overflowX=e.overflow[1],d.overflowY=e.overflow[2]}));for(l in n)if(a=n[l],Xt.exec(a)){if(delete n[l],i=i||"toggle"===a,a===(f?"hide":"show")){if("show"!==a||!p||void 0===p[l])continue;f=!0}h[l]=p&&p[l]||Q.style(t,l)}else g=void 0;if(Q.isEmptyObject(h))"inline"===("none"===g?w(t.nodeName):g)&&(d.display=g);else{p?"hidden"in p&&(f=p.hidden):p=vt.access(t,"fxshow",{}),i&&(p.hidden=!f),f?Q(t).show():c.done(function(){Q(t).hide()}),c.done(function(){var n;vt.remove(t,"fxshow");for(n in h)Q.style(t,n,h[n])});for(l in h)r=D(f?p[l]:0,l,c),l in p||(p[l]=r.start,f&&(r.end=r.start,r.start="width"===l||"height"===l?1:0))}}function O(t,n){var e,l,a,i,r;for(e in t)if(l=Q.camelCase(e),a=n[l],i=t[e],Q.isArray(i)&&(a=i[1],i=t[e]=i[0]),e!==l&&(t[l]=i,delete t[e]),r=Q.cssHooks[l],r&&"expand"in r){i=r.expand(i),delete t[l];for(e in i)e in t||(t[e]=i[e],n[e]=a)}else n[l]=a}function E(t,n,e){var l,a,i=0,r=nn.length,o=Q.Deferred().always(function(){delete s.elem}),s=function(){if(a)return!1;for(var n=Zt||A(),e=Math.max(0,g.startTime+g.duration-n),l=e/g.duration||0,i=1-l,r=0,s=g.tweens.length;r<s;r++)g.tweens[r].run(i);return o.notifyWith(t,[g,i,e]),i<1&&s?e:(o.resolveWith(t,[g]),!1)},g=o.promise({elem:t,props:Q.extend({},n),opts:Q.extend(!0,{specialEasing:{}},e),originalProperties:n,originalOptions:e,startTime:Zt||A(),duration:e.duration,tweens:[],createTween:function(n,e){var l=Q.Tween(t,g.opts,n,e,g.opts.specialEasing[n]||g.opts.easing);return g.tweens.push(l),l},stop:function(n){var e=0,l=n?g.tweens.length:0;if(a)return this;for(a=!0;e<l;e++)g.tweens[e].run(1);return n?o.resolveWith(t,[g,n]):o.rejectWith(t,[g,n]),this}}),u=g.props;for(O(u,g.opts.specialEasing);i<r;i++)if(l=nn[i].call(g,t,u,g.opts))return l;return Q.map(u,D,g),Q.isFunction(g.opts.start)&&g.opts.start.call(t,g),Q.fx.timer(Q.extend(s,{elem:t,anim:g,queue:g.opts.queue})),g.progress(g.opts.progress).done(g.opts.done,g.opts.complete).fail(g.opts.fail).always(g.opts.always)}function H(t){return function(n,e){"string"!=typeof n&&(e=n,n="*");var l,a=0,i=n.toLowerCase().match(dt)||[];if(Q.isFunction(e))for(;l=i[a++];)"+"===l[0]?(l=l.slice(1)||"*",(t[l]=t[l]||[]).unshift(e)):(t[l]=t[l]||[]).push(e)}}function N(t,n,e,l){function a(o){var s;return i[o]=!0,Q.each(t[o]||[],function(t,o){var g=o(n,e,l);return"string"!=typeof g||r||i[g]?r?!(s=g):void 0:(n.dataTypes.unshift(g),a(g),!1)}),s}var i={},r=t===wn;return a(n.dataTypes[0])||!i["*"]&&a("*")}function I(t,n){var e,l,a=Q.ajaxSettings.flatOptions||{};for(e in n)void 0!==n[e]&&((a[e]?t:l||(l={}))[e]=n[e]);return l&&Q.extend(!0,t,l),t}function R(t,n,e){for(var l,a,i,r,o=t.contents,s=t.dataTypes;"*"===s[0];)s.shift(),void 0===l&&(l=t.mimeType||n.getResponseHeader("Content-Type"));if(l)for(a in o)if(o[a]&&o[a].test(l)){s.unshift(a);break}if(s[0]in e)i=s[0];else{for(a in e){if(!s[0]||t.converters[a+" "+s[0]]){i=a;break}r||(r=a)}i=i||r}if(i)return i!==s[0]&&s.unshift(i),e[i]}function W(t,n,e,l){var a,i,r,o,s,g={},u=t.dataTypes.slice();if(u[1])for(r in t.converters)g[r.toLowerCase()]=t.converters[r];for(i=u.shift();i;)if(t.responseFields[i]&&(e[t.responseFields[i]]=n),!s&&l&&t.dataFilter&&(n=t.dataFilter(n,t.dataType)),s=i,i=u.shift())if("*"===i)i=s;else if("*"!==s&&s!==i){if(r=g[s+" "+i]||g["* "+i],!r)for(a in g)if(o=a.split(" "),o[1]===i&&(r=g[s+" "+o[0]]||g["* "+o[0]])){r===!0?r=g[a]:g[a]!==!0&&(i=o[0],u.unshift(o[1]));break}if(r!==!0)if(r&&t["throws"])n=r(n);else try{n=r(n)}catch(c){return{state:"parsererror",error:r?c:"No conversion from "+s+" to "+i}}}return{state:"success",data:n}}function F(t,n,e,l){var a;if(Q.isArray(n))Q.each(n,function(n,a){e||xn.test(t)?l(t,a):F(t+"["+("object"==typeof a?n:"")+"]",a,e,l)});else if(e||"object"!==Q.type(n))l(t,n);else for(a in n)F(t+"["+a+"]",n[a],e,l)}function j(t){return Q.isWindow(t)?t:9===t.nodeType&&t.defaultView}var G=[],$=G.slice,q=G.concat,U=G.push,z=G.indexOf,V={},J=V.toString,K=V.hasOwnProperty,Z={},Y=t.document,X="2.1.4",Q=function(t,n){return new Q.fn.init(t,n)},tt=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,nt=/^-ms-/,et=/-([\da-z])/gi,lt=function(t,n){return n.toUpperCase()};Q.fn=Q.prototype={jquery:X,constructor:Q,selector:"",length:0,toArray:function(){return $.call(this)},get:function(t){return null!=t?t<0?this[t+this.length]:this[t]:$.call(this)},pushStack:function(t){var n=Q.merge(this.constructor(),t);return n.prevObject=this,n.context=this.context,n},each:function(t,n){return Q.each(this,t,n)},map:function(t){return this.pushStack(Q.map(this,function(n,e){return t.call(n,e,n)}))},slice:function(){return this.pushStack($.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(t){var n=this.length,e=+t+(t<0?n:0);return this.pushStack(e>=0&&e<n?[this[e]]:[])},end:function(){return this.prevObject||this.constructor(null)},push:U,sort:G.sort,splice:G.splice},Q.extend=Q.fn.extend=function(){var t,n,e,l,a,i,r=arguments[0]||{},o=1,s=arguments.length,g=!1;for("boolean"==typeof r&&(g=r,r=arguments[o]||{},o++),"object"==typeof r||Q.isFunction(r)||(r={}),o===s&&(r=this,o--);o<s;o++)if(null!=(t=arguments[o]))for(n in t)e=r[n],l=t[n],r!==l&&(g&&l&&(Q.isPlainObject(l)||(a=Q.isArray(l)))?(a?(a=!1,i=e&&Q.isArray(e)?e:[]):i=e&&Q.isPlainObject(e)?e:{},r[n]=Q.extend(g,i,l)):void 0!==l&&(r[n]=l));return r},Q.extend({expando:"jQuery"+(X+Math.random()).replace(/\D/g,""),isReady:!0,error:function(t){throw new Error(t)},noop:function(){},isFunction:function(t){return"function"===Q.type(t)},isArray:Array.isArray,isWindow:function(t){return null!=t&&t===t.window},isNumeric:function(t){return!Q.isArray(t)&&t-parseFloat(t)+1>=0},isPlainObject:function(t){return"object"===Q.type(t)&&!t.nodeType&&!Q.isWindow(t)&&!(t.constructor&&!K.call(t.constructor.prototype,"isPrototypeOf"))},isEmptyObject:function(t){var n;for(n in t)return!1;return!0},type:function(t){return null==t?t+"":"object"==typeof t||"function"==typeof t?V[J.call(t)]||"object":typeof t},globalEval:function(t){var n,e=eval;t=Q.trim(t),t&&(1===t.indexOf("use strict")?(n=Y.createElement("script"),n.text=t,Y.head.appendChild(n).parentNode.removeChild(n)):e(t))},camelCase:function(t){return t.replace(nt,"ms-").replace(et,lt)},nodeName:function(t,n){return t.nodeName&&t.nodeName.toLowerCase()===n.toLowerCase()},each:function(t,n,l){var a,i=0,r=t.length,o=e(t);if(l){if(o)for(;i<r&&(a=n.apply(t[i],l),a!==!1);i++);else for(i in t)if(a=n.apply(t[i],l),a===!1)break}else if(o)for(;i<r&&(a=n.call(t[i],i,t[i]),a!==!1);i++);else for(i in t)if(a=n.call(t[i],i,t[i]),a===!1)break;return t},trim:function(t){return null==t?"":(t+"").replace(tt,"")},makeArray:function(t,n){var l=n||[];return null!=t&&(e(Object(t))?Q.merge(l,"string"==typeof t?[t]:t):U.call(l,t)),l},inArray:function(t,n,e){return null==n?-1:z.call(n,t,e)},merge:function(t,n){for(var e=+n.length,l=0,a=t.length;l<e;l++)t[a++]=n[l];return t.length=a,t},grep:function(t,n,e){for(var l,a=[],i=0,r=t.length,o=!e;i<r;i++)l=!n(t[i],i),l!==o&&a.push(t[i]);return a},map:function(t,n,l){var a,i=0,r=t.length,o=e(t),s=[];if(o)for(;i<r;i++)a=n(t[i],i,l),null!=a&&s.push(a);else for(i in t)a=n(t[i],i,l),null!=a&&s.push(a);return q.apply([],s)},guid:1,proxy:function(t,n){var e,l,a;if("string"==typeof n&&(e=t[n],n=t,t=e),Q.isFunction(t))return l=$.call(arguments,2),a=function(){return t.apply(n||this,l.concat($.call(arguments)))},a.guid=t.guid=t.guid||Q.guid++,a},now:Date.now,support:Z}),Q.each("Boolean Number String Function Array Date RegExp Object Error".split(" "),function(t,n){V["[object "+n+"]"]=n.toLowerCase()});var at=function(t){function n(t,n,e,l){var a,i,r,o,s,g,c,d,f,p;if((n?n.ownerDocument||n:F)!==B&&D(n),n=n||B,e=e||[],o=n.nodeType,"string"!=typeof t||!t||1!==o&&9!==o&&11!==o)return e;if(!l&&E){if(11!==o&&(a=yt.exec(t)))if(r=a[1]){if(9===o){if(i=n.getElementById(r),!i||!i.parentNode)return e;if(i.id===r)return e.push(i),e}else if(n.ownerDocument&&(i=n.ownerDocument.getElementById(r))&&R(n,i)&&i.id===r)return e.push(i),e}else{if(a[2])return X.apply(e,n.getElementsByTagName(t)),e;if((r=a[3])&&_.getElementsByClassName)return X.apply(e,n.getElementsByClassName(r)),e}if(_.qsa&&(!H||!H.test(t))){if(d=c=W,f=n,p=1!==o&&t,1===o&&"object"!==n.nodeName.toLowerCase()){for(g=x(t),(c=n.getAttribute("id"))?d=c.replace(wt,"\\$&"):n.setAttribute("id",d),d="[id='"+d+"'] ",s=g.length;s--;)g[s]=d+h(g[s]);f=bt.test(t)&&u(n.parentNode)||n,p=g.join(",")}if(p)try{return X.apply(e,f.querySelectorAll(p)),e}catch(m){}finally{c||n.removeAttribute("id")}}}return M(t.replace(st,"$1"),n,e,l)}function e(){function t(e,l){return n.push(e+" ")>C.cacheLength&&delete t[n.shift()],t[e+" "]=l}var n=[];return t}function l(t){return t[W]=!0,t}function a(t){var n=B.createElement("div");try{return!!t(n)}catch(e){return!1}finally{n.parentNode&&n.parentNode.removeChild(n),n=null}}function i(t,n){for(var e=t.split("|"),l=t.length;l--;)C.attrHandle[e[l]]=n}function r(t,n){var e=n&&t,l=e&&1===t.nodeType&&1===n.nodeType&&(~n.sourceIndex||V)-(~t.sourceIndex||V);if(l)return l;if(e)for(;e=e.nextSibling;)if(e===n)return-1;return t?1:-1}function o(t){return function(n){var e=n.nodeName.toLowerCase();return"input"===e&&n.type===t}}function s(t){return function(n){var e=n.nodeName.toLowerCase();return("input"===e||"button"===e)&&n.type===t}}function g(t){return l(function(n){return n=+n,l(function(e,l){for(var a,i=t([],e.length,n),r=i.length;r--;)e[a=i[r]]&&(e[a]=!(l[a]=e[a]))})})}function u(t){return t&&"undefined"!=typeof t.getElementsByTagName&&t}function c(){}function h(t){for(var n=0,e=t.length,l="";n<e;n++)l+=t[n].value;return l}function d(t,n,e){var l=n.dir,a=e&&"parentNode"===l,i=G++;return n.first?function(n,e,i){for(;n=n[l];)if(1===n.nodeType||a)return t(n,e,i)}:function(n,e,r){var o,s,g=[j,i];if(r){for(;n=n[l];)if((1===n.nodeType||a)&&t(n,e,r))return!0}else for(;n=n[l];)if(1===n.nodeType||a){if(s=n[W]||(n[W]={}),(o=s[l])&&o[0]===j&&o[1]===i)return g[2]=o[2];if(s[l]=g,g[2]=t(n,e,r))return!0}}}function f(t){return t.length>1?function(n,e,l){for(var a=t.length;a--;)if(!t[a](n,e,l))return!1;return!0}:t[0]}function p(t,e,l){for(var a=0,i=e.length;a<i;a++)n(t,e[a],l);return l}function m(t,n,e,l,a){for(var i,r=[],o=0,s=t.length,g=null!=n;o<s;o++)(i=t[o])&&(e&&!e(i,l,a)||(r.push(i),g&&n.push(o)));return r}function v(t,n,e,a,i,r){return a&&!a[W]&&(a=v(a)),i&&!i[W]&&(i=v(i,r)),l(function(l,r,o,s){var g,u,c,h=[],d=[],f=r.length,v=l||p(n||"*",o.nodeType?[o]:o,[]),y=!t||!l&&n?v:m(v,h,t,o,s),b=e?i||(l?t:f||a)?[]:r:y;if(e&&e(y,b,o,s),a)for(g=m(b,d),a(g,[],o,s),u=g.length;u--;)(c=g[u])&&(b[d[u]]=!(y[d[u]]=c));if(l){if(i||t){if(i){for(g=[],u=b.length;u--;)(c=b[u])&&g.push(y[u]=c);i(null,b=[],g,s)}for(u=b.length;u--;)(c=b[u])&&(g=i?tt(l,c):h[u])>-1&&(l[g]=!(r[g]=c))}}else b=m(b===r?b.splice(f,b.length):b),i?i(null,r,b,s):X.apply(r,b)})}function y(t){for(var n,e,l,a=t.length,i=C.relative[t[0].type],r=i||C.relative[" "],o=i?1:0,s=d(function(t){return t===n},r,!0),g=d(function(t){return tt(n,t)>-1},r,!0),u=[function(t,e,l){var a=!i&&(l||e!==T)||((n=e).nodeType?s(t,e,l):g(t,e,l));return n=null,a}];o<a;o++)if(e=C.relative[t[o].type])u=[d(f(u),e)];else{if(e=C.filter[t[o].type].apply(null,t[o].matches),e[W]){for(l=++o;l<a&&!C.relative[t[l].type];l++);return v(o>1&&f(u),o>1&&h(t.slice(0,o-1).concat({value:" "===t[o-2].type?"*":""})).replace(st,"$1"),e,o<l&&y(t.slice(o,l)),l<a&&y(t=t.slice(l)),l<a&&h(t))}u.push(e)}return f(u)}function b(t,e){var a=e.length>0,i=t.length>0,r=function(l,r,o,s,g){var u,c,h,d=0,f="0",p=l&&[],v=[],y=T,b=l||i&&C.find.TAG("*",g),w=j+=null==y?1:Math.random()||.1,_=b.length;for(g&&(T=r!==B&&r);f!==_&&null!=(u=b[f]);f++){if(i&&u){for(c=0;h=t[c++];)if(h(u,r,o)){s.push(u);break}g&&(j=w)}a&&((u=!h&&u)&&d--,l&&p.push(u))}if(d+=f,a&&f!==d){for(c=0;h=e[c++];)h(p,v,r,o);if(l){if(d>0)for(;f--;)p[f]||v[f]||(v[f]=Z.call(s));v=m(v)}X.apply(s,v),g&&!l&&v.length>0&&d+e.length>1&&n.uniqueSort(s)}return g&&(j=w,T=y),p};return a?l(r):r}var w,_,C,k,S,x,L,M,T,A,P,D,B,O,E,H,N,I,R,W="sizzle"+1*new Date,F=t.document,j=0,G=0,$=e(),q=e(),U=e(),z=function(t,n){return t===n&&(P=!0),0},V=1<<31,J={}.hasOwnProperty,K=[],Z=K.pop,Y=K.push,X=K.push,Q=K.slice,tt=function(t,n){for(var e=0,l=t.length;e<l;e++)if(t[e]===n)return e;return-1},nt="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",et="[\\x20\\t\\r\\n\\f]",lt="(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",at=lt.replace("w","w#"),it="\\["+et+"*("+lt+")(?:"+et+"*([*^$|!~]?=)"+et+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+at+"))|)"+et+"*\\]",rt=":("+lt+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+it+")*)|.*)\\)|)",ot=new RegExp(et+"+","g"),st=new RegExp("^"+et+"+|((?:^|[^\\\\])(?:\\\\.)*)"+et+"+$","g"),gt=new RegExp("^"+et+"*,"+et+"*"),ut=new RegExp("^"+et+"*([>+~]|"+et+")"+et+"*"),ct=new RegExp("="+et+"*([^\\]'\"]*?)"+et+"*\\]","g"),ht=new RegExp(rt),dt=new RegExp("^"+at+"$"),ft={ID:new RegExp("^#("+lt+")"),CLASS:new RegExp("^\\.("+lt+")"),TAG:new RegExp("^("+lt.replace("w","w*")+")"),ATTR:new RegExp("^"+it),PSEUDO:new RegExp("^"+rt),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+et+"*(even|odd|(([+-]|)(\\d*)n|)"+et+"*(?:([+-]|)"+et+"*(\\d+)|))"+et+"*\\)|)","i"),bool:new RegExp("^(?:"+nt+")$","i"),needsContext:new RegExp("^"+et+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+et+"*((?:-\\d)?\\d*)"+et+"*\\)|)(?=[^-]|$)","i")},pt=/^(?:input|select|textarea|button)$/i,mt=/^h\d$/i,vt=/^[^{]+\{\s*\[native \w/,yt=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,bt=/[+~]/,wt=/'|\\/g,_t=new RegExp("\\\\([\\da-f]{1,6}"+et+"?|("+et+")|.)","ig"),Ct=function(t,n,e){var l="0x"+n-65536;return l!==l||e?n:l<0?String.fromCharCode(l+65536):String.fromCharCode(l>>10|55296,1023&l|56320)},kt=function(){D()};try{X.apply(K=Q.call(F.childNodes),F.childNodes),K[F.childNodes.length].nodeType}catch(St){X={apply:K.length?function(t,n){Y.apply(t,Q.call(n))}:function(t,n){for(var e=t.length,l=0;t[e++]=n[l++];);t.length=e-1}}}_=n.support={},S=n.isXML=function(t){var n=t&&(t.ownerDocument||t).documentElement;return!!n&&"HTML"!==n.nodeName},D=n.setDocument=function(t){var n,e,l=t?t.ownerDocument||t:F;return l!==B&&9===l.nodeType&&l.documentElement?(B=l,O=l.documentElement,e=l.defaultView,e&&e!==e.top&&(e.addEventListener?e.addEventListener("unload",kt,!1):e.attachEvent&&e.attachEvent("onunload",kt)),E=!S(l),_.attributes=a(function(t){return t.className="i",!t.getAttribute("className")}),_.getElementsByTagName=a(function(t){return t.appendChild(l.createComment("")),!t.getElementsByTagName("*").length}),_.getElementsByClassName=vt.test(l.getElementsByClassName),_.getById=a(function(t){return O.appendChild(t).id=W,!l.getElementsByName||!l.getElementsByName(W).length}),_.getById?(C.find.ID=function(t,n){if("undefined"!=typeof n.getElementById&&E){var e=n.getElementById(t);return e&&e.parentNode?[e]:[]}},C.filter.ID=function(t){var n=t.replace(_t,Ct);return function(t){return t.getAttribute("id")===n}}):(delete C.find.ID,C.filter.ID=function(t){var n=t.replace(_t,Ct);return function(t){var e="undefined"!=typeof t.getAttributeNode&&t.getAttributeNode("id");return e&&e.value===n}}),C.find.TAG=_.getElementsByTagName?function(t,n){return"undefined"!=typeof n.getElementsByTagName?n.getElementsByTagName(t):_.qsa?n.querySelectorAll(t):void 0}:function(t,n){var e,l=[],a=0,i=n.getElementsByTagName(t);if("*"===t){for(;e=i[a++];)1===e.nodeType&&l.push(e);return l}return i},C.find.CLASS=_.getElementsByClassName&&function(t,n){if(E)return n.getElementsByClassName(t)},N=[],H=[],(_.qsa=vt.test(l.querySelectorAll))&&(a(function(t){O.appendChild(t).innerHTML="<a id='"+W+"'></a><select id='"+W+"-\f]' msallowcapture=''><option selected=''></option></select>",t.querySelectorAll("[msallowcapture^='']").length&&H.push("[*^$]="+et+"*(?:''|\"\")"),t.querySelectorAll("[selected]").length||H.push("\\["+et+"*(?:value|"+nt+")"),t.querySelectorAll("[id~="+W+"-]").length||H.push("~="),t.querySelectorAll(":checked").length||H.push(":checked"),t.querySelectorAll("a#"+W+"+*").length||H.push(".#.+[+~]")}),a(function(t){var n=l.createElement("input");n.setAttribute("type","hidden"),t.appendChild(n).setAttribute("name","D"),t.querySelectorAll("[name=d]").length&&H.push("name"+et+"*[*^$|!~]?="),t.querySelectorAll(":enabled").length||H.push(":enabled",":disabled"),t.querySelectorAll("*,:x"),H.push(",.*:")})),(_.matchesSelector=vt.test(I=O.matches||O.webkitMatchesSelector||O.mozMatchesSelector||O.oMatchesSelector||O.msMatchesSelector))&&a(function(t){_.disconnectedMatch=I.call(t,"div"),I.call(t,"[s!='']:x"),N.push("!=",rt)}),H=H.length&&new RegExp(H.join("|")),N=N.length&&new RegExp(N.join("|")),n=vt.test(O.compareDocumentPosition),R=n||vt.test(O.contains)?function(t,n){var e=9===t.nodeType?t.documentElement:t,l=n&&n.parentNode;return t===l||!(!l||1!==l.nodeType||!(e.contains?e.contains(l):t.compareDocumentPosition&&16&t.compareDocumentPosition(l)))}:function(t,n){if(n)for(;n=n.parentNode;)if(n===t)return!0;return!1},z=n?function(t,n){if(t===n)return P=!0,0;var e=!t.compareDocumentPosition-!n.compareDocumentPosition;return e?e:(e=(t.ownerDocument||t)===(n.ownerDocument||n)?t.compareDocumentPosition(n):1,1&e||!_.sortDetached&&n.compareDocumentPosition(t)===e?t===l||t.ownerDocument===F&&R(F,t)?-1:n===l||n.ownerDocument===F&&R(F,n)?1:A?tt(A,t)-tt(A,n):0:4&e?-1:1)}:function(t,n){if(t===n)return P=!0,0;var e,a=0,i=t.parentNode,o=n.parentNode,s=[t],g=[n];if(!i||!o)return t===l?-1:n===l?1:i?-1:o?1:A?tt(A,t)-tt(A,n):0;if(i===o)return r(t,n);for(e=t;e=e.parentNode;)s.unshift(e);for(e=n;e=e.parentNode;)g.unshift(e);for(;s[a]===g[a];)a++;return a?r(s[a],g[a]):s[a]===F?-1:g[a]===F?1:0},l):B},n.matches=function(t,e){return n(t,null,null,e)},n.matchesSelector=function(t,e){if((t.ownerDocument||t)!==B&&D(t),e=e.replace(ct,"='$1']"),_.matchesSelector&&E&&(!N||!N.test(e))&&(!H||!H.test(e)))try{var l=I.call(t,e);if(l||_.disconnectedMatch||t.document&&11!==t.document.nodeType)return l}catch(a){}return n(e,B,null,[t]).length>0},n.contains=function(t,n){return(t.ownerDocument||t)!==B&&D(t),R(t,n)},n.attr=function(t,n){(t.ownerDocument||t)!==B&&D(t);var e=C.attrHandle[n.toLowerCase()],l=e&&J.call(C.attrHandle,n.toLowerCase())?e(t,n,!E):void 0;return void 0!==l?l:_.attributes||!E?t.getAttribute(n):(l=t.getAttributeNode(n))&&l.specified?l.value:null},n.error=function(t){throw new Error("Syntax error, unrecognized expression: "+t)},n.uniqueSort=function(t){var n,e=[],l=0,a=0;if(P=!_.detectDuplicates,A=!_.sortStable&&t.slice(0),t.sort(z),P){for(;n=t[a++];)n===t[a]&&(l=e.push(a));for(;l--;)t.splice(e[l],1)}return A=null,t},k=n.getText=function(t){var n,e="",l=0,a=t.nodeType;if(a){if(1===a||9===a||11===a){if("string"==typeof t.textContent)return t.textContent;for(t=t.firstChild;t;t=t.nextSibling)e+=k(t)}else if(3===a||4===a)return t.nodeValue;
}else for(;n=t[l++];)e+=k(n);return e},C=n.selectors={cacheLength:50,createPseudo:l,match:ft,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(t){return t[1]=t[1].replace(_t,Ct),t[3]=(t[3]||t[4]||t[5]||"").replace(_t,Ct),"~="===t[2]&&(t[3]=" "+t[3]+" "),t.slice(0,4)},CHILD:function(t){return t[1]=t[1].toLowerCase(),"nth"===t[1].slice(0,3)?(t[3]||n.error(t[0]),t[4]=+(t[4]?t[5]+(t[6]||1):2*("even"===t[3]||"odd"===t[3])),t[5]=+(t[7]+t[8]||"odd"===t[3])):t[3]&&n.error(t[0]),t},PSEUDO:function(t){var n,e=!t[6]&&t[2];return ft.CHILD.test(t[0])?null:(t[3]?t[2]=t[4]||t[5]||"":e&&ht.test(e)&&(n=x(e,!0))&&(n=e.indexOf(")",e.length-n)-e.length)&&(t[0]=t[0].slice(0,n),t[2]=e.slice(0,n)),t.slice(0,3))}},filter:{TAG:function(t){var n=t.replace(_t,Ct).toLowerCase();return"*"===t?function(){return!0}:function(t){return t.nodeName&&t.nodeName.toLowerCase()===n}},CLASS:function(t){var n=$[t+" "];return n||(n=new RegExp("(^|"+et+")"+t+"("+et+"|$)"))&&$(t,function(t){return n.test("string"==typeof t.className&&t.className||"undefined"!=typeof t.getAttribute&&t.getAttribute("class")||"")})},ATTR:function(t,e,l){return function(a){var i=n.attr(a,t);return null==i?"!="===e:!e||(i+="","="===e?i===l:"!="===e?i!==l:"^="===e?l&&0===i.indexOf(l):"*="===e?l&&i.indexOf(l)>-1:"$="===e?l&&i.slice(-l.length)===l:"~="===e?(" "+i.replace(ot," ")+" ").indexOf(l)>-1:"|="===e&&(i===l||i.slice(0,l.length+1)===l+"-"))}},CHILD:function(t,n,e,l,a){var i="nth"!==t.slice(0,3),r="last"!==t.slice(-4),o="of-type"===n;return 1===l&&0===a?function(t){return!!t.parentNode}:function(n,e,s){var g,u,c,h,d,f,p=i!==r?"nextSibling":"previousSibling",m=n.parentNode,v=o&&n.nodeName.toLowerCase(),y=!s&&!o;if(m){if(i){for(;p;){for(c=n;c=c[p];)if(o?c.nodeName.toLowerCase()===v:1===c.nodeType)return!1;f=p="only"===t&&!f&&"nextSibling"}return!0}if(f=[r?m.firstChild:m.lastChild],r&&y){for(u=m[W]||(m[W]={}),g=u[t]||[],d=g[0]===j&&g[1],h=g[0]===j&&g[2],c=d&&m.childNodes[d];c=++d&&c&&c[p]||(h=d=0)||f.pop();)if(1===c.nodeType&&++h&&c===n){u[t]=[j,d,h];break}}else if(y&&(g=(n[W]||(n[W]={}))[t])&&g[0]===j)h=g[1];else for(;(c=++d&&c&&c[p]||(h=d=0)||f.pop())&&((o?c.nodeName.toLowerCase()!==v:1!==c.nodeType)||!++h||(y&&((c[W]||(c[W]={}))[t]=[j,h]),c!==n)););return h-=a,h===l||h%l===0&&h/l>=0}}},PSEUDO:function(t,e){var a,i=C.pseudos[t]||C.setFilters[t.toLowerCase()]||n.error("unsupported pseudo: "+t);return i[W]?i(e):i.length>1?(a=[t,t,"",e],C.setFilters.hasOwnProperty(t.toLowerCase())?l(function(t,n){for(var l,a=i(t,e),r=a.length;r--;)l=tt(t,a[r]),t[l]=!(n[l]=a[r])}):function(t){return i(t,0,a)}):i}},pseudos:{not:l(function(t){var n=[],e=[],a=L(t.replace(st,"$1"));return a[W]?l(function(t,n,e,l){for(var i,r=a(t,null,l,[]),o=t.length;o--;)(i=r[o])&&(t[o]=!(n[o]=i))}):function(t,l,i){return n[0]=t,a(n,null,i,e),n[0]=null,!e.pop()}}),has:l(function(t){return function(e){return n(t,e).length>0}}),contains:l(function(t){return t=t.replace(_t,Ct),function(n){return(n.textContent||n.innerText||k(n)).indexOf(t)>-1}}),lang:l(function(t){return dt.test(t||"")||n.error("unsupported lang: "+t),t=t.replace(_t,Ct).toLowerCase(),function(n){var e;do if(e=E?n.lang:n.getAttribute("xml:lang")||n.getAttribute("lang"))return e=e.toLowerCase(),e===t||0===e.indexOf(t+"-");while((n=n.parentNode)&&1===n.nodeType);return!1}}),target:function(n){var e=t.location&&t.location.hash;return e&&e.slice(1)===n.id},root:function(t){return t===O},focus:function(t){return t===B.activeElement&&(!B.hasFocus||B.hasFocus())&&!!(t.type||t.href||~t.tabIndex)},enabled:function(t){return t.disabled===!1},disabled:function(t){return t.disabled===!0},checked:function(t){var n=t.nodeName.toLowerCase();return"input"===n&&!!t.checked||"option"===n&&!!t.selected},selected:function(t){return t.parentNode&&t.parentNode.selectedIndex,t.selected===!0},empty:function(t){for(t=t.firstChild;t;t=t.nextSibling)if(t.nodeType<6)return!1;return!0},parent:function(t){return!C.pseudos.empty(t)},header:function(t){return mt.test(t.nodeName)},input:function(t){return pt.test(t.nodeName)},button:function(t){var n=t.nodeName.toLowerCase();return"input"===n&&"button"===t.type||"button"===n},text:function(t){var n;return"input"===t.nodeName.toLowerCase()&&"text"===t.type&&(null==(n=t.getAttribute("type"))||"text"===n.toLowerCase())},first:g(function(){return[0]}),last:g(function(t,n){return[n-1]}),eq:g(function(t,n,e){return[e<0?e+n:e]}),even:g(function(t,n){for(var e=0;e<n;e+=2)t.push(e);return t}),odd:g(function(t,n){for(var e=1;e<n;e+=2)t.push(e);return t}),lt:g(function(t,n,e){for(var l=e<0?e+n:e;--l>=0;)t.push(l);return t}),gt:g(function(t,n,e){for(var l=e<0?e+n:e;++l<n;)t.push(l);return t})}},C.pseudos.nth=C.pseudos.eq;for(w in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})C.pseudos[w]=o(w);for(w in{submit:!0,reset:!0})C.pseudos[w]=s(w);return c.prototype=C.filters=C.pseudos,C.setFilters=new c,x=n.tokenize=function(t,e){var l,a,i,r,o,s,g,u=q[t+" "];if(u)return e?0:u.slice(0);for(o=t,s=[],g=C.preFilter;o;){l&&!(a=gt.exec(o))||(a&&(o=o.slice(a[0].length)||o),s.push(i=[])),l=!1,(a=ut.exec(o))&&(l=a.shift(),i.push({value:l,type:a[0].replace(st," ")}),o=o.slice(l.length));for(r in C.filter)!(a=ft[r].exec(o))||g[r]&&!(a=g[r](a))||(l=a.shift(),i.push({value:l,type:r,matches:a}),o=o.slice(l.length));if(!l)break}return e?o.length:o?n.error(t):q(t,s).slice(0)},L=n.compile=function(t,n){var e,l=[],a=[],i=U[t+" "];if(!i){for(n||(n=x(t)),e=n.length;e--;)i=y(n[e]),i[W]?l.push(i):a.push(i);i=U(t,b(a,l)),i.selector=t}return i},M=n.select=function(t,n,e,l){var a,i,r,o,s,g="function"==typeof t&&t,c=!l&&x(t=g.selector||t);if(e=e||[],1===c.length){if(i=c[0]=c[0].slice(0),i.length>2&&"ID"===(r=i[0]).type&&_.getById&&9===n.nodeType&&E&&C.relative[i[1].type]){if(n=(C.find.ID(r.matches[0].replace(_t,Ct),n)||[])[0],!n)return e;g&&(n=n.parentNode),t=t.slice(i.shift().value.length)}for(a=ft.needsContext.test(t)?0:i.length;a--&&(r=i[a],!C.relative[o=r.type]);)if((s=C.find[o])&&(l=s(r.matches[0].replace(_t,Ct),bt.test(i[0].type)&&u(n.parentNode)||n))){if(i.splice(a,1),t=l.length&&h(i),!t)return X.apply(e,l),e;break}}return(g||L(t,c))(l,n,!E,e,bt.test(t)&&u(n.parentNode)||n),e},_.sortStable=W.split("").sort(z).join("")===W,_.detectDuplicates=!!P,D(),_.sortDetached=a(function(t){return 1&t.compareDocumentPosition(B.createElement("div"))}),a(function(t){return t.innerHTML="<a href='#'></a>","#"===t.firstChild.getAttribute("href")})||i("type|href|height|width",function(t,n,e){if(!e)return t.getAttribute(n,"type"===n.toLowerCase()?1:2)}),_.attributes&&a(function(t){return t.innerHTML="<input/>",t.firstChild.setAttribute("value",""),""===t.firstChild.getAttribute("value")})||i("value",function(t,n,e){if(!e&&"input"===t.nodeName.toLowerCase())return t.defaultValue}),a(function(t){return null==t.getAttribute("disabled")})||i(nt,function(t,n,e){var l;if(!e)return t[n]===!0?n.toLowerCase():(l=t.getAttributeNode(n))&&l.specified?l.value:null}),n}(t);Q.find=at,Q.expr=at.selectors,Q.expr[":"]=Q.expr.pseudos,Q.unique=at.uniqueSort,Q.text=at.getText,Q.isXMLDoc=at.isXML,Q.contains=at.contains;var it=Q.expr.match.needsContext,rt=/^<(\w+)\s*\/?>(?:<\/\1>|)$/,ot=/^.[^:#\[\.,]*$/;Q.filter=function(t,n,e){var l=n[0];return e&&(t=":not("+t+")"),1===n.length&&1===l.nodeType?Q.find.matchesSelector(l,t)?[l]:[]:Q.find.matches(t,Q.grep(n,function(t){return 1===t.nodeType}))},Q.fn.extend({find:function(t){var n,e=this.length,l=[],a=this;if("string"!=typeof t)return this.pushStack(Q(t).filter(function(){for(n=0;n<e;n++)if(Q.contains(a[n],this))return!0}));for(n=0;n<e;n++)Q.find(t,a[n],l);return l=this.pushStack(e>1?Q.unique(l):l),l.selector=this.selector?this.selector+" "+t:t,l},filter:function(t){return this.pushStack(l(this,t||[],!1))},not:function(t){return this.pushStack(l(this,t||[],!0))},is:function(t){return!!l(this,"string"==typeof t&&it.test(t)?Q(t):t||[],!1).length}});var st,gt=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/,ut=Q.fn.init=function(t,n){var e,l;if(!t)return this;if("string"==typeof t){if(e="<"===t[0]&&">"===t[t.length-1]&&t.length>=3?[null,t,null]:gt.exec(t),!e||!e[1]&&n)return!n||n.jquery?(n||st).find(t):this.constructor(n).find(t);if(e[1]){if(n=n instanceof Q?n[0]:n,Q.merge(this,Q.parseHTML(e[1],n&&n.nodeType?n.ownerDocument||n:Y,!0)),rt.test(e[1])&&Q.isPlainObject(n))for(e in n)Q.isFunction(this[e])?this[e](n[e]):this.attr(e,n[e]);return this}return l=Y.getElementById(e[2]),l&&l.parentNode&&(this.length=1,this[0]=l),this.context=Y,this.selector=t,this}return t.nodeType?(this.context=this[0]=t,this.length=1,this):Q.isFunction(t)?"undefined"!=typeof st.ready?st.ready(t):t(Q):(void 0!==t.selector&&(this.selector=t.selector,this.context=t.context),Q.makeArray(t,this))};ut.prototype=Q.fn,st=Q(Y);var ct=/^(?:parents|prev(?:Until|All))/,ht={children:!0,contents:!0,next:!0,prev:!0};Q.extend({dir:function(t,n,e){for(var l=[],a=void 0!==e;(t=t[n])&&9!==t.nodeType;)if(1===t.nodeType){if(a&&Q(t).is(e))break;l.push(t)}return l},sibling:function(t,n){for(var e=[];t;t=t.nextSibling)1===t.nodeType&&t!==n&&e.push(t);return e}}),Q.fn.extend({has:function(t){var n=Q(t,this),e=n.length;return this.filter(function(){for(var t=0;t<e;t++)if(Q.contains(this,n[t]))return!0})},closest:function(t,n){for(var e,l=0,a=this.length,i=[],r=it.test(t)||"string"!=typeof t?Q(t,n||this.context):0;l<a;l++)for(e=this[l];e&&e!==n;e=e.parentNode)if(e.nodeType<11&&(r?r.index(e)>-1:1===e.nodeType&&Q.find.matchesSelector(e,t))){i.push(e);break}return this.pushStack(i.length>1?Q.unique(i):i)},index:function(t){return t?"string"==typeof t?z.call(Q(t),this[0]):z.call(this,t.jquery?t[0]:t):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(t,n){return this.pushStack(Q.unique(Q.merge(this.get(),Q(t,n))))},addBack:function(t){return this.add(null==t?this.prevObject:this.prevObject.filter(t))}}),Q.each({parent:function(t){var n=t.parentNode;return n&&11!==n.nodeType?n:null},parents:function(t){return Q.dir(t,"parentNode")},parentsUntil:function(t,n,e){return Q.dir(t,"parentNode",e)},next:function(t){return a(t,"nextSibling")},prev:function(t){return a(t,"previousSibling")},nextAll:function(t){return Q.dir(t,"nextSibling")},prevAll:function(t){return Q.dir(t,"previousSibling")},nextUntil:function(t,n,e){return Q.dir(t,"nextSibling",e)},prevUntil:function(t,n,e){return Q.dir(t,"previousSibling",e)},siblings:function(t){return Q.sibling((t.parentNode||{}).firstChild,t)},children:function(t){return Q.sibling(t.firstChild)},contents:function(t){return t.contentDocument||Q.merge([],t.childNodes)}},function(t,n){Q.fn[t]=function(e,l){var a=Q.map(this,n,e);return"Until"!==t.slice(-5)&&(l=e),l&&"string"==typeof l&&(a=Q.filter(l,a)),this.length>1&&(ht[t]||Q.unique(a),ct.test(t)&&a.reverse()),this.pushStack(a)}});var dt=/\S+/g,ft={};Q.Callbacks=function(t){t="string"==typeof t?ft[t]||i(t):Q.extend({},t);var n,e,l,a,r,o,s=[],g=!t.once&&[],u=function(i){for(n=t.memory&&i,e=!0,o=a||0,a=0,r=s.length,l=!0;s&&o<r;o++)if(s[o].apply(i[0],i[1])===!1&&t.stopOnFalse){n=!1;break}l=!1,s&&(g?g.length&&u(g.shift()):n?s=[]:c.disable())},c={add:function(){if(s){var e=s.length;!function i(n){Q.each(n,function(n,e){var l=Q.type(e);"function"===l?t.unique&&c.has(e)||s.push(e):e&&e.length&&"string"!==l&&i(e)})}(arguments),l?r=s.length:n&&(a=e,u(n))}return this},remove:function(){return s&&Q.each(arguments,function(t,n){for(var e;(e=Q.inArray(n,s,e))>-1;)s.splice(e,1),l&&(e<=r&&r--,e<=o&&o--)}),this},has:function(t){return t?Q.inArray(t,s)>-1:!(!s||!s.length)},empty:function(){return s=[],r=0,this},disable:function(){return s=g=n=void 0,this},disabled:function(){return!s},lock:function(){return g=void 0,n||c.disable(),this},locked:function(){return!g},fireWith:function(t,n){return!s||e&&!g||(n=n||[],n=[t,n.slice?n.slice():n],l?g.push(n):u(n)),this},fire:function(){return c.fireWith(this,arguments),this},fired:function(){return!!e}};return c},Q.extend({Deferred:function(t){var n=[["resolve","done",Q.Callbacks("once memory"),"resolved"],["reject","fail",Q.Callbacks("once memory"),"rejected"],["notify","progress",Q.Callbacks("memory")]],e="pending",l={state:function(){return e},always:function(){return a.done(arguments).fail(arguments),this},then:function(){var t=arguments;return Q.Deferred(function(e){Q.each(n,function(n,i){var r=Q.isFunction(t[n])&&t[n];a[i[1]](function(){var t=r&&r.apply(this,arguments);t&&Q.isFunction(t.promise)?t.promise().done(e.resolve).fail(e.reject).progress(e.notify):e[i[0]+"With"](this===l?e.promise():this,r?[t]:arguments)})}),t=null}).promise()},promise:function(t){return null!=t?Q.extend(t,l):l}},a={};return l.pipe=l.then,Q.each(n,function(t,i){var r=i[2],o=i[3];l[i[1]]=r.add,o&&r.add(function(){e=o},n[1^t][2].disable,n[2][2].lock),a[i[0]]=function(){return a[i[0]+"With"](this===a?l:this,arguments),this},a[i[0]+"With"]=r.fireWith}),l.promise(a),t&&t.call(a,a),a},when:function(t){var n,e,l,a=0,i=$.call(arguments),r=i.length,o=1!==r||t&&Q.isFunction(t.promise)?r:0,s=1===o?t:Q.Deferred(),g=function(t,e,l){return function(a){e[t]=this,l[t]=arguments.length>1?$.call(arguments):a,l===n?s.notifyWith(e,l):--o||s.resolveWith(e,l)}};if(r>1)for(n=new Array(r),e=new Array(r),l=new Array(r);a<r;a++)i[a]&&Q.isFunction(i[a].promise)?i[a].promise().done(g(a,l,i)).fail(s.reject).progress(g(a,e,n)):--o;return o||s.resolveWith(l,i),s.promise()}});var pt;Q.fn.ready=function(t){return Q.ready.promise().done(t),this},Q.extend({isReady:!1,readyWait:1,holdReady:function(t){t?Q.readyWait++:Q.ready(!0)},ready:function(t){(t===!0?--Q.readyWait:Q.isReady)||(Q.isReady=!0,t!==!0&&--Q.readyWait>0||(pt.resolveWith(Y,[Q]),Q.fn.triggerHandler&&(Q(Y).triggerHandler("ready"),Q(Y).off("ready"))))}}),Q.ready.promise=function(n){return pt||(pt=Q.Deferred(),"complete"===Y.readyState?setTimeout(Q.ready):(Y.addEventListener("DOMContentLoaded",r,!1),t.addEventListener("load",r,!1))),pt.promise(n)},Q.ready.promise();var mt=Q.access=function(t,n,e,l,a,i,r){var o=0,s=t.length,g=null==e;if("object"===Q.type(e)){a=!0;for(o in e)Q.access(t,n,o,e[o],!0,i,r)}else if(void 0!==l&&(a=!0,Q.isFunction(l)||(r=!0),g&&(r?(n.call(t,l),n=null):(g=n,n=function(t,n,e){return g.call(Q(t),e)})),n))for(;o<s;o++)n(t[o],e,r?l:l.call(t[o],o,n(t[o],e)));return a?t:g?n.call(t):s?n(t[0],e):i};Q.acceptData=function(t){return 1===t.nodeType||9===t.nodeType||!+t.nodeType},o.uid=1,o.accepts=Q.acceptData,o.prototype={key:function(t){if(!o.accepts(t))return 0;var n={},e=t[this.expando];if(!e){e=o.uid++;try{n[this.expando]={value:e},Object.defineProperties(t,n)}catch(l){n[this.expando]=e,Q.extend(t,n)}}return this.cache[e]||(this.cache[e]={}),e},set:function(t,n,e){var l,a=this.key(t),i=this.cache[a];if("string"==typeof n)i[n]=e;else if(Q.isEmptyObject(i))Q.extend(this.cache[a],n);else for(l in n)i[l]=n[l];return i},get:function(t,n){var e=this.cache[this.key(t)];return void 0===n?e:e[n]},access:function(t,n,e){var l;return void 0===n||n&&"string"==typeof n&&void 0===e?(l=this.get(t,n),void 0!==l?l:this.get(t,Q.camelCase(n))):(this.set(t,n,e),void 0!==e?e:n)},remove:function(t,n){var e,l,a,i=this.key(t),r=this.cache[i];if(void 0===n)this.cache[i]={};else{Q.isArray(n)?l=n.concat(n.map(Q.camelCase)):(a=Q.camelCase(n),n in r?l=[n,a]:(l=a,l=l in r?[l]:l.match(dt)||[])),e=l.length;for(;e--;)delete r[l[e]]}},hasData:function(t){return!Q.isEmptyObject(this.cache[t[this.expando]]||{})},discard:function(t){t[this.expando]&&delete this.cache[t[this.expando]]}};var vt=new o,yt=new o,bt=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,wt=/([A-Z])/g;Q.extend({hasData:function(t){return yt.hasData(t)||vt.hasData(t)},data:function(t,n,e){return yt.access(t,n,e)},removeData:function(t,n){yt.remove(t,n)},_data:function(t,n,e){return vt.access(t,n,e)},_removeData:function(t,n){vt.remove(t,n)}}),Q.fn.extend({data:function(t,n){var e,l,a,i=this[0],r=i&&i.attributes;if(void 0===t){if(this.length&&(a=yt.get(i),1===i.nodeType&&!vt.get(i,"hasDataAttrs"))){for(e=r.length;e--;)r[e]&&(l=r[e].name,0===l.indexOf("data-")&&(l=Q.camelCase(l.slice(5)),s(i,l,a[l])));vt.set(i,"hasDataAttrs",!0)}return a}return"object"==typeof t?this.each(function(){yt.set(this,t)}):mt(this,function(n){var e,l=Q.camelCase(t);if(i&&void 0===n){if(e=yt.get(i,t),void 0!==e)return e;if(e=yt.get(i,l),void 0!==e)return e;if(e=s(i,l,void 0),void 0!==e)return e}else this.each(function(){var e=yt.get(this,l);yt.set(this,l,n),t.indexOf("-")!==-1&&void 0!==e&&yt.set(this,t,n)})},null,n,arguments.length>1,null,!0)},removeData:function(t){return this.each(function(){yt.remove(this,t)})}}),Q.extend({queue:function(t,n,e){var l;if(t)return n=(n||"fx")+"queue",l=vt.get(t,n),e&&(!l||Q.isArray(e)?l=vt.access(t,n,Q.makeArray(e)):l.push(e)),l||[]},dequeue:function(t,n){n=n||"fx";var e=Q.queue(t,n),l=e.length,a=e.shift(),i=Q._queueHooks(t,n),r=function(){Q.dequeue(t,n)};"inprogress"===a&&(a=e.shift(),l--),a&&("fx"===n&&e.unshift("inprogress"),delete i.stop,a.call(t,r,i)),!l&&i&&i.empty.fire()},_queueHooks:function(t,n){var e=n+"queueHooks";return vt.get(t,e)||vt.access(t,e,{empty:Q.Callbacks("once memory").add(function(){vt.remove(t,[n+"queue",e])})})}}),Q.fn.extend({queue:function(t,n){var e=2;return"string"!=typeof t&&(n=t,t="fx",e--),arguments.length<e?Q.queue(this[0],t):void 0===n?this:this.each(function(){var e=Q.queue(this,t,n);Q._queueHooks(this,t),"fx"===t&&"inprogress"!==e[0]&&Q.dequeue(this,t)})},dequeue:function(t){return this.each(function(){Q.dequeue(this,t)})},clearQueue:function(t){return this.queue(t||"fx",[])},promise:function(t,n){var e,l=1,a=Q.Deferred(),i=this,r=this.length,o=function(){--l||a.resolveWith(i,[i])};for("string"!=typeof t&&(n=t,t=void 0),t=t||"fx";r--;)e=vt.get(i[r],t+"queueHooks"),e&&e.empty&&(l++,e.empty.add(o));return o(),a.promise(n)}});var _t=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,Ct=["Top","Right","Bottom","Left"],kt=function(t,n){return t=n||t,"none"===Q.css(t,"display")||!Q.contains(t.ownerDocument,t)},St=/^(?:checkbox|radio)$/i;!function(){var t=Y.createDocumentFragment(),n=t.appendChild(Y.createElement("div")),e=Y.createElement("input");e.setAttribute("type","radio"),e.setAttribute("checked","checked"),e.setAttribute("name","t"),n.appendChild(e),Z.checkClone=n.cloneNode(!0).cloneNode(!0).lastChild.checked,n.innerHTML="<textarea>x</textarea>",Z.noCloneChecked=!!n.cloneNode(!0).lastChild.defaultValue}();var xt="undefined";Z.focusinBubbles="onfocusin"in t;var Lt=/^key/,Mt=/^(?:mouse|pointer|contextmenu)|click/,Tt=/^(?:focusinfocus|focusoutblur)$/,At=/^([^.]*)(?:\.(.+)|)$/;Q.event={global:{},add:function(t,n,e,l,a){var i,r,o,s,g,u,c,h,d,f,p,m=vt.get(t);if(m)for(e.handler&&(i=e,e=i.handler,a=i.selector),e.guid||(e.guid=Q.guid++),(s=m.events)||(s=m.events={}),(r=m.handle)||(r=m.handle=function(n){return typeof Q!==xt&&Q.event.triggered!==n.type?Q.event.dispatch.apply(t,arguments):void 0}),n=(n||"").match(dt)||[""],g=n.length;g--;)o=At.exec(n[g])||[],d=p=o[1],f=(o[2]||"").split(".").sort(),d&&(c=Q.event.special[d]||{},d=(a?c.delegateType:c.bindType)||d,c=Q.event.special[d]||{},u=Q.extend({type:d,origType:p,data:l,handler:e,guid:e.guid,selector:a,needsContext:a&&Q.expr.match.needsContext.test(a),namespace:f.join(".")},i),(h=s[d])||(h=s[d]=[],h.delegateCount=0,c.setup&&c.setup.call(t,l,f,r)!==!1||t.addEventListener&&t.addEventListener(d,r,!1)),c.add&&(c.add.call(t,u),u.handler.guid||(u.handler.guid=e.guid)),a?h.splice(h.delegateCount++,0,u):h.push(u),Q.event.global[d]=!0)},remove:function(t,n,e,l,a){var i,r,o,s,g,u,c,h,d,f,p,m=vt.hasData(t)&&vt.get(t);if(m&&(s=m.events)){for(n=(n||"").match(dt)||[""],g=n.length;g--;)if(o=At.exec(n[g])||[],d=p=o[1],f=(o[2]||"").split(".").sort(),d){for(c=Q.event.special[d]||{},d=(l?c.delegateType:c.bindType)||d,h=s[d]||[],o=o[2]&&new RegExp("(^|\\.)"+f.join("\\.(?:.*\\.|)")+"(\\.|$)"),r=i=h.length;i--;)u=h[i],!a&&p!==u.origType||e&&e.guid!==u.guid||o&&!o.test(u.namespace)||l&&l!==u.selector&&("**"!==l||!u.selector)||(h.splice(i,1),u.selector&&h.delegateCount--,c.remove&&c.remove.call(t,u));r&&!h.length&&(c.teardown&&c.teardown.call(t,f,m.handle)!==!1||Q.removeEvent(t,d,m.handle),delete s[d])}else for(d in s)Q.event.remove(t,d+n[g],e,l,!0);Q.isEmptyObject(s)&&(delete m.handle,vt.remove(t,"events"))}},trigger:function(n,e,l,a){var i,r,o,s,g,u,c,h=[l||Y],d=K.call(n,"type")?n.type:n,f=K.call(n,"namespace")?n.namespace.split("."):[];if(r=o=l=l||Y,3!==l.nodeType&&8!==l.nodeType&&!Tt.test(d+Q.event.triggered)&&(d.indexOf(".")>=0&&(f=d.split("."),d=f.shift(),f.sort()),g=d.indexOf(":")<0&&"on"+d,n=n[Q.expando]?n:new Q.Event(d,"object"==typeof n&&n),n.isTrigger=a?2:3,n.namespace=f.join("."),n.namespace_re=n.namespace?new RegExp("(^|\\.)"+f.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,n.result=void 0,n.target||(n.target=l),e=null==e?[n]:Q.makeArray(e,[n]),c=Q.event.special[d]||{},a||!c.trigger||c.trigger.apply(l,e)!==!1)){if(!a&&!c.noBubble&&!Q.isWindow(l)){for(s=c.delegateType||d,Tt.test(s+d)||(r=r.parentNode);r;r=r.parentNode)h.push(r),o=r;o===(l.ownerDocument||Y)&&h.push(o.defaultView||o.parentWindow||t)}for(i=0;(r=h[i++])&&!n.isPropagationStopped();)n.type=i>1?s:c.bindType||d,u=(vt.get(r,"events")||{})[n.type]&&vt.get(r,"handle"),u&&u.apply(r,e),u=g&&r[g],u&&u.apply&&Q.acceptData(r)&&(n.result=u.apply(r,e),n.result===!1&&n.preventDefault());return n.type=d,a||n.isDefaultPrevented()||c._default&&c._default.apply(h.pop(),e)!==!1||!Q.acceptData(l)||g&&Q.isFunction(l[d])&&!Q.isWindow(l)&&(o=l[g],o&&(l[g]=null),Q.event.triggered=d,l[d](),Q.event.triggered=void 0,o&&(l[g]=o)),n.result}},dispatch:function(t){t=Q.event.fix(t);var n,e,l,a,i,r=[],o=$.call(arguments),s=(vt.get(this,"events")||{})[t.type]||[],g=Q.event.special[t.type]||{};if(o[0]=t,t.delegateTarget=this,!g.preDispatch||g.preDispatch.call(this,t)!==!1){for(r=Q.event.handlers.call(this,t,s),n=0;(a=r[n++])&&!t.isPropagationStopped();)for(t.currentTarget=a.elem,e=0;(i=a.handlers[e++])&&!t.isImmediatePropagationStopped();)t.namespace_re&&!t.namespace_re.test(i.namespace)||(t.handleObj=i,t.data=i.data,l=((Q.event.special[i.origType]||{}).handle||i.handler).apply(a.elem,o),void 0!==l&&(t.result=l)===!1&&(t.preventDefault(),t.stopPropagation()));return g.postDispatch&&g.postDispatch.call(this,t),t.result}},handlers:function(t,n){var e,l,a,i,r=[],o=n.delegateCount,s=t.target;if(o&&s.nodeType&&(!t.button||"click"!==t.type))for(;s!==this;s=s.parentNode||this)if(s.disabled!==!0||"click"!==t.type){for(l=[],e=0;e<o;e++)i=n[e],a=i.selector+" ",void 0===l[a]&&(l[a]=i.needsContext?Q(a,this).index(s)>=0:Q.find(a,this,null,[s]).length),l[a]&&l.push(i);l.length&&r.push({elem:s,handlers:l})}return o<n.length&&r.push({elem:this,handlers:n.slice(o)}),r},props:"altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),fixHooks:{},keyHooks:{props:"char charCode key keyCode".split(" "),filter:function(t,n){return null==t.which&&(t.which=null!=n.charCode?n.charCode:n.keyCode),t}},mouseHooks:{props:"button buttons clientX clientY offsetX offsetY pageX pageY screenX screenY toElement".split(" "),filter:function(t,n){var e,l,a,i=n.button;return null==t.pageX&&null!=n.clientX&&(e=t.target.ownerDocument||Y,l=e.documentElement,a=e.body,t.pageX=n.clientX+(l&&l.scrollLeft||a&&a.scrollLeft||0)-(l&&l.clientLeft||a&&a.clientLeft||0),t.pageY=n.clientY+(l&&l.scrollTop||a&&a.scrollTop||0)-(l&&l.clientTop||a&&a.clientTop||0)),t.which||void 0===i||(t.which=1&i?1:2&i?3:4&i?2:0),t}},fix:function(t){if(t[Q.expando])return t;var n,e,l,a=t.type,i=t,r=this.fixHooks[a];for(r||(this.fixHooks[a]=r=Mt.test(a)?this.mouseHooks:Lt.test(a)?this.keyHooks:{}),l=r.props?this.props.concat(r.props):this.props,t=new Q.Event(i),n=l.length;n--;)e=l[n],t[e]=i[e];return t.target||(t.target=Y),3===t.target.nodeType&&(t.target=t.target.parentNode),r.filter?r.filter(t,i):t},special:{load:{noBubble:!0},focus:{trigger:function(){if(this!==c()&&this.focus)return this.focus(),!1},delegateType:"focusin"},blur:{trigger:function(){if(this===c()&&this.blur)return this.blur(),!1},delegateType:"focusout"},click:{trigger:function(){if("checkbox"===this.type&&this.click&&Q.nodeName(this,"input"))return this.click(),!1},_default:function(t){return Q.nodeName(t.target,"a")}},beforeunload:{postDispatch:function(t){void 0!==t.result&&t.originalEvent&&(t.originalEvent.returnValue=t.result)}}},simulate:function(t,n,e,l){var a=Q.extend(new Q.Event,e,{type:t,isSimulated:!0,originalEvent:{}});l?Q.event.trigger(a,null,n):Q.event.dispatch.call(n,a),a.isDefaultPrevented()&&e.preventDefault()}},Q.removeEvent=function(t,n,e){t.removeEventListener&&t.removeEventListener(n,e,!1)},Q.Event=function(t,n){return this instanceof Q.Event?(t&&t.type?(this.originalEvent=t,this.type=t.type,this.isDefaultPrevented=t.defaultPrevented||void 0===t.defaultPrevented&&t.returnValue===!1?g:u):this.type=t,n&&Q.extend(this,n),this.timeStamp=t&&t.timeStamp||Q.now(),void(this[Q.expando]=!0)):new Q.Event(t,n)},Q.Event.prototype={isDefaultPrevented:u,isPropagationStopped:u,isImmediatePropagationStopped:u,preventDefault:function(){var t=this.originalEvent;this.isDefaultPrevented=g,t&&t.preventDefault&&t.preventDefault()},stopPropagation:function(){var t=this.originalEvent;this.isPropagationStopped=g,t&&t.stopPropagation&&t.stopPropagation()},stopImmediatePropagation:function(){var t=this.originalEvent;this.isImmediatePropagationStopped=g,t&&t.stopImmediatePropagation&&t.stopImmediatePropagation(),this.stopPropagation()}},Q.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},function(t,n){Q.event.special[t]={delegateType:n,bindType:n,handle:function(t){var e,l=this,a=t.relatedTarget,i=t.handleObj;return a&&(a===l||Q.contains(l,a))||(t.type=i.origType,e=i.handler.apply(this,arguments),t.type=n),e}}}),Z.focusinBubbles||Q.each({focus:"focusin",blur:"focusout"},function(t,n){var e=function(t){Q.event.simulate(n,t.target,Q.event.fix(t),!0)};Q.event.special[n]={setup:function(){var l=this.ownerDocument||this,a=vt.access(l,n);a||l.addEventListener(t,e,!0),vt.access(l,n,(a||0)+1)},teardown:function(){var l=this.ownerDocument||this,a=vt.access(l,n)-1;a?vt.access(l,n,a):(l.removeEventListener(t,e,!0),vt.remove(l,n))}}}),Q.fn.extend({on:function(t,n,e,l,a){var i,r;if("object"==typeof t){"string"!=typeof n&&(e=e||n,n=void 0);for(r in t)this.on(r,n,e,t[r],a);return this}if(null==e&&null==l?(l=n,e=n=void 0):null==l&&("string"==typeof n?(l=e,e=void 0):(l=e,e=n,n=void 0)),l===!1)l=u;else if(!l)return this;return 1===a&&(i=l,l=function(t){return Q().off(t),i.apply(this,arguments)},l.guid=i.guid||(i.guid=Q.guid++)),this.each(function(){Q.event.add(this,t,l,e,n)})},one:function(t,n,e,l){return this.on(t,n,e,l,1)},off:function(t,n,e){var l,a;if(t&&t.preventDefault&&t.handleObj)return l=t.handleObj,Q(t.delegateTarget).off(l.namespace?l.origType+"."+l.namespace:l.origType,l.selector,l.handler),this;if("object"==typeof t){for(a in t)this.off(a,n,t[a]);return this}return n!==!1&&"function"!=typeof n||(e=n,n=void 0),e===!1&&(e=u),this.each(function(){Q.event.remove(this,t,e,n)})},trigger:function(t,n){return this.each(function(){Q.event.trigger(t,n,this)})},triggerHandler:function(t,n){var e=this[0];if(e)return Q.event.trigger(t,n,e,!0)}});var Pt=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi,Dt=/<([\w:]+)/,Bt=/<|&#?\w+;/,Ot=/<(?:script|style|link)/i,Et=/checked\s*(?:[^=]|=\s*.checked.)/i,Ht=/^$|\/(?:java|ecma)script/i,Nt=/^true\/(.*)/,It=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g,Rt={option:[1,"<select multiple='multiple'>","</select>"],thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};Rt.optgroup=Rt.option,Rt.tbody=Rt.tfoot=Rt.colgroup=Rt.caption=Rt.thead,Rt.th=Rt.td,Q.extend({clone:function(t,n,e){var l,a,i,r,o=t.cloneNode(!0),s=Q.contains(t.ownerDocument,t);if(!(Z.noCloneChecked||1!==t.nodeType&&11!==t.nodeType||Q.isXMLDoc(t)))for(r=v(o),i=v(t),l=0,a=i.length;l<a;l++)y(i[l],r[l]);if(n)if(e)for(i=i||v(t),r=r||v(o),l=0,a=i.length;l<a;l++)m(i[l],r[l]);else m(t,o);return r=v(o,"script"),r.length>0&&p(r,!s&&v(t,"script")),o},buildFragment:function(t,n,e,l){for(var a,i,r,o,s,g,u=n.createDocumentFragment(),c=[],h=0,d=t.length;h<d;h++)if(a=t[h],a||0===a)if("object"===Q.type(a))Q.merge(c,a.nodeType?[a]:a);else if(Bt.test(a)){for(i=i||u.appendChild(n.createElement("div")),r=(Dt.exec(a)||["",""])[1].toLowerCase(),o=Rt[r]||Rt._default,i.innerHTML=o[1]+a.replace(Pt,"<$1></$2>")+o[2],g=o[0];g--;)i=i.lastChild;Q.merge(c,i.childNodes),i=u.firstChild,i.textContent=""}else c.push(n.createTextNode(a));for(u.textContent="",h=0;a=c[h++];)if((!l||Q.inArray(a,l)===-1)&&(s=Q.contains(a.ownerDocument,a),i=v(u.appendChild(a),"script"),s&&p(i),e))for(g=0;a=i[g++];)Ht.test(a.type||"")&&e.push(a);return u},cleanData:function(t){for(var n,e,l,a,i=Q.event.special,r=0;void 0!==(e=t[r]);r++){if(Q.acceptData(e)&&(a=e[vt.expando],a&&(n=vt.cache[a]))){if(n.events)for(l in n.events)i[l]?Q.event.remove(e,l):Q.removeEvent(e,l,n.handle);vt.cache[a]&&delete vt.cache[a]}delete yt.cache[e[yt.expando]]}}}),Q.fn.extend({text:function(t){return mt(this,function(t){return void 0===t?Q.text(this):this.empty().each(function(){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||(this.textContent=t)})},null,t,arguments.length)},append:function(){return this.domManip(arguments,function(t){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var n=h(this,t);n.appendChild(t)}})},prepend:function(){return this.domManip(arguments,function(t){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var n=h(this,t);n.insertBefore(t,n.firstChild)}})},before:function(){return this.domManip(arguments,function(t){this.parentNode&&this.parentNode.insertBefore(t,this)})},after:function(){return this.domManip(arguments,function(t){this.parentNode&&this.parentNode.insertBefore(t,this.nextSibling)})},remove:function(t,n){for(var e,l=t?Q.filter(t,this):this,a=0;null!=(e=l[a]);a++)n||1!==e.nodeType||Q.cleanData(v(e)),e.parentNode&&(n&&Q.contains(e.ownerDocument,e)&&p(v(e,"script")),e.parentNode.removeChild(e));return this},empty:function(){for(var t,n=0;null!=(t=this[n]);n++)1===t.nodeType&&(Q.cleanData(v(t,!1)),t.textContent="");return this},clone:function(t,n){return t=null!=t&&t,n=null==n?t:n,this.map(function(){return Q.clone(this,t,n)})},html:function(t){return mt(this,function(t){var n=this[0]||{},e=0,l=this.length;if(void 0===t&&1===n.nodeType)return n.innerHTML;if("string"==typeof t&&!Ot.test(t)&&!Rt[(Dt.exec(t)||["",""])[1].toLowerCase()]){t=t.replace(Pt,"<$1></$2>");try{for(;e<l;e++)n=this[e]||{},1===n.nodeType&&(Q.cleanData(v(n,!1)),n.innerHTML=t);n=0}catch(a){}}n&&this.empty().append(t)},null,t,arguments.length)},replaceWith:function(){var t=arguments[0];return this.domManip(arguments,function(n){t=this.parentNode,Q.cleanData(v(this)),t&&t.replaceChild(n,this)}),t&&(t.length||t.nodeType)?this:this.remove()},detach:function(t){return this.remove(t,!0)},domManip:function(t,n){t=q.apply([],t);var e,l,a,i,r,o,s=0,g=this.length,u=this,c=g-1,h=t[0],p=Q.isFunction(h);if(p||g>1&&"string"==typeof h&&!Z.checkClone&&Et.test(h))return this.each(function(e){var l=u.eq(e);p&&(t[0]=h.call(this,e,l.html())),l.domManip(t,n)});if(g&&(e=Q.buildFragment(t,this[0].ownerDocument,!1,this),l=e.firstChild,1===e.childNodes.length&&(e=l),l)){for(a=Q.map(v(e,"script"),d),i=a.length;s<g;s++)r=e,s!==c&&(r=Q.clone(r,!0,!0),i&&Q.merge(a,v(r,"script"))),n.call(this[s],r,s);if(i)for(o=a[a.length-1].ownerDocument,Q.map(a,f),s=0;s<i;s++)r=a[s],Ht.test(r.type||"")&&!vt.access(r,"globalEval")&&Q.contains(o,r)&&(r.src?Q._evalUrl&&Q._evalUrl(r.src):Q.globalEval(r.textContent.replace(It,"")))}return this}}),Q.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(t,n){Q.fn[t]=function(t){for(var e,l=[],a=Q(t),i=a.length-1,r=0;r<=i;r++)e=r===i?this:this.clone(!0),Q(a[r])[n](e),
U.apply(l,e.get());return this.pushStack(l)}});var Wt,Ft={},jt=/^margin/,Gt=new RegExp("^("+_t+")(?!px)[a-z%]+$","i"),$t=function(n){return n.ownerDocument.defaultView.opener?n.ownerDocument.defaultView.getComputedStyle(n,null):t.getComputedStyle(n,null)};!function(){function n(){r.style.cssText="-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;display:block;margin-top:1%;top:1%;border:1px;padding:1px;width:4px;position:absolute",r.innerHTML="",a.appendChild(i);var n=t.getComputedStyle(r,null);e="1%"!==n.top,l="4px"===n.width,a.removeChild(i)}var e,l,a=Y.documentElement,i=Y.createElement("div"),r=Y.createElement("div");r.style&&(r.style.backgroundClip="content-box",r.cloneNode(!0).style.backgroundClip="",Z.clearCloneStyle="content-box"===r.style.backgroundClip,i.style.cssText="border:0;width:0;height:0;top:0;left:-9999px;margin-top:1px;position:absolute",i.appendChild(r),t.getComputedStyle&&Q.extend(Z,{pixelPosition:function(){return n(),e},boxSizingReliable:function(){return null==l&&n(),l},reliableMarginRight:function(){var n,e=r.appendChild(Y.createElement("div"));return e.style.cssText=r.style.cssText="-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:0",e.style.marginRight=e.style.width="0",r.style.width="1px",a.appendChild(i),n=!parseFloat(t.getComputedStyle(e,null).marginRight),a.removeChild(i),r.removeChild(e),n}}))}(),Q.swap=function(t,n,e,l){var a,i,r={};for(i in n)r[i]=t.style[i],t.style[i]=n[i];a=e.apply(t,l||[]);for(i in n)t.style[i]=r[i];return a};var qt=/^(none|table(?!-c[ea]).+)/,Ut=new RegExp("^("+_t+")(.*)$","i"),zt=new RegExp("^([+-])=("+_t+")","i"),Vt={position:"absolute",visibility:"hidden",display:"block"},Jt={letterSpacing:"0",fontWeight:"400"},Kt=["Webkit","O","Moz","ms"];Q.extend({cssHooks:{opacity:{get:function(t,n){if(n){var e=_(t,"opacity");return""===e?"1":e}}}},cssNumber:{columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{"float":"cssFloat"},style:function(t,n,e,l){if(t&&3!==t.nodeType&&8!==t.nodeType&&t.style){var a,i,r,o=Q.camelCase(n),s=t.style;return n=Q.cssProps[o]||(Q.cssProps[o]=k(s,o)),r=Q.cssHooks[n]||Q.cssHooks[o],void 0===e?r&&"get"in r&&void 0!==(a=r.get(t,!1,l))?a:s[n]:(i=typeof e,"string"===i&&(a=zt.exec(e))&&(e=(a[1]+1)*a[2]+parseFloat(Q.css(t,n)),i="number"),null!=e&&e===e&&("number"!==i||Q.cssNumber[o]||(e+="px"),Z.clearCloneStyle||""!==e||0!==n.indexOf("background")||(s[n]="inherit"),r&&"set"in r&&void 0===(e=r.set(t,e,l))||(s[n]=e)),void 0)}},css:function(t,n,e,l){var a,i,r,o=Q.camelCase(n);return n=Q.cssProps[o]||(Q.cssProps[o]=k(t.style,o)),r=Q.cssHooks[n]||Q.cssHooks[o],r&&"get"in r&&(a=r.get(t,!0,e)),void 0===a&&(a=_(t,n,l)),"normal"===a&&n in Jt&&(a=Jt[n]),""===e||e?(i=parseFloat(a),e===!0||Q.isNumeric(i)?i||0:a):a}}),Q.each(["height","width"],function(t,n){Q.cssHooks[n]={get:function(t,e,l){if(e)return qt.test(Q.css(t,"display"))&&0===t.offsetWidth?Q.swap(t,Vt,function(){return L(t,n,l)}):L(t,n,l)},set:function(t,e,l){var a=l&&$t(t);return S(t,e,l?x(t,n,l,"border-box"===Q.css(t,"boxSizing",!1,a),a):0)}}}),Q.cssHooks.marginRight=C(Z.reliableMarginRight,function(t,n){if(n)return Q.swap(t,{display:"inline-block"},_,[t,"marginRight"])}),Q.each({margin:"",padding:"",border:"Width"},function(t,n){Q.cssHooks[t+n]={expand:function(e){for(var l=0,a={},i="string"==typeof e?e.split(" "):[e];l<4;l++)a[t+Ct[l]+n]=i[l]||i[l-2]||i[0];return a}},jt.test(t)||(Q.cssHooks[t+n].set=S)}),Q.fn.extend({css:function(t,n){return mt(this,function(t,n,e){var l,a,i={},r=0;if(Q.isArray(n)){for(l=$t(t),a=n.length;r<a;r++)i[n[r]]=Q.css(t,n[r],!1,l);return i}return void 0!==e?Q.style(t,n,e):Q.css(t,n)},t,n,arguments.length>1)},show:function(){return M(this,!0)},hide:function(){return M(this)},toggle:function(t){return"boolean"==typeof t?t?this.show():this.hide():this.each(function(){kt(this)?Q(this).show():Q(this).hide()})}}),Q.Tween=T,T.prototype={constructor:T,init:function(t,n,e,l,a,i){this.elem=t,this.prop=e,this.easing=a||"swing",this.options=n,this.start=this.now=this.cur(),this.end=l,this.unit=i||(Q.cssNumber[e]?"":"px")},cur:function(){var t=T.propHooks[this.prop];return t&&t.get?t.get(this):T.propHooks._default.get(this)},run:function(t){var n,e=T.propHooks[this.prop];return this.options.duration?this.pos=n=Q.easing[this.easing](t,this.options.duration*t,0,1,this.options.duration):this.pos=n=t,this.now=(this.end-this.start)*n+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),e&&e.set?e.set(this):T.propHooks._default.set(this),this}},T.prototype.init.prototype=T.prototype,T.propHooks={_default:{get:function(t){var n;return null==t.elem[t.prop]||t.elem.style&&null!=t.elem.style[t.prop]?(n=Q.css(t.elem,t.prop,""),n&&"auto"!==n?n:0):t.elem[t.prop]},set:function(t){Q.fx.step[t.prop]?Q.fx.step[t.prop](t):t.elem.style&&(null!=t.elem.style[Q.cssProps[t.prop]]||Q.cssHooks[t.prop])?Q.style(t.elem,t.prop,t.now+t.unit):t.elem[t.prop]=t.now}}},T.propHooks.scrollTop=T.propHooks.scrollLeft={set:function(t){t.elem.nodeType&&t.elem.parentNode&&(t.elem[t.prop]=t.now)}},Q.easing={linear:function(t){return t},swing:function(t){return.5-Math.cos(t*Math.PI)/2}},Q.fx=T.prototype.init,Q.fx.step={};var Zt,Yt,Xt=/^(?:toggle|show|hide)$/,Qt=new RegExp("^(?:([+-])=|)("+_t+")([a-z%]*)$","i"),tn=/queueHooks$/,nn=[B],en={"*":[function(t,n){var e=this.createTween(t,n),l=e.cur(),a=Qt.exec(n),i=a&&a[3]||(Q.cssNumber[t]?"":"px"),r=(Q.cssNumber[t]||"px"!==i&&+l)&&Qt.exec(Q.css(e.elem,t)),o=1,s=20;if(r&&r[3]!==i){i=i||r[3],a=a||[],r=+l||1;do o=o||".5",r/=o,Q.style(e.elem,t,r+i);while(o!==(o=e.cur()/l)&&1!==o&&--s)}return a&&(r=e.start=+r||+l||0,e.unit=i,e.end=a[1]?r+(a[1]+1)*a[2]:+a[2]),e}]};Q.Animation=Q.extend(E,{tweener:function(t,n){Q.isFunction(t)?(n=t,t=["*"]):t=t.split(" ");for(var e,l=0,a=t.length;l<a;l++)e=t[l],en[e]=en[e]||[],en[e].unshift(n)},prefilter:function(t,n){n?nn.unshift(t):nn.push(t)}}),Q.speed=function(t,n,e){var l=t&&"object"==typeof t?Q.extend({},t):{complete:e||!e&&n||Q.isFunction(t)&&t,duration:t,easing:e&&n||n&&!Q.isFunction(n)&&n};return l.duration=Q.fx.off?0:"number"==typeof l.duration?l.duration:l.duration in Q.fx.speeds?Q.fx.speeds[l.duration]:Q.fx.speeds._default,null!=l.queue&&l.queue!==!0||(l.queue="fx"),l.old=l.complete,l.complete=function(){Q.isFunction(l.old)&&l.old.call(this),l.queue&&Q.dequeue(this,l.queue)},l},Q.fn.extend({fadeTo:function(t,n,e,l){return this.filter(kt).css("opacity",0).show().end().animate({opacity:n},t,e,l)},animate:function(t,n,e,l){var a=Q.isEmptyObject(t),i=Q.speed(n,e,l),r=function(){var n=E(this,Q.extend({},t),i);(a||vt.get(this,"finish"))&&n.stop(!0)};return r.finish=r,a||i.queue===!1?this.each(r):this.queue(i.queue,r)},stop:function(t,n,e){var l=function(t){var n=t.stop;delete t.stop,n(e)};return"string"!=typeof t&&(e=n,n=t,t=void 0),n&&t!==!1&&this.queue(t||"fx",[]),this.each(function(){var n=!0,a=null!=t&&t+"queueHooks",i=Q.timers,r=vt.get(this);if(a)r[a]&&r[a].stop&&l(r[a]);else for(a in r)r[a]&&r[a].stop&&tn.test(a)&&l(r[a]);for(a=i.length;a--;)i[a].elem!==this||null!=t&&i[a].queue!==t||(i[a].anim.stop(e),n=!1,i.splice(a,1));!n&&e||Q.dequeue(this,t)})},finish:function(t){return t!==!1&&(t=t||"fx"),this.each(function(){var n,e=vt.get(this),l=e[t+"queue"],a=e[t+"queueHooks"],i=Q.timers,r=l?l.length:0;for(e.finish=!0,Q.queue(this,t,[]),a&&a.stop&&a.stop.call(this,!0),n=i.length;n--;)i[n].elem===this&&i[n].queue===t&&(i[n].anim.stop(!0),i.splice(n,1));for(n=0;n<r;n++)l[n]&&l[n].finish&&l[n].finish.call(this);delete e.finish})}}),Q.each(["toggle","show","hide"],function(t,n){var e=Q.fn[n];Q.fn[n]=function(t,l,a){return null==t||"boolean"==typeof t?e.apply(this,arguments):this.animate(P(n,!0),t,l,a)}}),Q.each({slideDown:P("show"),slideUp:P("hide"),slideToggle:P("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(t,n){Q.fn[t]=function(t,e,l){return this.animate(n,t,e,l)}}),Q.timers=[],Q.fx.tick=function(){var t,n=0,e=Q.timers;for(Zt=Q.now();n<e.length;n++)t=e[n],t()||e[n]!==t||e.splice(n--,1);e.length||Q.fx.stop(),Zt=void 0},Q.fx.timer=function(t){Q.timers.push(t),t()?Q.fx.start():Q.timers.pop()},Q.fx.interval=13,Q.fx.start=function(){Yt||(Yt=setInterval(Q.fx.tick,Q.fx.interval))},Q.fx.stop=function(){clearInterval(Yt),Yt=null},Q.fx.speeds={slow:600,fast:200,_default:400},Q.fn.delay=function(t,n){return t=Q.fx?Q.fx.speeds[t]||t:t,n=n||"fx",this.queue(n,function(n,e){var l=setTimeout(n,t);e.stop=function(){clearTimeout(l)}})},function(){var t=Y.createElement("input"),n=Y.createElement("select"),e=n.appendChild(Y.createElement("option"));t.type="checkbox",Z.checkOn=""!==t.value,Z.optSelected=e.selected,n.disabled=!0,Z.optDisabled=!e.disabled,t=Y.createElement("input"),t.value="t",t.type="radio",Z.radioValue="t"===t.value}();var ln,an,rn=Q.expr.attrHandle;Q.fn.extend({attr:function(t,n){return mt(this,Q.attr,t,n,arguments.length>1)},removeAttr:function(t){return this.each(function(){Q.removeAttr(this,t)})}}),Q.extend({attr:function(t,n,e){var l,a,i=t.nodeType;if(t&&3!==i&&8!==i&&2!==i)return typeof t.getAttribute===xt?Q.prop(t,n,e):(1===i&&Q.isXMLDoc(t)||(n=n.toLowerCase(),l=Q.attrHooks[n]||(Q.expr.match.bool.test(n)?an:ln)),void 0===e?l&&"get"in l&&null!==(a=l.get(t,n))?a:(a=Q.find.attr(t,n),null==a?void 0:a):null!==e?l&&"set"in l&&void 0!==(a=l.set(t,e,n))?a:(t.setAttribute(n,e+""),e):void Q.removeAttr(t,n))},removeAttr:function(t,n){var e,l,a=0,i=n&&n.match(dt);if(i&&1===t.nodeType)for(;e=i[a++];)l=Q.propFix[e]||e,Q.expr.match.bool.test(e)&&(t[l]=!1),t.removeAttribute(e)},attrHooks:{type:{set:function(t,n){if(!Z.radioValue&&"radio"===n&&Q.nodeName(t,"input")){var e=t.value;return t.setAttribute("type",n),e&&(t.value=e),n}}}}}),an={set:function(t,n,e){return n===!1?Q.removeAttr(t,e):t.setAttribute(e,e),e}},Q.each(Q.expr.match.bool.source.match(/\w+/g),function(t,n){var e=rn[n]||Q.find.attr;rn[n]=function(t,n,l){var a,i;return l||(i=rn[n],rn[n]=a,a=null!=e(t,n,l)?n.toLowerCase():null,rn[n]=i),a}});var on=/^(?:input|select|textarea|button)$/i;Q.fn.extend({prop:function(t,n){return mt(this,Q.prop,t,n,arguments.length>1)},removeProp:function(t){return this.each(function(){delete this[Q.propFix[t]||t]})}}),Q.extend({propFix:{"for":"htmlFor","class":"className"},prop:function(t,n,e){var l,a,i,r=t.nodeType;if(t&&3!==r&&8!==r&&2!==r)return i=1!==r||!Q.isXMLDoc(t),i&&(n=Q.propFix[n]||n,a=Q.propHooks[n]),void 0!==e?a&&"set"in a&&void 0!==(l=a.set(t,e,n))?l:t[n]=e:a&&"get"in a&&null!==(l=a.get(t,n))?l:t[n]},propHooks:{tabIndex:{get:function(t){return t.hasAttribute("tabindex")||on.test(t.nodeName)||t.href?t.tabIndex:-1}}}}),Z.optSelected||(Q.propHooks.selected={get:function(t){var n=t.parentNode;return n&&n.parentNode&&n.parentNode.selectedIndex,null}}),Q.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){Q.propFix[this.toLowerCase()]=this});var sn=/[\t\r\n\f]/g;Q.fn.extend({addClass:function(t){var n,e,l,a,i,r,o="string"==typeof t&&t,s=0,g=this.length;if(Q.isFunction(t))return this.each(function(n){Q(this).addClass(t.call(this,n,this.className))});if(o)for(n=(t||"").match(dt)||[];s<g;s++)if(e=this[s],l=1===e.nodeType&&(e.className?(" "+e.className+" ").replace(sn," "):" ")){for(i=0;a=n[i++];)l.indexOf(" "+a+" ")<0&&(l+=a+" ");r=Q.trim(l),e.className!==r&&(e.className=r)}return this},removeClass:function(t){var n,e,l,a,i,r,o=0===arguments.length||"string"==typeof t&&t,s=0,g=this.length;if(Q.isFunction(t))return this.each(function(n){Q(this).removeClass(t.call(this,n,this.className))});if(o)for(n=(t||"").match(dt)||[];s<g;s++)if(e=this[s],l=1===e.nodeType&&(e.className?(" "+e.className+" ").replace(sn," "):"")){for(i=0;a=n[i++];)for(;l.indexOf(" "+a+" ")>=0;)l=l.replace(" "+a+" "," ");r=t?Q.trim(l):"",e.className!==r&&(e.className=r)}return this},toggleClass:function(t,n){var e=typeof t;return"boolean"==typeof n&&"string"===e?n?this.addClass(t):this.removeClass(t):Q.isFunction(t)?this.each(function(e){Q(this).toggleClass(t.call(this,e,this.className,n),n)}):this.each(function(){if("string"===e)for(var n,l=0,a=Q(this),i=t.match(dt)||[];n=i[l++];)a.hasClass(n)?a.removeClass(n):a.addClass(n);else e!==xt&&"boolean"!==e||(this.className&&vt.set(this,"__className__",this.className),this.className=this.className||t===!1?"":vt.get(this,"__className__")||"")})},hasClass:function(t){for(var n=" "+t+" ",e=0,l=this.length;e<l;e++)if(1===this[e].nodeType&&(" "+this[e].className+" ").replace(sn," ").indexOf(n)>=0)return!0;return!1}});var gn=/\r/g;Q.fn.extend({val:function(t){var n,e,l,a=this[0];{if(arguments.length)return l=Q.isFunction(t),this.each(function(e){var a;1===this.nodeType&&(a=l?t.call(this,e,Q(this).val()):t,null==a?a="":"number"==typeof a?a+="":Q.isArray(a)&&(a=Q.map(a,function(t){return null==t?"":t+""})),n=Q.valHooks[this.type]||Q.valHooks[this.nodeName.toLowerCase()],n&&"set"in n&&void 0!==n.set(this,a,"value")||(this.value=a))});if(a)return n=Q.valHooks[a.type]||Q.valHooks[a.nodeName.toLowerCase()],n&&"get"in n&&void 0!==(e=n.get(a,"value"))?e:(e=a.value,"string"==typeof e?e.replace(gn,""):null==e?"":e)}}}),Q.extend({valHooks:{option:{get:function(t){var n=Q.find.attr(t,"value");return null!=n?n:Q.trim(Q.text(t))}},select:{get:function(t){for(var n,e,l=t.options,a=t.selectedIndex,i="select-one"===t.type||a<0,r=i?null:[],o=i?a+1:l.length,s=a<0?o:i?a:0;s<o;s++)if(e=l[s],(e.selected||s===a)&&(Z.optDisabled?!e.disabled:null===e.getAttribute("disabled"))&&(!e.parentNode.disabled||!Q.nodeName(e.parentNode,"optgroup"))){if(n=Q(e).val(),i)return n;r.push(n)}return r},set:function(t,n){for(var e,l,a=t.options,i=Q.makeArray(n),r=a.length;r--;)l=a[r],(l.selected=Q.inArray(l.value,i)>=0)&&(e=!0);return e||(t.selectedIndex=-1),i}}}}),Q.each(["radio","checkbox"],function(){Q.valHooks[this]={set:function(t,n){if(Q.isArray(n))return t.checked=Q.inArray(Q(t).val(),n)>=0}},Z.checkOn||(Q.valHooks[this].get=function(t){return null===t.getAttribute("value")?"on":t.value})}),Q.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "),function(t,n){Q.fn[n]=function(t,e){return arguments.length>0?this.on(n,null,t,e):this.trigger(n)}}),Q.fn.extend({hover:function(t,n){return this.mouseenter(t).mouseleave(n||t)},bind:function(t,n,e){return this.on(t,null,n,e)},unbind:function(t,n){return this.off(t,null,n)},delegate:function(t,n,e,l){return this.on(n,t,e,l)},undelegate:function(t,n,e){return 1===arguments.length?this.off(t,"**"):this.off(n,t||"**",e)}});var un=Q.now(),cn=/\?/;Q.parseJSON=function(t){return JSON.parse(t+"")},Q.parseXML=function(t){var n,e;if(!t||"string"!=typeof t)return null;try{e=new DOMParser,n=e.parseFromString(t,"text/xml")}catch(l){n=void 0}return n&&!n.getElementsByTagName("parsererror").length||Q.error("Invalid XML: "+t),n};var hn=/#.*$/,dn=/([?&])_=[^&]*/,fn=/^(.*?):[ \t]*([^\r\n]*)$/gm,pn=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,mn=/^(?:GET|HEAD)$/,vn=/^\/\//,yn=/^([\w.+-]+:)(?:\/\/(?:[^\/?#]*@|)([^\/?#:]*)(?::(\d+)|)|)/,bn={},wn={},_n="*/".concat("*"),Cn=t.location.href,kn=yn.exec(Cn.toLowerCase())||[];Q.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:Cn,type:"GET",isLocal:pn.test(kn[1]),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":_n,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/xml/,html:/html/,json:/json/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":Q.parseJSON,"text xml":Q.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(t,n){return n?I(I(t,Q.ajaxSettings),n):I(Q.ajaxSettings,t)},ajaxPrefilter:H(bn),ajaxTransport:H(wn),ajax:function(t,n){function e(t,n,e,r){var s,u,v,y,w,C=n;2!==b&&(b=2,o&&clearTimeout(o),l=void 0,i=r||"",_.readyState=t>0?4:0,s=t>=200&&t<300||304===t,e&&(y=R(c,_,e)),y=W(c,y,_,s),s?(c.ifModified&&(w=_.getResponseHeader("Last-Modified"),w&&(Q.lastModified[a]=w),w=_.getResponseHeader("etag"),w&&(Q.etag[a]=w)),204===t||"HEAD"===c.type?C="nocontent":304===t?C="notmodified":(C=y.state,u=y.data,v=y.error,s=!v)):(v=C,!t&&C||(C="error",t<0&&(t=0))),_.status=t,_.statusText=(n||C)+"",s?f.resolveWith(h,[u,C,_]):f.rejectWith(h,[_,C,v]),_.statusCode(m),m=void 0,g&&d.trigger(s?"ajaxSuccess":"ajaxError",[_,c,s?u:v]),p.fireWith(h,[_,C]),g&&(d.trigger("ajaxComplete",[_,c]),--Q.active||Q.event.trigger("ajaxStop")))}"object"==typeof t&&(n=t,t=void 0),n=n||{};var l,a,i,r,o,s,g,u,c=Q.ajaxSetup({},n),h=c.context||c,d=c.context&&(h.nodeType||h.jquery)?Q(h):Q.event,f=Q.Deferred(),p=Q.Callbacks("once memory"),m=c.statusCode||{},v={},y={},b=0,w="canceled",_={readyState:0,getResponseHeader:function(t){var n;if(2===b){if(!r)for(r={};n=fn.exec(i);)r[n[1].toLowerCase()]=n[2];n=r[t.toLowerCase()]}return null==n?null:n},getAllResponseHeaders:function(){return 2===b?i:null},setRequestHeader:function(t,n){var e=t.toLowerCase();return b||(t=y[e]=y[e]||t,v[t]=n),this},overrideMimeType:function(t){return b||(c.mimeType=t),this},statusCode:function(t){var n;if(t)if(b<2)for(n in t)m[n]=[m[n],t[n]];else _.always(t[_.status]);return this},abort:function(t){var n=t||w;return l&&l.abort(n),e(0,n),this}};if(f.promise(_).complete=p.add,_.success=_.done,_.error=_.fail,c.url=((t||c.url||Cn)+"").replace(hn,"").replace(vn,kn[1]+"//"),c.type=n.method||n.type||c.method||c.type,c.dataTypes=Q.trim(c.dataType||"*").toLowerCase().match(dt)||[""],null==c.crossDomain&&(s=yn.exec(c.url.toLowerCase()),c.crossDomain=!(!s||s[1]===kn[1]&&s[2]===kn[2]&&(s[3]||("http:"===s[1]?"80":"443"))===(kn[3]||("http:"===kn[1]?"80":"443")))),c.data&&c.processData&&"string"!=typeof c.data&&(c.data=Q.param(c.data,c.traditional)),N(bn,c,n,_),2===b)return _;g=Q.event&&c.global,g&&0===Q.active++&&Q.event.trigger("ajaxStart"),c.type=c.type.toUpperCase(),c.hasContent=!mn.test(c.type),a=c.url,c.hasContent||(c.data&&(a=c.url+=(cn.test(a)?"&":"?")+c.data,delete c.data),c.cache===!1&&(c.url=dn.test(a)?a.replace(dn,"$1_="+un++):a+(cn.test(a)?"&":"?")+"_="+un++)),c.ifModified&&(Q.lastModified[a]&&_.setRequestHeader("If-Modified-Since",Q.lastModified[a]),Q.etag[a]&&_.setRequestHeader("If-None-Match",Q.etag[a])),(c.data&&c.hasContent&&c.contentType!==!1||n.contentType)&&_.setRequestHeader("Content-Type",c.contentType),_.setRequestHeader("Accept",c.dataTypes[0]&&c.accepts[c.dataTypes[0]]?c.accepts[c.dataTypes[0]]+("*"!==c.dataTypes[0]?", "+_n+"; q=0.01":""):c.accepts["*"]);for(u in c.headers)_.setRequestHeader(u,c.headers[u]);if(c.beforeSend&&(c.beforeSend.call(h,_,c)===!1||2===b))return _.abort();w="abort";for(u in{success:1,error:1,complete:1})_[u](c[u]);if(l=N(wn,c,n,_)){_.readyState=1,g&&d.trigger("ajaxSend",[_,c]),c.async&&c.timeout>0&&(o=setTimeout(function(){_.abort("timeout")},c.timeout));try{b=1,l.send(v,e)}catch(C){if(!(b<2))throw C;e(-1,C)}}else e(-1,"No Transport");return _},getJSON:function(t,n,e){return Q.get(t,n,e,"json")},getScript:function(t,n){return Q.get(t,void 0,n,"script")}}),Q.each(["get","post"],function(t,n){Q[n]=function(t,e,l,a){return Q.isFunction(e)&&(a=a||l,l=e,e=void 0),Q.ajax({url:t,type:n,dataType:a,data:e,success:l})}}),Q._evalUrl=function(t){return Q.ajax({url:t,type:"GET",dataType:"script",async:!1,global:!1,"throws":!0})},Q.fn.extend({wrapAll:function(t){var n;return Q.isFunction(t)?this.each(function(n){Q(this).wrapAll(t.call(this,n))}):(this[0]&&(n=Q(t,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&n.insertBefore(this[0]),n.map(function(){for(var t=this;t.firstElementChild;)t=t.firstElementChild;return t}).append(this)),this)},wrapInner:function(t){return Q.isFunction(t)?this.each(function(n){Q(this).wrapInner(t.call(this,n))}):this.each(function(){var n=Q(this),e=n.contents();e.length?e.wrapAll(t):n.append(t)})},wrap:function(t){var n=Q.isFunction(t);return this.each(function(e){Q(this).wrapAll(n?t.call(this,e):t)})},unwrap:function(){return this.parent().each(function(){Q.nodeName(this,"body")||Q(this).replaceWith(this.childNodes)}).end()}}),Q.expr.filters.hidden=function(t){return t.offsetWidth<=0&&t.offsetHeight<=0},Q.expr.filters.visible=function(t){return!Q.expr.filters.hidden(t)};var Sn=/%20/g,xn=/\[\]$/,Ln=/\r?\n/g,Mn=/^(?:submit|button|image|reset|file)$/i,Tn=/^(?:input|select|textarea|keygen)/i;Q.param=function(t,n){var e,l=[],a=function(t,n){n=Q.isFunction(n)?n():null==n?"":n,l[l.length]=encodeURIComponent(t)+"="+encodeURIComponent(n)};if(void 0===n&&(n=Q.ajaxSettings&&Q.ajaxSettings.traditional),Q.isArray(t)||t.jquery&&!Q.isPlainObject(t))Q.each(t,function(){a(this.name,this.value)});else for(e in t)F(e,t[e],n,a);return l.join("&").replace(Sn,"+")},Q.fn.extend({serialize:function(){return Q.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var t=Q.prop(this,"elements");return t?Q.makeArray(t):this}).filter(function(){var t=this.type;return this.name&&!Q(this).is(":disabled")&&Tn.test(this.nodeName)&&!Mn.test(t)&&(this.checked||!St.test(t))}).map(function(t,n){var e=Q(this).val();return null==e?null:Q.isArray(e)?Q.map(e,function(t){return{name:n.name,value:t.replace(Ln,"\r\n")}}):{name:n.name,value:e.replace(Ln,"\r\n")}}).get()}}),Q.ajaxSettings.xhr=function(){try{return new XMLHttpRequest}catch(t){}};var An=0,Pn={},Dn={0:200,1223:204},Bn=Q.ajaxSettings.xhr();t.attachEvent&&t.attachEvent("onunload",function(){for(var t in Pn)Pn[t]()}),Z.cors=!!Bn&&"withCredentials"in Bn,Z.ajax=Bn=!!Bn,Q.ajaxTransport(function(t){var n;if(Z.cors||Bn&&!t.crossDomain)return{send:function(e,l){var a,i=t.xhr(),r=++An;if(i.open(t.type,t.url,t.async,t.username,t.password),t.xhrFields)for(a in t.xhrFields)i[a]=t.xhrFields[a];t.mimeType&&i.overrideMimeType&&i.overrideMimeType(t.mimeType),t.crossDomain||e["X-Requested-With"]||(e["X-Requested-With"]="XMLHttpRequest");for(a in e)i.setRequestHeader(a,e[a]);n=function(t){return function(){n&&(delete Pn[r],n=i.onload=i.onerror=null,"abort"===t?i.abort():"error"===t?l(i.status,i.statusText):l(Dn[i.status]||i.status,i.statusText,"string"==typeof i.responseText?{text:i.responseText}:void 0,i.getAllResponseHeaders()))}},i.onload=n(),i.onerror=n("error"),n=Pn[r]=n("abort");try{i.send(t.hasContent&&t.data||null)}catch(o){if(n)throw o}},abort:function(){n&&n()}}}),Q.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/(?:java|ecma)script/},converters:{"text script":function(t){return Q.globalEval(t),t}}}),Q.ajaxPrefilter("script",function(t){void 0===t.cache&&(t.cache=!1),t.crossDomain&&(t.type="GET")}),Q.ajaxTransport("script",function(t){if(t.crossDomain){var n,e;return{send:function(l,a){n=Q("<script>").prop({async:!0,charset:t.scriptCharset,src:t.url}).on("load error",e=function(t){n.remove(),e=null,t&&a("error"===t.type?404:200,t.type)}),Y.head.appendChild(n[0])},abort:function(){e&&e()}}}});var On=[],En=/(=)\?(?=&|$)|\?\?/;Q.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var t=On.pop()||Q.expando+"_"+un++;return this[t]=!0,t}}),Q.ajaxPrefilter("json jsonp",function(n,e,l){var a,i,r,o=n.jsonp!==!1&&(En.test(n.url)?"url":"string"==typeof n.data&&!(n.contentType||"").indexOf("application/x-www-form-urlencoded")&&En.test(n.data)&&"data");if(o||"jsonp"===n.dataTypes[0])return a=n.jsonpCallback=Q.isFunction(n.jsonpCallback)?n.jsonpCallback():n.jsonpCallback,o?n[o]=n[o].replace(En,"$1"+a):n.jsonp!==!1&&(n.url+=(cn.test(n.url)?"&":"?")+n.jsonp+"="+a),n.converters["script json"]=function(){return r||Q.error(a+" was not called"),r[0]},n.dataTypes[0]="json",i=t[a],t[a]=function(){r=arguments},l.always(function(){t[a]=i,n[a]&&(n.jsonpCallback=e.jsonpCallback,On.push(a)),r&&Q.isFunction(i)&&i(r[0]),r=i=void 0}),"script"}),Q.parseHTML=function(t,n,e){if(!t||"string"!=typeof t)return null;"boolean"==typeof n&&(e=n,n=!1),n=n||Y;var l=rt.exec(t),a=!e&&[];return l?[n.createElement(l[1])]:(l=Q.buildFragment([t],n,a),a&&a.length&&Q(a).remove(),Q.merge([],l.childNodes))};var Hn=Q.fn.load;Q.fn.load=function(t,n,e){if("string"!=typeof t&&Hn)return Hn.apply(this,arguments);var l,a,i,r=this,o=t.indexOf(" ");return o>=0&&(l=Q.trim(t.slice(o)),t=t.slice(0,o)),Q.isFunction(n)?(e=n,n=void 0):n&&"object"==typeof n&&(a="POST"),r.length>0&&Q.ajax({url:t,type:a,dataType:"html",data:n}).done(function(t){i=arguments,r.html(l?Q("<div>").append(Q.parseHTML(t)).find(l):t)}).complete(e&&function(t,n){r.each(e,i||[t.responseText,n,t])}),this},Q.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(t,n){Q.fn[n]=function(t){return this.on(n,t)}}),Q.expr.filters.animated=function(t){return Q.grep(Q.timers,function(n){return t===n.elem}).length};var Nn=t.document.documentElement;Q.offset={setOffset:function(t,n,e){var l,a,i,r,o,s,g,u=Q.css(t,"position"),c=Q(t),h={};"static"===u&&(t.style.position="relative"),o=c.offset(),i=Q.css(t,"top"),s=Q.css(t,"left"),g=("absolute"===u||"fixed"===u)&&(i+s).indexOf("auto")>-1,g?(l=c.position(),r=l.top,a=l.left):(r=parseFloat(i)||0,a=parseFloat(s)||0),Q.isFunction(n)&&(n=n.call(t,e,o)),null!=n.top&&(h.top=n.top-o.top+r),null!=n.left&&(h.left=n.left-o.left+a),"using"in n?n.using.call(t,h):c.css(h)}},Q.fn.extend({offset:function(t){if(arguments.length)return void 0===t?this:this.each(function(n){Q.offset.setOffset(this,t,n)});var n,e,l=this[0],a={top:0,left:0},i=l&&l.ownerDocument;if(i)return n=i.documentElement,Q.contains(n,l)?(typeof l.getBoundingClientRect!==xt&&(a=l.getBoundingClientRect()),e=j(i),{top:a.top+e.pageYOffset-n.clientTop,left:a.left+e.pageXOffset-n.clientLeft}):a},position:function(){if(this[0]){var t,n,e=this[0],l={top:0,left:0};return"fixed"===Q.css(e,"position")?n=e.getBoundingClientRect():(t=this.offsetParent(),n=this.offset(),Q.nodeName(t[0],"html")||(l=t.offset()),l.top+=Q.css(t[0],"borderTopWidth",!0),l.left+=Q.css(t[0],"borderLeftWidth",!0)),{top:n.top-l.top-Q.css(e,"marginTop",!0),left:n.left-l.left-Q.css(e,"marginLeft",!0)}}},offsetParent:function(){return this.map(function(){for(var t=this.offsetParent||Nn;t&&!Q.nodeName(t,"html")&&"static"===Q.css(t,"position");)t=t.offsetParent;return t||Nn})}}),Q.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(n,e){var l="pageYOffset"===e;Q.fn[n]=function(a){return mt(this,function(n,a,i){var r=j(n);return void 0===i?r?r[e]:n[a]:void(r?r.scrollTo(l?t.pageXOffset:i,l?i:t.pageYOffset):n[a]=i)},n,a,arguments.length,null)}}),Q.each(["top","left"],function(t,n){Q.cssHooks[n]=C(Z.pixelPosition,function(t,e){if(e)return e=_(t,n),Gt.test(e)?Q(t).position()[n]+"px":e})}),Q.each({Height:"height",Width:"width"},function(t,n){Q.each({padding:"inner"+t,content:n,"":"outer"+t},function(e,l){Q.fn[l]=function(l,a){var i=arguments.length&&(e||"boolean"!=typeof l),r=e||(l===!0||a===!0?"margin":"border");return mt(this,function(n,e,l){var a;return Q.isWindow(n)?n.document.documentElement["client"+t]:9===n.nodeType?(a=n.documentElement,Math.max(n.body["scroll"+t],a["scroll"+t],n.body["offset"+t],a["offset"+t],a["client"+t])):void 0===l?Q.css(n,e,r):Q.style(n,e,l,r)},n,i?l:void 0,i,null)}})}),Q.fn.size=function(){return this.length},Q.fn.andSelf=Q.fn.addBack,"function"==typeof define&&define.amd&&define("jquery",[],function(){return Q});var In=t.jQuery,Rn=t.$;return Q.noConflict=function(n){return t.$===Q&&(t.$=Rn),n&&t.jQuery===Q&&(t.jQuery=In),Q},typeof n===xt&&(t.jQuery=t.$=Q),Q}),function(){function t(t){function n(n,e,l,a,i,r){for(;i>=0&&i<r;i+=t){var o=a?a[i]:i;l=e(l,n[o],o,n)}return l}return function(e,l,a,i){l=b(l,i,4);var r=!L(e)&&y.keys(e),o=(r||e).length,s=t>0?0:o-1;return arguments.length<3&&(a=e[r?r[s]:s],s+=t),n(e,l,a,r,s,o)}}function n(t){return function(n,e,l){e=w(e,l);for(var a=x(n),i=t>0?0:a-1;i>=0&&i<a;i+=t)if(e(n[i],i,n))return i;return-1}}function e(t,n,e){return function(l,a,i){var r=0,o=x(l);if("number"==typeof i)t>0?r=i>=0?i:Math.max(i+o,r):o=i>=0?Math.min(i+1,o):i+o+1;else if(e&&i&&o)return i=e(l,a),l[i]===a?i:-1;if(a!==a)return i=n(u.call(l,r,o),y.isNaN),i>=0?i+r:-1;for(i=t>0?r:o-1;i>=0&&i<o;i+=t)if(l[i]===a)return i;return-1}}function l(t,n){var e=D.length,l=t.constructor,a=y.isFunction(l)&&l.prototype||o,i="constructor";for(y.has(t,i)&&!y.contains(n,i)&&n.push(i);e--;)i=D[e],i in t&&t[i]!==a[i]&&!y.contains(n,i)&&n.push(i)}var a=this,i=a._,r=Array.prototype,o=Object.prototype,s=Function.prototype,g=r.push,u=r.slice,c=o.toString,h=o.hasOwnProperty,d=Array.isArray,f=Object.keys,p=s.bind,m=Object.create,v=function(){},y=function(t){return t instanceof y?t:this instanceof y?void(this._wrapped=t):new y(t)};"undefined"!=typeof exports?("undefined"!=typeof module&&module.exports&&(exports=module.exports=y),exports._=y):a._=y,y.VERSION="1.8.3";var b=function(t,n,e){if(void 0===n)return t;switch(null==e?3:e){case 1:return function(e){return t.call(n,e)};case 2:return function(e,l){return t.call(n,e,l)};case 3:return function(e,l,a){return t.call(n,e,l,a)};case 4:return function(e,l,a,i){return t.call(n,e,l,a,i)}}return function(){return t.apply(n,arguments)}},w=function(t,n,e){return null==t?y.identity:y.isFunction(t)?b(t,n,e):y.isObject(t)?y.matcher(t):y.property(t)};y.iteratee=function(t,n){return w(t,n,1/0)};var _=function(t,n){return function(e){var l=arguments.length;if(l<2||null==e)return e;for(var a=1;a<l;a++)for(var i=arguments[a],r=t(i),o=r.length,s=0;s<o;s++){var g=r[s];n&&void 0!==e[g]||(e[g]=i[g])}return e}},C=function(t){if(!y.isObject(t))return{};if(m)return m(t);v.prototype=t;var n=new v;return v.prototype=null,n},k=function(t){return function(n){return null==n?void 0:n[t]}},S=Math.pow(2,53)-1,x=k("length"),L=function(t){var n=x(t);return"number"==typeof n&&n>=0&&n<=S};y.each=y.forEach=function(t,n,e){n=b(n,e);var l,a;if(L(t))for(l=0,a=t.length;l<a;l++)n(t[l],l,t);else{var i=y.keys(t);for(l=0,a=i.length;l<a;l++)n(t[i[l]],i[l],t)}return t},y.map=y.collect=function(t,n,e){n=w(n,e);for(var l=!L(t)&&y.keys(t),a=(l||t).length,i=Array(a),r=0;r<a;r++){var o=l?l[r]:r;i[r]=n(t[o],o,t)}return i},y.reduce=y.foldl=y.inject=t(1),y.reduceRight=y.foldr=t(-1),y.find=y.detect=function(t,n,e){var l;if(l=L(t)?y.findIndex(t,n,e):y.findKey(t,n,e),void 0!==l&&l!==-1)return t[l]},y.filter=y.select=function(t,n,e){var l=[];return n=w(n,e),y.each(t,function(t,e,a){n(t,e,a)&&l.push(t)}),l},y.reject=function(t,n,e){return y.filter(t,y.negate(w(n)),e)},y.every=y.all=function(t,n,e){n=w(n,e);for(var l=!L(t)&&y.keys(t),a=(l||t).length,i=0;i<a;i++){var r=l?l[i]:i;if(!n(t[r],r,t))return!1}return!0},y.some=y.any=function(t,n,e){n=w(n,e);for(var l=!L(t)&&y.keys(t),a=(l||t).length,i=0;i<a;i++){var r=l?l[i]:i;if(n(t[r],r,t))return!0}return!1},y.contains=y.includes=y.include=function(t,n,e,l){return L(t)||(t=y.values(t)),("number"!=typeof e||l)&&(e=0),y.indexOf(t,n,e)>=0},y.invoke=function(t,n){var e=u.call(arguments,2),l=y.isFunction(n);return y.map(t,function(t){var a=l?n:t[n];return null==a?a:a.apply(t,e)})},y.pluck=function(t,n){return y.map(t,y.property(n))},y.where=function(t,n){return y.filter(t,y.matcher(n))},y.findWhere=function(t,n){return y.find(t,y.matcher(n))},y.max=function(t,n,e){var l,a,i=-(1/0),r=-(1/0);if(null==n&&null!=t){t=L(t)?t:y.values(t);for(var o=0,s=t.length;o<s;o++)l=t[o],l>i&&(i=l)}else n=w(n,e),y.each(t,function(t,e,l){a=n(t,e,l),(a>r||a===-(1/0)&&i===-(1/0))&&(i=t,r=a)});return i},y.min=function(t,n,e){var l,a,i=1/0,r=1/0;if(null==n&&null!=t){t=L(t)?t:y.values(t);for(var o=0,s=t.length;o<s;o++)l=t[o],l<i&&(i=l)}else n=w(n,e),y.each(t,function(t,e,l){a=n(t,e,l),(a<r||a===1/0&&i===1/0)&&(i=t,r=a)});return i},y.shuffle=function(t){for(var n,e=L(t)?t:y.values(t),l=e.length,a=Array(l),i=0;i<l;i++)n=y.random(0,i),n!==i&&(a[i]=a[n]),a[n]=e[i];return a},y.sample=function(t,n,e){return null==n||e?(L(t)||(t=y.values(t)),
t[y.random(t.length-1)]):y.shuffle(t).slice(0,Math.max(0,n))},y.sortBy=function(t,n,e){return n=w(n,e),y.pluck(y.map(t,function(t,e,l){return{value:t,index:e,criteria:n(t,e,l)}}).sort(function(t,n){var e=t.criteria,l=n.criteria;if(e!==l){if(e>l||void 0===e)return 1;if(e<l||void 0===l)return-1}return t.index-n.index}),"value")};var M=function(t){return function(n,e,l){var a={};return e=w(e,l),y.each(n,function(l,i){var r=e(l,i,n);t(a,l,r)}),a}};y.groupBy=M(function(t,n,e){y.has(t,e)?t[e].push(n):t[e]=[n]}),y.indexBy=M(function(t,n,e){t[e]=n}),y.countBy=M(function(t,n,e){y.has(t,e)?t[e]++:t[e]=1}),y.toArray=function(t){return t?y.isArray(t)?u.call(t):L(t)?y.map(t,y.identity):y.values(t):[]},y.size=function(t){return null==t?0:L(t)?t.length:y.keys(t).length},y.partition=function(t,n,e){n=w(n,e);var l=[],a=[];return y.each(t,function(t,e,i){(n(t,e,i)?l:a).push(t)}),[l,a]},y.first=y.head=y.take=function(t,n,e){if(null!=t)return null==n||e?t[0]:y.initial(t,t.length-n)},y.initial=function(t,n,e){return u.call(t,0,Math.max(0,t.length-(null==n||e?1:n)))},y.last=function(t,n,e){if(null!=t)return null==n||e?t[t.length-1]:y.rest(t,Math.max(0,t.length-n))},y.rest=y.tail=y.drop=function(t,n,e){return u.call(t,null==n||e?1:n)},y.compact=function(t){return y.filter(t,y.identity)};var T=function(t,n,e,l){for(var a=[],i=0,r=l||0,o=x(t);r<o;r++){var s=t[r];if(L(s)&&(y.isArray(s)||y.isArguments(s))){n||(s=T(s,n,e));var g=0,u=s.length;for(a.length+=u;g<u;)a[i++]=s[g++]}else e||(a[i++]=s)}return a};y.flatten=function(t,n){return T(t,n,!1)},y.without=function(t){return y.difference(t,u.call(arguments,1))},y.uniq=y.unique=function(t,n,e,l){y.isBoolean(n)||(l=e,e=n,n=!1),null!=e&&(e=w(e,l));for(var a=[],i=[],r=0,o=x(t);r<o;r++){var s=t[r],g=e?e(s,r,t):s;n?(r&&i===g||a.push(s),i=g):e?y.contains(i,g)||(i.push(g),a.push(s)):y.contains(a,s)||a.push(s)}return a},y.union=function(){return y.uniq(T(arguments,!0,!0))},y.intersection=function(t){for(var n=[],e=arguments.length,l=0,a=x(t);l<a;l++){var i=t[l];if(!y.contains(n,i)){for(var r=1;r<e&&y.contains(arguments[r],i);r++);r===e&&n.push(i)}}return n},y.difference=function(t){var n=T(arguments,!0,!0,1);return y.filter(t,function(t){return!y.contains(n,t)})},y.zip=function(){return y.unzip(arguments)},y.unzip=function(t){for(var n=t&&y.max(t,x).length||0,e=Array(n),l=0;l<n;l++)e[l]=y.pluck(t,l);return e},y.object=function(t,n){for(var e={},l=0,a=x(t);l<a;l++)n?e[t[l]]=n[l]:e[t[l][0]]=t[l][1];return e},y.findIndex=n(1),y.findLastIndex=n(-1),y.sortedIndex=function(t,n,e,l){e=w(e,l,1);for(var a=e(n),i=0,r=x(t);i<r;){var o=Math.floor((i+r)/2);e(t[o])<a?i=o+1:r=o}return i},y.indexOf=e(1,y.findIndex,y.sortedIndex),y.lastIndexOf=e(-1,y.findLastIndex),y.range=function(t,n,e){null==n&&(n=t||0,t=0),e=e||1;for(var l=Math.max(Math.ceil((n-t)/e),0),a=Array(l),i=0;i<l;i++,t+=e)a[i]=t;return a};var A=function(t,n,e,l,a){if(!(l instanceof n))return t.apply(e,a);var i=C(t.prototype),r=t.apply(i,a);return y.isObject(r)?r:i};y.bind=function(t,n){if(p&&t.bind===p)return p.apply(t,u.call(arguments,1));if(!y.isFunction(t))throw new TypeError("Bind must be called on a function");var e=u.call(arguments,2),l=function(){return A(t,l,n,this,e.concat(u.call(arguments)))};return l},y.partial=function(t){var n=u.call(arguments,1),e=function(){for(var l=0,a=n.length,i=Array(a),r=0;r<a;r++)i[r]=n[r]===y?arguments[l++]:n[r];for(;l<arguments.length;)i.push(arguments[l++]);return A(t,e,this,this,i)};return e},y.bindAll=function(t){var n,e,l=arguments.length;if(l<=1)throw new Error("bindAll must be passed function names");for(n=1;n<l;n++)e=arguments[n],t[e]=y.bind(t[e],t);return t},y.memoize=function(t,n){var e=function(l){var a=e.cache,i=""+(n?n.apply(this,arguments):l);return y.has(a,i)||(a[i]=t.apply(this,arguments)),a[i]};return e.cache={},e},y.delay=function(t,n){var e=u.call(arguments,2);return setTimeout(function(){return t.apply(null,e)},n)},y.defer=y.partial(y.delay,y,1),y.throttle=function(t,n,e){var l,a,i,r=null,o=0;e||(e={});var s=function(){o=e.leading===!1?0:y.now(),r=null,i=t.apply(l,a),r||(l=a=null)};return function(){var g=y.now();o||e.leading!==!1||(o=g);var u=n-(g-o);return l=this,a=arguments,u<=0||u>n?(r&&(clearTimeout(r),r=null),o=g,i=t.apply(l,a),r||(l=a=null)):r||e.trailing===!1||(r=setTimeout(s,u)),i}},y.debounce=function(t,n,e){var l,a,i,r,o,s=function(){var g=y.now()-r;g<n&&g>=0?l=setTimeout(s,n-g):(l=null,e||(o=t.apply(i,a),l||(i=a=null)))};return function(){i=this,a=arguments,r=y.now();var g=e&&!l;return l||(l=setTimeout(s,n)),g&&(o=t.apply(i,a),i=a=null),o}},y.wrap=function(t,n){return y.partial(n,t)},y.negate=function(t){return function(){return!t.apply(this,arguments)}},y.compose=function(){var t=arguments,n=t.length-1;return function(){for(var e=n,l=t[n].apply(this,arguments);e--;)l=t[e].call(this,l);return l}},y.after=function(t,n){return function(){if(--t<1)return n.apply(this,arguments)}},y.before=function(t,n){var e;return function(){return--t>0&&(e=n.apply(this,arguments)),t<=1&&(n=null),e}},y.once=y.partial(y.before,2);var P=!{toString:null}.propertyIsEnumerable("toString"),D=["valueOf","isPrototypeOf","toString","propertyIsEnumerable","hasOwnProperty","toLocaleString"];y.keys=function(t){if(!y.isObject(t))return[];if(f)return f(t);var n=[];for(var e in t)y.has(t,e)&&n.push(e);return P&&l(t,n),n},y.allKeys=function(t){if(!y.isObject(t))return[];var n=[];for(var e in t)n.push(e);return P&&l(t,n),n},y.values=function(t){for(var n=y.keys(t),e=n.length,l=Array(e),a=0;a<e;a++)l[a]=t[n[a]];return l},y.mapObject=function(t,n,e){n=w(n,e);for(var l,a=y.keys(t),i=a.length,r={},o=0;o<i;o++)l=a[o],r[l]=n(t[l],l,t);return r},y.pairs=function(t){for(var n=y.keys(t),e=n.length,l=Array(e),a=0;a<e;a++)l[a]=[n[a],t[n[a]]];return l},y.invert=function(t){for(var n={},e=y.keys(t),l=0,a=e.length;l<a;l++)n[t[e[l]]]=e[l];return n},y.functions=y.methods=function(t){var n=[];for(var e in t)y.isFunction(t[e])&&n.push(e);return n.sort()},y.extend=_(y.allKeys),y.extendOwn=y.assign=_(y.keys),y.findKey=function(t,n,e){n=w(n,e);for(var l,a=y.keys(t),i=0,r=a.length;i<r;i++)if(l=a[i],n(t[l],l,t))return l},y.pick=function(t,n,e){var l,a,i={},r=t;if(null==r)return i;y.isFunction(n)?(a=y.allKeys(r),l=b(n,e)):(a=T(arguments,!1,!1,1),l=function(t,n,e){return n in e},r=Object(r));for(var o=0,s=a.length;o<s;o++){var g=a[o],u=r[g];l(u,g,r)&&(i[g]=u)}return i},y.omit=function(t,n,e){if(y.isFunction(n))n=y.negate(n);else{var l=y.map(T(arguments,!1,!1,1),String);n=function(t,n){return!y.contains(l,n)}}return y.pick(t,n,e)},y.defaults=_(y.allKeys,!0),y.create=function(t,n){var e=C(t);return n&&y.extendOwn(e,n),e},y.clone=function(t){return y.isObject(t)?y.isArray(t)?t.slice():y.extend({},t):t},y.tap=function(t,n){return n(t),t},y.isMatch=function(t,n){var e=y.keys(n),l=e.length;if(null==t)return!l;for(var a=Object(t),i=0;i<l;i++){var r=e[i];if(n[r]!==a[r]||!(r in a))return!1}return!0};var B=function(t,n,e,l){if(t===n)return 0!==t||1/t===1/n;if(null==t||null==n)return t===n;t instanceof y&&(t=t._wrapped),n instanceof y&&(n=n._wrapped);var a=c.call(t);if(a!==c.call(n))return!1;switch(a){case"[object RegExp]":case"[object String]":return""+t==""+n;case"[object Number]":return+t!==+t?+n!==+n:0===+t?1/+t===1/n:+t===+n;case"[object Date]":case"[object Boolean]":return+t===+n}var i="[object Array]"===a;if(!i){if("object"!=typeof t||"object"!=typeof n)return!1;var r=t.constructor,o=n.constructor;if(r!==o&&!(y.isFunction(r)&&r instanceof r&&y.isFunction(o)&&o instanceof o)&&"constructor"in t&&"constructor"in n)return!1}e=e||[],l=l||[];for(var s=e.length;s--;)if(e[s]===t)return l[s]===n;if(e.push(t),l.push(n),i){if(s=t.length,s!==n.length)return!1;for(;s--;)if(!B(t[s],n[s],e,l))return!1}else{var g,u=y.keys(t);if(s=u.length,y.keys(n).length!==s)return!1;for(;s--;)if(g=u[s],!y.has(n,g)||!B(t[g],n[g],e,l))return!1}return e.pop(),l.pop(),!0};y.isEqual=function(t,n){return B(t,n)},y.isEmpty=function(t){return null==t||(L(t)&&(y.isArray(t)||y.isString(t)||y.isArguments(t))?0===t.length:0===y.keys(t).length)},y.isElement=function(t){return!(!t||1!==t.nodeType)},y.isArray=d||function(t){return"[object Array]"===c.call(t)},y.isObject=function(t){var n=typeof t;return"function"===n||"object"===n&&!!t},y.each(["Arguments","Function","String","Number","Date","RegExp","Error"],function(t){y["is"+t]=function(n){return c.call(n)==="[object "+t+"]"}}),y.isArguments(arguments)||(y.isArguments=function(t){return y.has(t,"callee")}),"function"!=typeof/./&&"object"!=typeof Int8Array&&(y.isFunction=function(t){return"function"==typeof t||!1}),y.isFinite=function(t){return isFinite(t)&&!isNaN(parseFloat(t))},y.isNaN=function(t){return y.isNumber(t)&&t!==+t},y.isBoolean=function(t){return t===!0||t===!1||"[object Boolean]"===c.call(t)},y.isNull=function(t){return null===t},y.isUndefined=function(t){return void 0===t},y.has=function(t,n){return null!=t&&h.call(t,n)},y.noConflict=function(){return a._=i,this},y.identity=function(t){return t},y.constant=function(t){return function(){return t}},y.noop=function(){},y.property=k,y.propertyOf=function(t){return null==t?function(){}:function(n){return t[n]}},y.matcher=y.matches=function(t){return t=y.extendOwn({},t),function(n){return y.isMatch(n,t)}},y.times=function(t,n,e){var l=Array(Math.max(0,t));n=b(n,e,1);for(var a=0;a<t;a++)l[a]=n(a);return l},y.random=function(t,n){return null==n&&(n=t,t=0),t+Math.floor(Math.random()*(n-t+1))},y.now=Date.now||function(){return(new Date).getTime()};var O={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#x27;","`":"&#x60;"},E=y.invert(O),H=function(t){var n=function(n){return t[n]},e="(?:"+y.keys(t).join("|")+")",l=RegExp(e),a=RegExp(e,"g");return function(t){return t=null==t?"":""+t,l.test(t)?t.replace(a,n):t}};y.escape=H(O),y.unescape=H(E),y.result=function(t,n,e){var l=null==t?void 0:t[n];return void 0===l&&(l=e),y.isFunction(l)?l.call(t):l};var N=0;y.uniqueId=function(t){var n=++N+"";return t?t+n:n},y.templateSettings={evaluate:/<%([\s\S]+?)%>/g,interpolate:/<%=([\s\S]+?)%>/g,escape:/<%-([\s\S]+?)%>/g};var I=/(.)^/,R={"'":"'","\\":"\\","\r":"r","\n":"n","\u2028":"u2028","\u2029":"u2029"},W=/\\|'|\r|\n|\u2028|\u2029/g,F=function(t){return"\\"+R[t]};y.template=function(t,n,e){!n&&e&&(n=e),n=y.defaults({},n,y.templateSettings);var l=RegExp([(n.escape||I).source,(n.interpolate||I).source,(n.evaluate||I).source].join("|")+"|$","g"),a=0,i="__p+='";t.replace(l,function(n,e,l,r,o){return i+=t.slice(a,o).replace(W,F),a=o+n.length,e?i+="'+\n((__t=("+e+"))==null?'':_.escape(__t))+\n'":l?i+="'+\n((__t=("+l+"))==null?'':__t)+\n'":r&&(i+="';\n"+r+"\n__p+='"),n}),i+="';\n",n.variable||(i="with(obj||{}){\n"+i+"}\n"),i="var __t,__p='',__j=Array.prototype.join,print=function(){__p+=__j.call(arguments,'');};\n"+i+"return __p;\n";try{var r=new Function(n.variable||"obj","_",i)}catch(o){throw o.source=i,o}var s=function(t){return r.call(this,t,y)},g=n.variable||"obj";return s.source="function("+g+"){\n"+i+"}",s},y.chain=function(t){var n=y(t);return n._chain=!0,n};var j=function(t,n){return t._chain?y(n).chain():n};y.mixin=function(t){y.each(y.functions(t),function(n){var e=y[n]=t[n];y.prototype[n]=function(){var t=[this._wrapped];return g.apply(t,arguments),j(this,e.apply(y,t))}})},y.mixin(y),y.each(["pop","push","reverse","shift","sort","splice","unshift"],function(t){var n=r[t];y.prototype[t]=function(){var e=this._wrapped;return n.apply(e,arguments),"shift"!==t&&"splice"!==t||0!==e.length||delete e[0],j(this,e)}}),y.each(["concat","join","slice"],function(t){var n=r[t];y.prototype[t]=function(){return j(this,n.apply(this._wrapped,arguments))}}),y.prototype.value=function(){return this._wrapped},y.prototype.valueOf=y.prototype.toJSON=y.prototype.value,y.prototype.toString=function(){return""+this._wrapped},"function"==typeof define&&define.amd&&define("underscore",[],function(){return y})}.call(this),function(t,n){if("function"==typeof define&&define.amd)define(["underscore","jquery","exports"],function(e,l,a){t.Backbone=n(t,a,e,l)});else if("undefined"!=typeof exports){var e=require("underscore");n(t,exports,e)}else t.Backbone=n(t,{},t._,t.jQuery||t.Zepto||t.ender||t.$)}(this,function(t,n,e,l){var a=t.Backbone,i=[],r=(i.push,i.slice);i.splice;n.VERSION="1.1.2",n.$=l,n.noConflict=function(){return t.Backbone=a,this},n.emulateHTTP=!1,n.emulateJSON=!1;var o=n.Events={on:function(t,n,e){if(!g(this,"on",t,[n,e])||!n)return this;this._events||(this._events={});var l=this._events[t]||(this._events[t]=[]);return l.push({callback:n,context:e,ctx:e||this}),this},once:function(t,n,l){if(!g(this,"once",t,[n,l])||!n)return this;var a=this,i=e.once(function(){a.off(t,i),n.apply(this,arguments)});return i._callback=n,this.on(t,i,l)},off:function(t,n,l){var a,i,r,o,s,u,c,h;if(!this._events||!g(this,"off",t,[n,l]))return this;if(!t&&!n&&!l)return this._events=void 0,this;for(o=t?[t]:e.keys(this._events),s=0,u=o.length;s<u;s++)if(t=o[s],r=this._events[t]){if(this._events[t]=a=[],n||l)for(c=0,h=r.length;c<h;c++)i=r[c],(n&&n!==i.callback&&n!==i.callback._callback||l&&l!==i.context)&&a.push(i);a.length||delete this._events[t]}return this},trigger:function(t){if(!this._events)return this;var n=r.call(arguments,1);if(!g(this,"trigger",t,n))return this;var e=this._events[t],l=this._events.all;return e&&u(e,n),l&&u(l,arguments),this},stopListening:function(t,n,l){var a=this._listeningTo;if(!a)return this;var i=!n&&!l;l||"object"!=typeof n||(l=this),t&&((a={})[t._listenId]=t);for(var r in a)t=a[r],t.off(n,l,this),(i||e.isEmpty(t._events))&&delete this._listeningTo[r];return this}},s=/\s+/,g=function(t,n,e,l){if(!e)return!0;if("object"==typeof e){for(var a in e)t[n].apply(t,[a,e[a]].concat(l));return!1}if(s.test(e)){for(var i=e.split(s),r=0,o=i.length;r<o;r++)t[n].apply(t,[i[r]].concat(l));return!1}return!0},u=function(t,n){var e,l=-1,a=t.length,i=n[0],r=n[1],o=n[2];switch(n.length){case 0:for(;++l<a;)(e=t[l]).callback.call(e.ctx);return;case 1:for(;++l<a;)(e=t[l]).callback.call(e.ctx,i);return;case 2:for(;++l<a;)(e=t[l]).callback.call(e.ctx,i,r);return;case 3:for(;++l<a;)(e=t[l]).callback.call(e.ctx,i,r,o);return;default:for(;++l<a;)(e=t[l]).callback.apply(e.ctx,n);return}},c={listenTo:"on",listenToOnce:"once"};e.each(c,function(t,n){o[n]=function(n,l,a){var i=this._listeningTo||(this._listeningTo={}),r=n._listenId||(n._listenId=e.uniqueId("l"));return i[r]=n,a||"object"!=typeof l||(a=this),n[t](l,a,this),this}}),o.bind=o.on,o.unbind=o.off,e.extend(n,o);var h=n.Model=function(t,n){var l=t||{};n||(n={}),this.cid=e.uniqueId("c"),this.attributes={},n.collection&&(this.collection=n.collection),n.parse&&(l=this.parse(l,n)||{}),l=e.defaults({},l,e.result(this,"defaults")),this.set(l,n),this.changed={},this.initialize.apply(this,arguments)};e.extend(h.prototype,o,{changed:null,validationError:null,idAttribute:"id",initialize:function(){},toJSON:function(t){return e.clone(this.attributes)},sync:function(){return n.sync.apply(this,arguments)},get:function(t){return this.attributes[t]},escape:function(t){return e.escape(this.get(t))},has:function(t){return null!=this.get(t)},set:function(t,n,l){var a,i,r,o,s,g,u,c;if(null==t)return this;if("object"==typeof t?(i=t,l=n):(i={})[t]=n,l||(l={}),!this._validate(i,l))return!1;r=l.unset,s=l.silent,o=[],g=this._changing,this._changing=!0,g||(this._previousAttributes=e.clone(this.attributes),this.changed={}),c=this.attributes,u=this._previousAttributes,this.idAttribute in i&&(this.id=i[this.idAttribute]);for(a in i)n=i[a],e.isEqual(c[a],n)||o.push(a),e.isEqual(u[a],n)?delete this.changed[a]:this.changed[a]=n,r?delete c[a]:c[a]=n;if(!s){o.length&&(this._pending=l);for(var h=0,d=o.length;h<d;h++)this.trigger("change:"+o[h],this,c[o[h]],l)}if(g)return this;if(!s)for(;this._pending;)l=this._pending,this._pending=!1,this.trigger("change",this,l);return this._pending=!1,this._changing=!1,this},unset:function(t,n){return this.set(t,void 0,e.extend({},n,{unset:!0}))},clear:function(t){var n={};for(var l in this.attributes)n[l]=void 0;return this.set(n,e.extend({},t,{unset:!0}))},hasChanged:function(t){return null==t?!e.isEmpty(this.changed):e.has(this.changed,t)},changedAttributes:function(t){if(!t)return!!this.hasChanged()&&e.clone(this.changed);var n,l=!1,a=this._changing?this._previousAttributes:this.attributes;for(var i in t)e.isEqual(a[i],n=t[i])||((l||(l={}))[i]=n);return l},previous:function(t){return null!=t&&this._previousAttributes?this._previousAttributes[t]:null},previousAttributes:function(){return e.clone(this._previousAttributes)},fetch:function(t){t=t?e.clone(t):{},void 0===t.parse&&(t.parse=!0);var n=this,l=t.success;return t.success=function(e){return!!n.set(n.parse(e,t),t)&&(l&&l(n,e,t),void n.trigger("sync",n,e,t))},I(this,t),this.sync("read",this,t)},save:function(t,n,l){var a,i,r,o=this.attributes;if(null==t||"object"==typeof t?(a=t,l=n):(a={})[t]=n,l=e.extend({validate:!0},l),a&&!l.wait){if(!this.set(a,l))return!1}else if(!this._validate(a,l))return!1;a&&l.wait&&(this.attributes=e.extend({},o,a)),void 0===l.parse&&(l.parse=!0);var s=this,g=l.success;return l.success=function(t){s.attributes=o;var n=s.parse(t,l);return l.wait&&(n=e.extend(a||{},n)),!(e.isObject(n)&&!s.set(n,l))&&(g&&g(s,t,l),void s.trigger("sync",s,t,l))},I(this,l),i=this.isNew()?"create":l.patch?"patch":"update","patch"===i&&(l.attrs=a),r=this.sync(i,this,l),a&&l.wait&&(this.attributes=o),r},destroy:function(t){t=t?e.clone(t):{};var n=this,l=t.success,a=function(){n.trigger("destroy",n,n.collection,t)};if(t.success=function(e){(t.wait||n.isNew())&&a(),l&&l(n,e,t),n.isNew()||n.trigger("sync",n,e,t)},this.isNew())return t.success(),!1;I(this,t);var i=this.sync("delete",this,t);return t.wait||a(),i},url:function(){var t=e.result(this,"urlRoot")||e.result(this.collection,"url")||N();return this.isNew()?t:t.replace(/([^\/])$/,"$1/")+encodeURIComponent(this.id)},parse:function(t,n){return t},clone:function(){return new this.constructor(this.attributes)},isNew:function(){return!this.has(this.idAttribute)},isValid:function(t){return this._validate({},e.extend(t||{},{validate:!0}))},_validate:function(t,n){if(!n.validate||!this.validate)return!0;t=e.extend({},this.attributes,t);var l=this.validationError=this.validate(t,n)||null;return!l||(this.trigger("invalid",this,l,e.extend(n,{validationError:l})),!1)}});var d=["keys","values","pairs","invert","pick","omit"];e.each(d,function(t){h.prototype[t]=function(){var n=r.call(arguments);return n.unshift(this.attributes),e[t].apply(e,n)}});var f=n.Collection=function(t,n){n||(n={}),n.model&&(this.model=n.model),void 0!==n.comparator&&(this.comparator=n.comparator),this._reset(),this.initialize.apply(this,arguments),t&&this.reset(t,e.extend({silent:!0},n))},p={add:!0,remove:!0,merge:!0},m={add:!0,remove:!1};e.extend(f.prototype,o,{model:h,initialize:function(){},toJSON:function(t){return this.map(function(n){return n.toJSON(t)})},sync:function(){return n.sync.apply(this,arguments)},add:function(t,n){return this.set(t,e.extend({merge:!1},n,m))},remove:function(t,n){var l=!e.isArray(t);t=l?[t]:e.clone(t),n||(n={});var a,i,r,o;for(a=0,i=t.length;a<i;a++)o=t[a]=this.get(t[a]),o&&(delete this._byId[o.id],delete this._byId[o.cid],r=this.indexOf(o),this.models.splice(r,1),this.length--,n.silent||(n.index=r,o.trigger("remove",o,this,n)),this._removeReference(o,n));return l?t[0]:t},set:function(t,n){n=e.defaults({},n,p),n.parse&&(t=this.parse(t,n));var l=!e.isArray(t);t=l?t?[t]:[]:e.clone(t);var a,i,r,o,s,g,u,c=n.at,d=this.model,f=this.comparator&&null==c&&n.sort!==!1,m=e.isString(this.comparator)?this.comparator:null,v=[],y=[],b={},w=n.add,_=n.merge,C=n.remove,k=!(f||!w||!C)&&[];for(a=0,i=t.length;a<i;a++){if(s=t[a]||{},r=s instanceof h?o=s:s[d.prototype.idAttribute||"id"],g=this.get(r))C&&(b[g.cid]=!0),_&&(s=s===o?o.attributes:s,n.parse&&(s=g.parse(s,n)),g.set(s,n),f&&!u&&g.hasChanged(m)&&(u=!0)),t[a]=g;else if(w){if(o=t[a]=this._prepareModel(s,n),!o)continue;v.push(o),this._addReference(o,n)}o=g||o,!k||!o.isNew()&&b[o.id]||k.push(o),b[o.id]=!0}if(C){for(a=0,i=this.length;a<i;++a)b[(o=this.models[a]).cid]||y.push(o);y.length&&this.remove(y,n)}if(v.length||k&&k.length)if(f&&(u=!0),this.length+=v.length,null!=c)for(a=0,i=v.length;a<i;a++)this.models.splice(c+a,0,v[a]);else{k&&(this.models.length=0);var S=k||v;for(a=0,i=S.length;a<i;a++)this.models.push(S[a])}if(u&&this.sort({silent:!0}),!n.silent){for(a=0,i=v.length;a<i;a++)(o=v[a]).trigger("add",o,this,n);(u||k&&k.length)&&this.trigger("sort",this,n)}return l?t[0]:t},reset:function(t,n){n||(n={});for(var l=0,a=this.models.length;l<a;l++)this._removeReference(this.models[l],n);return n.previousModels=this.models,this._reset(),t=this.add(t,e.extend({silent:!0},n)),n.silent||this.trigger("reset",this,n),t},push:function(t,n){return this.add(t,e.extend({at:this.length},n))},pop:function(t){var n=this.at(this.length-1);return this.remove(n,t),n},unshift:function(t,n){return this.add(t,e.extend({at:0},n))},shift:function(t){var n=this.at(0);return this.remove(n,t),n},slice:function(){return r.apply(this.models,arguments)},get:function(t){if(null!=t)return this._byId[t]||this._byId[t.id]||this._byId[t.cid]},at:function(t){return this.models[t]},where:function(t,n){return e.isEmpty(t)?n?void 0:[]:this[n?"find":"filter"](function(n){for(var e in t)if(t[e]!==n.get(e))return!1;return!0})},findWhere:function(t){return this.where(t,!0)},sort:function(t){if(!this.comparator)throw new Error("Cannot sort a set without a comparator");return t||(t={}),e.isString(this.comparator)||1===this.comparator.length?this.models=this.sortBy(this.comparator,this):this.models.sort(e.bind(this.comparator,this)),t.silent||this.trigger("sort",this,t),this},pluck:function(t){return e.invoke(this.models,"get",t)},fetch:function(t){t=t?e.clone(t):{},void 0===t.parse&&(t.parse=!0);var n=t.success,l=this;return t.success=function(e){var a=t.reset?"reset":"set";l[a](e,t),n&&n(l,e,t),l.trigger("sync",l,e,t)},I(this,t),this.sync("read",this,t)},create:function(t,n){if(n=n?e.clone(n):{},!(t=this._prepareModel(t,n)))return!1;n.wait||this.add(t,n);var l=this,a=n.success;return n.success=function(t,e){n.wait&&l.add(t,n),a&&a(t,e,n)},t.save(null,n),t},parse:function(t,n){return t},clone:function(){return new this.constructor(this.models)},_reset:function(){this.length=0,this.models=[],this._byId={}},_prepareModel:function(t,n){if(t instanceof h)return t;n=n?e.clone(n):{},n.collection=this;var l=new this.model(t,n);return l.validationError?(this.trigger("invalid",this,l.validationError,n),!1):l},_addReference:function(t,n){this._byId[t.cid]=t,null!=t.id&&(this._byId[t.id]=t),t.collection||(t.collection=this),t.on("all",this._onModelEvent,this)},_removeReference:function(t,n){this===t.collection&&delete t.collection,t.off("all",this._onModelEvent,this)},_onModelEvent:function(t,n,e,l){("add"!==t&&"remove"!==t||e===this)&&("destroy"===t&&this.remove(n,l),n&&t==="change:"+n.idAttribute&&(delete this._byId[n.previous(n.idAttribute)],null!=n.id&&(this._byId[n.id]=n)),this.trigger.apply(this,arguments))}});var v=["forEach","each","map","collect","reduce","foldl","inject","reduceRight","foldr","find","detect","filter","select","reject","every","all","some","any","include","contains","invoke","max","min","toArray","size","first","head","take","initial","rest","tail","drop","last","without","difference","indexOf","shuffle","lastIndexOf","isEmpty","chain","sample"];e.each(v,function(t){f.prototype[t]=function(){var n=r.call(arguments);return n.unshift(this.models),e[t].apply(e,n)}});var y=["groupBy","countBy","sortBy","indexBy"];e.each(y,function(t){f.prototype[t]=function(n,l){var a=e.isFunction(n)?n:function(t){return t.get(n)};return e[t](this.models,a,l)}});var b=n.View=function(t){this.cid=e.uniqueId("view"),t||(t={}),e.extend(this,e.pick(t,_)),this._ensureElement(),this.initialize.apply(this,arguments),this.delegateEvents()},w=/^(\S+)\s*(.*)$/,_=["model","collection","el","id","attributes","className","tagName","events"];e.extend(b.prototype,o,{tagName:"div",$:function(t){return this.$el.find(t)},initialize:function(){},render:function(){return this},remove:function(){return this.$el.remove(),this.stopListening(),this},setElement:function(t,e){return this.$el&&this.undelegateEvents(),this.$el=t instanceof n.$?t:n.$(t),this.el=this.$el[0],e!==!1&&this.delegateEvents(),this},delegateEvents:function(t){if(!t&&!(t=e.result(this,"events")))return this;this.undelegateEvents();for(var n in t){var l=t[n];if(e.isFunction(l)||(l=this[t[n]]),l){var a=n.match(w),i=a[1],r=a[2];l=e.bind(l,this),i+=".delegateEvents"+this.cid,""===r?this.$el.on(i,l):this.$el.on(i,r,l)}}return this},undelegateEvents:function(){return this.$el.off(".delegateEvents"+this.cid),this},_ensureElement:function(){if(this.el)this.setElement(e.result(this,"el"),!1);else{var t=e.extend({},e.result(this,"attributes"));this.id&&(t.id=e.result(this,"id")),this.className&&(t["class"]=e.result(this,"className"));var l=n.$("<"+e.result(this,"tagName")+">").attr(t);this.setElement(l,!1)}}}),n.sync=function(t,l,a){var i=k[t];e.defaults(a||(a={}),{emulateHTTP:n.emulateHTTP,emulateJSON:n.emulateJSON});var r={type:i,dataType:"json"};if(a.url||(r.url=e.result(l,"url")||N()),null!=a.data||!l||"create"!==t&&"update"!==t&&"patch"!==t||(r.contentType="application/json",r.data=JSON.stringify(a.attrs||l.toJSON(a))),a.emulateJSON&&(r.contentType="application/x-www-form-urlencoded",r.data=r.data?{model:r.data}:{}),a.emulateHTTP&&("PUT"===i||"DELETE"===i||"PATCH"===i)){r.type="POST",a.emulateJSON&&(r.data._method=i);var o=a.beforeSend;a.beforeSend=function(t){if(t.setRequestHeader("X-HTTP-Method-Override",i),o)return o.apply(this,arguments)}}"GET"===r.type||a.emulateJSON||(r.processData=!1),"PATCH"===r.type&&C&&(r.xhr=function(){return new ActiveXObject("Microsoft.XMLHTTP")});var s=a.xhr=n.ajax(e.extend(r,a));return l.trigger("request",l,s,a),s};var C=!("undefined"==typeof window||!window.ActiveXObject||window.XMLHttpRequest&&(new XMLHttpRequest).dispatchEvent),k={create:"POST",update:"PUT",patch:"PATCH","delete":"DELETE",read:"GET"};n.ajax=function(){return n.$.ajax.apply(n.$,arguments)};var S=n.Router=function(t){t||(t={}),t.routes&&(this.routes=t.routes),this._bindRoutes(),this.initialize.apply(this,arguments)},x=/\((.*?)\)/g,L=/(\(\?)?:\w+/g,M=/\*\w+/g,T=/[\-{}\[\]+?.,\\\^$|#\s]/g;e.extend(S.prototype,o,{initialize:function(){},route:function(t,l,a){e.isRegExp(t)||(t=this._routeToRegExp(t)),e.isFunction(l)&&(a=l,l=""),a||(a=this[l]);var i=this;return n.history.route(t,function(e){var r=i._extractParameters(t,e);i.execute(a,r),i.trigger.apply(i,["route:"+l].concat(r)),i.trigger("route",l,r),n.history.trigger("route",i,l,r)}),this},execute:function(t,n){t&&t.apply(this,n)},navigate:function(t,e){return n.history.navigate(t,e),this},_bindRoutes:function(){if(this.routes){this.routes=e.result(this,"routes");for(var t,n=e.keys(this.routes);null!=(t=n.pop());)this.route(t,this.routes[t])}},_routeToRegExp:function(t){return t=t.replace(T,"\\$&").replace(x,"(?:$1)?").replace(L,function(t,n){return n?t:"([^/?]+)"}).replace(M,"([^?]*?)"),new RegExp("^"+t+"(?:\\?([\\s\\S]*))?$")},_extractParameters:function(t,n){var l=t.exec(n).slice(1);return e.map(l,function(t,n){return n===l.length-1?t||null:t?decodeURIComponent(t):null})}});var A=n.History=function(){this.handlers=[],e.bindAll(this,"checkUrl"),"undefined"!=typeof window&&(this.location=window.location,this.history=window.history)},P=/^[#\/]|\s+$/g,D=/^\/+|\/+$/g,B=/msie [\w.]+/,O=/\/$/,E=/#.*$/;A.started=!1,e.extend(A.prototype,o,{interval:50,atRoot:function(){return this.location.pathname.replace(/[^\/]$/,"$&/")===this.root},getHash:function(t){var n=(t||this).location.href.match(/#(.*)$/);return n?n[1]:""},getFragment:function(t,n){if(null==t)if(this._hasPushState||!this._wantsHashChange||n){t=decodeURI(this.location.pathname+this.location.search);var e=this.root.replace(O,"");t.indexOf(e)||(t=t.slice(e.length))}else t=this.getHash();return t.replace(P,"")},start:function(t){if(A.started)throw new Error("Backbone.history has already been started");A.started=!0,this.options=e.extend({root:"/"},this.options,t),this.root=this.options.root,this._wantsHashChange=this.options.hashChange!==!1,this._wantsPushState=!!this.options.pushState,this._hasPushState=!!(this.options.pushState&&this.history&&this.history.pushState);var l=this.getFragment(),a=document.documentMode,i=B.exec(navigator.userAgent.toLowerCase())&&(!a||a<=7);if(this.root=("/"+this.root+"/").replace(D,"/"),i&&this._wantsHashChange){var r=n.$('<iframe src="javascript:0" tabindex="-1">');this.iframe=r.hide().appendTo("body")[0].contentWindow,this.navigate(l)}this._hasPushState?n.$(window).on("popstate",this.checkUrl):this._wantsHashChange&&"onhashchange"in window&&!i?n.$(window).on("hashchange",this.checkUrl):this._wantsHashChange&&(this._checkUrlInterval=setInterval(this.checkUrl,this.interval)),this.fragment=l;var o=this.location;if(this._wantsHashChange&&this._wantsPushState){if(!this._hasPushState&&!this.atRoot())return this.fragment=this.getFragment(null,!0),this.location.replace(this.root+"#"+this.fragment),!0;this._hasPushState&&this.atRoot()&&o.hash&&(this.fragment=this.getHash().replace(P,""),this.history.replaceState({},document.title,this.root+this.fragment))}if(!this.options.silent)return this.loadUrl()},stop:function(){n.$(window).off("popstate",this.checkUrl).off("hashchange",this.checkUrl),this._checkUrlInterval&&clearInterval(this._checkUrlInterval),A.started=!1},route:function(t,n){this.handlers.unshift({route:t,callback:n})},checkUrl:function(t){var n=this.getFragment();return n===this.fragment&&this.iframe&&(n=this.getFragment(this.getHash(this.iframe))),n!==this.fragment&&(this.iframe&&this.navigate(n),void this.loadUrl())},loadUrl:function(t){return t=this.fragment=this.getFragment(t),e.any(this.handlers,function(n){if(n.route.test(t))return n.callback(t),!0})},navigate:function(t,n){if(!A.started)return!1;n&&n!==!0||(n={trigger:!!n});var e=this.root+(t=this.getFragment(t||""));if(t=t.replace(E,""),this.fragment!==t){if(this.fragment=t,""===t&&"/"!==e&&(e=e.slice(0,-1)),this._hasPushState)this.history[n.replace?"replaceState":"pushState"]({},document.title,e);else{if(!this._wantsHashChange)return this.location.assign(e);this._updateHash(this.location,t,n.replace),this.iframe&&t!==this.getFragment(this.getHash(this.iframe))&&(n.replace||this.iframe.document.open().close(),this._updateHash(this.iframe.location,t,n.replace))}return n.trigger?this.loadUrl(t):void 0}},_updateHash:function(t,n,e){if(e){var l=t.href.replace(/(javascript:|#).*$/,"");t.replace(l+"#"+n)}else t.hash="#"+n}}),n.history=new A;var H=function(t,n){var l,a=this;l=t&&e.has(t,"constructor")?t.constructor:function(){return a.apply(this,arguments)},e.extend(l,a,n);var i=function(){this.constructor=l};return i.prototype=a.prototype,l.prototype=new i,t&&e.extend(l.prototype,t),l.__super__=a.prototype,l};h.extend=f.extend=S.extend=b.extend=A.extend=H;var N=function(){throw new Error('A "url" property or function must be specified')},I=function(t,n){var e=n.error;n.error=function(l){e&&e(t,l,n),t.trigger("error",t,l,n)}};return n}),function(t,n){"use strict";"function"==typeof define&&define.amd?define(["undersore","backbone"],n):"object"==typeof exports?module.exports=n(require("underscore"),require("backbone")):n(t._,t.Backbone)}(this,function(t,n){"use strict";t.extend(n.View.prototype,{elementPrefix:"$",refreshElements:function(){var e=this;e.elements&&t.each(e.elements,function(t,l){e[e.elementPrefix+t]=n.$(e.el).find(l)})},initialize:function(){this.refreshElements()}})}),function(t){"use strict";function n(t,n){return Math.round(t/n)*n}function e(t){return"number"==typeof t&&!isNaN(t)&&isFinite(t)}function l(t){var n=Math.pow(10,7);return Number((Math.round(t*n)/n).toFixed(7))}function a(t,n,e){t.addClass(n),setTimeout(function(){t.removeClass(n)},e)}function i(t){return Math.max(Math.min(t,100),0)}function r(n){return t.isArray(n)?n:[n]}function o(t){var n=t.split(".");return n.length>1?n[1].length:0}function s(t,n){return 100/(n-t);
}function g(t,n){return 100*n/(t[1]-t[0])}function u(t,n){return g(t,t[0]<0?n+Math.abs(t[0]):n-t[0])}function c(t,n){return n*(t[1]-t[0])/100+t[0]}function h(t,n){for(var e=1;t>=n[e];)e+=1;return e}function d(t,n,e){if(e>=t.slice(-1)[0])return 100;var l,a,i,r,o=h(e,t);return l=t[o-1],a=t[o],i=n[o-1],r=n[o],i+u([l,a],e)/s(i,r)}function f(t,n,e){if(e>=100)return t.slice(-1)[0];var l,a,i,r,o=h(e,n);return l=t[o-1],a=t[o],i=n[o-1],r=n[o],c([l,a],(e-i)*s(i,r))}function p(t,e,l,a){if(100===a)return a;var i,r,o=h(a,t);return l?(i=t[o-1],r=t[o],a-i>(r-i)/2?r:i):e[o-1]?t[o-1]+n(a-t[o-1],e[o-1]):a}function m(t,n,l){var a;if("number"==typeof n&&(n=[n]),"[object Array]"!==Object.prototype.toString.call(n))throw new Error("noUiSlider: 'range' contains invalid value.");if(a="min"===t?0:"max"===t?100:parseFloat(t),!e(a)||!e(n[0]))throw new Error("noUiSlider: 'range' value isn't numeric.");l.xPct.push(a),l.xVal.push(n[0]),a?l.xSteps.push(!isNaN(n[1])&&n[1]):isNaN(n[1])||(l.xSteps[0]=n[1])}function v(t,n,e){return!n||void(e.xSteps[t]=g([e.xVal[t],e.xVal[t+1]],n)/s(e.xPct[t],e.xPct[t+1]))}function y(t,n,e,l){this.xPct=[],this.xVal=[],this.xSteps=[l||!1],this.xNumSteps=[!1],this.snap=n,this.direction=e;var a,i=[];for(a in t)t.hasOwnProperty(a)&&i.push([t[a],a]);for(i.sort(function(t,n){return t[0]-n[0]}),a=0;a<i.length;a++)m(i[a][1],i[a][0],this);for(this.xNumSteps=this.xSteps.slice(0),a=0;a<this.xNumSteps.length;a++)v(a,this.xNumSteps[a],this)}function b(t,n){if(!e(n))throw new Error("noUiSlider: 'step' is not numeric.");t.singleStep=n}function w(n,e){if("object"!=typeof e||t.isArray(e))throw new Error("noUiSlider: 'range' is not an object.");if(void 0===e.min||void 0===e.max)throw new Error("noUiSlider: Missing 'min' or 'max' in 'range'.");n.spectrum=new y(e,n.snap,n.dir,n.singleStep)}function _(n,e){if(e=r(e),!t.isArray(e)||!e.length||e.length>2)throw new Error("noUiSlider: 'start' option is incorrect.");n.handles=e.length,n.start=e}function C(t,n){if(t.snap=n,"boolean"!=typeof n)throw new Error("noUiSlider: 'snap' option must be a boolean.")}function k(t,n){if(t.animate=n,"boolean"!=typeof n)throw new Error("noUiSlider: 'animate' option must be a boolean.")}function S(t,n){if("lower"===n&&1===t.handles)t.connect=1;else if("upper"===n&&1===t.handles)t.connect=2;else if(n===!0&&2===t.handles)t.connect=3;else{if(n!==!1)throw new Error("noUiSlider: 'connect' option doesn't match handle count.");t.connect=0}}function x(t,n){switch(n){case"horizontal":t.ort=0;break;case"vertical":t.ort=1;break;default:throw new Error("noUiSlider: 'orientation' option is invalid.")}}function L(t,n){if(!e(n))throw new Error("noUiSlider: 'margin' option must be numeric.");if(t.margin=t.spectrum.getMargin(n),!t.margin)throw new Error("noUiSlider: 'margin' option is only supported on linear sliders.")}function M(t,n){if(!e(n))throw new Error("noUiSlider: 'limit' option must be numeric.");if(t.limit=t.spectrum.getMargin(n),!t.limit)throw new Error("noUiSlider: 'limit' option is only supported on linear sliders.")}function T(t,n){switch(n){case"ltr":t.dir=0;break;case"rtl":t.dir=1,t.connect=[0,2,1,3][t.connect];break;default:throw new Error("noUiSlider: 'direction' option was not recognized.")}}function A(t,n){if("string"!=typeof n)throw new Error("noUiSlider: 'behaviour' must be a string containing options.");var e=n.indexOf("tap")>=0,l=n.indexOf("drag")>=0,a=n.indexOf("fixed")>=0,i=n.indexOf("snap")>=0;t.events={tap:e||i,drag:l,fixed:a,snap:i}}function P(t,n){if(t.format=n,"function"==typeof n.to&&"function"==typeof n.from)return!0;throw new Error("noUiSlider: 'format' requires 'to' and 'from' methods.")}function D(n){var e,l={margin:0,limit:0,animate:!0,format:V};return e={step:{r:!1,t:b},start:{r:!0,t:_},connect:{r:!0,t:S},direction:{r:!0,t:T},snap:{r:!1,t:C},animate:{r:!1,t:k},range:{r:!0,t:w},orientation:{r:!1,t:x},margin:{r:!1,t:L},limit:{r:!1,t:M},behaviour:{r:!0,t:A},format:{r:!1,t:P}},n=t.extend({connect:!1,direction:"ltr",behaviour:"tap",orientation:"horizontal"},n),t.each(e,function(t,e){if(void 0===n[t]){if(e.r)throw new Error("noUiSlider: '"+t+"' is required.");return!0}e.t(l,n[t])}),l.style=l.ort?"top":"left",l}function B(t,n,e){var l=t+n[0],a=t+n[1];return e?(l<0&&(a+=Math.abs(l)),a>100&&(l-=a-100),[i(l),i(a)]):[l,a]}function O(t){t.preventDefault();var n,e,l=0===t.type.indexOf("touch"),a=0===t.type.indexOf("mouse"),i=0===t.type.indexOf("pointer"),r=t;return 0===t.type.indexOf("MSPointer")&&(i=!0),t.originalEvent&&(t=t.originalEvent),l&&(n=t.changedTouches[0].pageX,e=t.changedTouches[0].pageY),(a||i)&&(i||void 0!==window.pageXOffset||(window.pageXOffset=document.documentElement.scrollLeft,window.pageYOffset=document.documentElement.scrollTop),n=t.clientX+window.pageXOffset,e=t.clientY+window.pageYOffset),r.points=[n,e],r.cursor=a,r}function E(n,e){var l=t("<div><div/></div>").addClass(z[2]),a=["-lower","-upper"];return n&&a.reverse(),l.children().addClass(z[3]+" "+z[3]+a[e]),l}function H(t,n,e){switch(t){case 1:n.addClass(z[7]),e[0].addClass(z[6]);break;case 3:e[1].addClass(z[6]);case 2:e[0].addClass(z[7]);case 0:n.addClass(z[6])}}function N(t,n,e){var l,a=[];for(l=0;l<t;l+=1)a.push(E(n,l).appendTo(e));return a}function I(n,e,l){return l.addClass([z[0],z[8+n],z[4+e]].join(" ")),t("<div/>").appendTo(l).addClass(z[1])}function R(n,e,l){function s(){return T[["width","height"][e.ort]]()}function g(t){var n,e=[P.val()];for(n=0;n<t.length;n+=1)P.trigger(t[n],e)}function u(t){return 1===t.length?t[0]:e.dir?t.reverse():t}function c(t){return function(n,e){P.val([t?null:e,t?e:null],!0)}}function h(n){var e=t.inArray(n,W);P[0].linkAPI&&P[0].linkAPI[n]&&P[0].linkAPI[n].change(R[e],A[e].children(),P)}function d(n,l){var a=t.inArray(n,W);return l&&l.appendTo(A[a].children()),e.dir&&e.handles>1&&(a=1===a?0:1),c(a)}function f(){var t,n;for(t=0;t<W.length;t+=1)this.linkAPI&&this.linkAPI[n=W[t]]&&this.linkAPI[n].reconfirm(n)}function p(t,n,l,a){return t=t.replace(/\s/g,q+" ")+q,n.on(t,function(t){return!P.attr("disabled")&&(!P.hasClass(z[14])&&(t=O(t),t.calcPoint=t.points[e.ort],void l(t,a)))})}function m(t,n){var e,l=n.handles||A,a=!1,i=100*(t.calcPoint-n.start)/s(),r=l[0][0]!==A[0][0]?1:0;e=B(i,n.positions,l.length>1),a=_(l[0],e[r],1===l.length),l.length>1&&(a=_(l[1],e[r?0:1],!1)||a),a&&g(["slide"])}function v(n){t("."+z[15]).removeClass(z[15]),n.cursor&&t("body").css("cursor","").off(q),G.off(q),P.removeClass(z[12]),g(["set","change"])}function y(n,e){1===e.handles.length&&e.handles[0].children().addClass(z[15]),n.stopPropagation(),p(U.move,G,m,{start:n.calcPoint,handles:e.handles,positions:[D[0],D[A.length-1]]}),p(U.end,G,v,null),n.cursor&&(t("body").css("cursor",t(n.target).css("cursor")),A.length>1&&P.addClass(z[12]),t("body").on("selectstart"+q,!1))}function b(n){var l,i=n.calcPoint,r=0;n.stopPropagation(),t.each(A,function(){r+=this.offset()[e.style]}),r=i<r/2||1===A.length?0:1,i-=T.offset()[e.style],l=100*i/s(),e.events.snap||a(P,z[14],300),_(A[r],l),g(["slide","set","change"]),e.events.snap&&y(n,{handles:[A[r]]})}function w(t){var n,e;if(!t.fixed)for(n=0;n<A.length;n+=1)p(U.start,A[n].children(),y,{handles:[A[n]]});t.tap&&p(U.start,T,b,{handles:A}),t.drag&&(e=T.find("."+z[7]).addClass(z[10]),t.fixed&&(e=e.add(T.children().not(e).children())),p(U.start,e,y,{handles:A}))}function _(t,n,l){var a=t[0]!==A[0][0]?1:0,r=D[0]+e.margin,o=D[1]-e.margin,s=D[0]+e.limit,g=D[1]-e.limit;return A.length>1&&(n=a?Math.max(n,r):Math.min(n,o)),l!==!1&&e.limit&&A.length>1&&(n=a?Math.min(n,s):Math.max(n,g)),n=E.getStep(n),n=i(parseFloat(n.toFixed(7))),n!==D[a]&&(t.css(e.style,n+"%"),t.is(":first-child")&&t.toggleClass(z[17],n>50),D[a]=n,R[a]=E.fromStepping(n),h(W[a]),!0)}function C(t,n){var l,a,i;for(e.limit&&(t+=1),l=0;l<t;l+=1)a=l%2,i=n[a],null!==i&&i!==!1&&("number"==typeof i&&(i=String(i)),i=e.format.from(i),(i===!1||isNaN(i)||_(A[a],E.toStepping(i),l===3-e.dir)===!1)&&h(W[a]))}function k(t){if(P[0].LinkIsEmitting)return this;var n,l=r(t);return e.dir&&e.handles>1&&l.reverse(),e.animate&&D[0]!==-1&&a(P,z[14],300),n=A.length>1?3:1,1===l.length&&(n=1),C(n,l),g(["set"]),this}function S(){var t,n=[];for(t=0;t<e.handles;t+=1)n[t]=e.format.to(R[t]);return u(n)}function x(){return t(this).off(q).removeClass(z.join(" ")).empty(),delete this.LinkUpdate,delete this.LinkConfirm,delete this.LinkDefaultFormatter,delete this.LinkDefaultFlag,delete this.reappend,delete this.vGet,delete this.vSet,delete this.getCurrentStep,delete this.getInfo,delete this.destroy,l}function L(){var n=t.map(D,function(t,n){var e=E.getApplicableStep(t),l=o(String(e[2])),a=R[n],i=100===t?null:e[2],r=Number((a-e[2]).toFixed(l)),s=0===t?null:r>=e[1]?e[2]:e[0]||!1;return[[s,i]]});return u(n)}function M(){return l}var T,A,P=t(n),D=[-1,-1],E=e.spectrum,R=[],W=["lower","upper"].slice(0,e.handles);if(e.dir&&W.reverse(),n.LinkUpdate=h,n.LinkConfirm=d,n.LinkDefaultFormatter=e.format,n.LinkDefaultFlag="lower",n.reappend=f,P.hasClass(z[0]))throw new Error("Slider was already initialized.");T=I(e.dir,e.ort,P),A=N(e.handles,e.dir,T),H(e.connect,P,A),w(e.events),n.vSet=k,n.vGet=S,n.destroy=x,n.getCurrentStep=L,n.getOriginalOptions=M,n.getInfo=function(){return[E,e.style,e.ort]},P.val(e.start)}function W(t){var n=D(t,this);return this.each(function(){R(this,n,t)})}function F(n){return this.each(function(){if(!this.destroy)return void t(this).noUiSlider(n);var e=t(this).val(),l=this.destroy(),a=t.extend({},l,n);t(this).noUiSlider(a),this.reappend(),l.start===a.start&&t(this).val(e)})}function j(){return this[0][arguments.length?"vSet":"vGet"].apply(this[0],arguments)}var G=t(document),$=t.fn.val,q=".nui",U=window.navigator.pointerEnabled?{start:"pointerdown",move:"pointermove",end:"pointerup"}:window.navigator.msPointerEnabled?{start:"MSPointerDown",move:"MSPointerMove",end:"MSPointerUp"}:{start:"mousedown touchstart",move:"mousemove touchmove",end:"mouseup touchend"},z=["noUi-target","noUi-base","noUi-origin","noUi-handle","noUi-horizontal","noUi-vertical","noUi-background","noUi-connect","noUi-ltr","noUi-rtl","noUi-dragable","","noUi-state-drag","","noUi-state-tap","noUi-active","","noUi-stacking"];y.prototype.getMargin=function(t){return 2===this.xPct.length&&g(this.xVal,t)},y.prototype.toStepping=function(t){return t=d(this.xVal,this.xPct,t),this.direction&&(t=100-t),t},y.prototype.fromStepping=function(t){return this.direction&&(t=100-t),l(f(this.xVal,this.xPct,t))},y.prototype.getStep=function(t){return this.direction&&(t=100-t),t=p(this.xPct,this.xSteps,this.snap,t),this.direction&&(t=100-t),t},y.prototype.getApplicableStep=function(t){var n=h(t,this.xPct),e=100===t?2:1;return[this.xNumSteps[n-2],this.xVal[n-e],this.xNumSteps[n-e]]},y.prototype.convert=function(t){return this.getStep(this.toStepping(t))};var V={to:function(t){return t.toFixed(2)},from:Number};t.fn.val=function(n){function e(t){return t.hasClass(z[0])?j:$}if(!arguments.length){var l=t(this[0]);return e(l).call(l)}var a=t.isFunction(n);return this.each(function(l){var i=n,r=t(this);a&&(i=n.call(this,l,r.val())),e(r).call(r,i)})},t.fn.noUiSlider=function(t,n){switch(t){case"step":return this[0].getCurrentStep();case"options":return this[0].getOriginalOptions()}return(n?F:W).call(this,t)}}(window.jQuery||window.Zepto),!function(t){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=t();else if("function"==typeof define&&define.amd)define([],t);else{var n;"undefined"!=typeof window?n=window:"undefined"!=typeof global?n=global:"undefined"!=typeof self&&(n=self),n.selectivity=t()}}(function(){return function t(n,e,l){function a(r,o){if(!e[r]){if(!n[r]){var s="function"==typeof require&&require;if(!o&&s)return s(r,!0);if(i)return i(r,!0);var g=new Error("Cannot find module '"+r+"'");throw g.code="MODULE_NOT_FOUND",g}var u=e[r]={exports:{}};n[r][0].call(u.exports,function(t){var e=n[r][1][t];return a(e?e:t)},u,u.exports,t,n,e,l)}return e[r].exports}for(var i="function"==typeof require&&require,r=0;r<l.length;r++)a(l[r]);return a}({1:[function(t,n,e){t(4),t(5),t(6),t(8),t(9),t(10),t(11),t(12),t(13),t(14),t(15),t(16),t(17),t(18),n.exports=t(7)},{10:10,11:11,12:12,13:13,14:14,15:15,16:16,17:17,18:18,4:4,5:5,6:6,7:7,8:8,9:9}],2:[function(t,n,e){"use strict";function l(t,n){function e(){var l=n-(a()-o);if(l<=0||l>n){var c=g;s=g=void 0,c&&(u=a(),r=t.apply(null,i),s||(i=null))}else s=setTimeout(e,l)}function l(){return i=arguments,o=a(),g=!0,s||(s=setTimeout(e,n)),r}var i,r,o,s,g,u=0;return n=n<0?0:+n||0,l}var a=Date.now;n.exports=l},{}],3:[function(t,n,e){"use strict";function l(t){return i[t]}function a(t){return t?String(t).replace(r,l):""}var i={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;"},r=new RegExp("["+Object.keys(i).join("")+"]","g");n.exports=a},{}],4:[function(t,n,e){"use strict";var l=window.jQuery||window.Zepto,a=t(2),i=t(7);t(12),i.OptionListeners.unshift(function(t,n){var e=n.ajax;if(e&&e.url){var r=e.formatError||i.Locale.ajaxError,o=e.minimumInputLength||0,s=e.params,g=e.processItem||function(t){return t},u=e.quietMillis||0,c=e.results||function(t){return{results:t,more:!1}},h=e.transport||l.ajax;u&&(h=a(h,u)),n.query=function(n){var a=n.offset,u=n.term;if(u.length<o)n.error(i.Locale.needMoreCharacters(o-u.length));else{t.dropdown.showLoading();var d=e.url instanceof Function?e.url():e.url;s&&(d+=(d.indexOf("?")>-1?"&":"?")+l.param(s(u,a)));var f=e.success,p=e.error;h(l.extend({},e,{url:d,success:function(t,e,l){f&&f(t,e,l);var i=c(t,a);i.results=i.results.map(g),n.callback(i)},error:function(t,e,l){p&&p(t,e,l),n.error(r(u,t,e,l),{escape:!1})}}))}}}})},{12:12,2:2,7:7,jquery:"jquery"}],5:[function(t,n,e){"use strict";var l=t(7),a=0;l.OptionListeners.push(function(t,n){var e=n.query;e&&(n.query=function(t){a++;var n=a,l=t.callback,i=t.error;t.callback=function(){n===a&&l.apply(null,arguments)},t.error=function(){n===a&&i.apply(null,arguments)},e(t)})})},{7:7}],6:[function(t,n,e){"use strict";var l=window.jQuery||window.Zepto,a=t(9);l.extend(a.prototype,{removeCloseHandler:function(){this._$backdrop&&!this.parentMenu&&(this._$backdrop.remove(),this._$backdrop=null)},setupCloseHandler:function(){var t;this.parentMenu?t=this.parentMenu._$backdrop:(t=l("<div>").addClass("selectivity-backdrop"),l("body").append(t)),t.on("click",this.close.bind(this)),this._$backdrop=t}})},{9:9,jquery:"jquery"}],7:[function(t,n,e){"use strict";function l(t,n){var e;return this.each(function(){var l=this.selectivity;if(l){if("string"!==i.type(t)&&(n=t,t="setOptions"),"function"!==i.type(l[t]))throw new Error("Unknown method: "+t);void 0===e&&(e=l[t].call(l,n))}else if("string"===i.type(t)){if("destroy"!==t)throw new Error("Cannot call method on element without Selectivity instance")}else{n=i.extend({},t,{element:this});var r=i(this);r.is("select")&&r.prop("multiple")&&(n.multiple=!0);var o=a.InputTypes,s=n.inputType||(n.multiple?"Multiple":"Single");if("function"!==i.type(s)){if(!o[s])throw new Error("Unknown Selectivity input type: "+s);s=o[s]}this.selectivity=new s(n)}}),void 0===e?this:e}function a(t){return this instanceof a?(this.$el=i(t.element),this.$searchInput=null,this.dropdown=null,this.enabled=!0,this.hasTouch="undefined"!=typeof window&&"ontouchstart"in window,this.hasKeyboard=!this.hasTouch,this.items=null,this.matcher=a.matcher,this.options={},this.results=[],this.searchInputListeners=a.SearchInputListeners,this.templates=i.extend({},a.Templates),this.term="",this.setOptions(t),t.value?this.value(t.value,{triggerChange:!1}):this.data(t.data||null,{triggerChange:!1}),this._events=[],this._$searchInputs=[],this.$el.on("selectivity-close",this._closed.bind(this)),void this.delegateEvents()):l.apply(this,arguments)}var i=window.jQuery||window.Zepto;i.extend(a.prototype,{$:function(t){return this.$el.find(t)},close:function(){this.dropdown&&this.dropdown.close()},data:function(t,n){return n=n||{},void 0===t?this._data:(t=this.validateData(t),this._data=t,this._value=this.getValueForData(t),n.triggerChange!==!1&&this.triggerChange(),void 0)},delegateEvents:function(){this.undelegateEvents(),i.each(this.events,function(t,n){var e,l=t.indexOf(" ");l>-1&&(e=t.slice(l+1),t=t.slice(0,l)),"string"===i.type(n)&&(n=this[n]),n=n.bind(this),e?this.$el.on(t,e,n):this.$el.on(t,n),this._events.push({event:t,selector:e,listener:n})}.bind(this))},destroy:function(){this.undelegateEvents();var t=this.$el;t.children().remove(),t[0].selectivity=null,t=null},filterResults:function(t){return t},focus:function(){this.$searchInput&&this.$searchInput.focus()},getItemForId:function(t){var n=this.items;return n?a.findNestedById(n,t):{id:t,text:""+t}},initSearchInput:function(t,n){this._$searchInputs.push(t),this.$searchInput=t,this.searchInputListeners.forEach(function(n){n(this,t)}.bind(this)),n&&n.noSearch===!1||t.on("keyup",function(t){t.isDefaultPrevented()||this.search()}.bind(this))},loadMore:function(){this.options.query({callback:function(t){if(!t||!t.results)throw new Error("callback must be passed a response object");this._addResults(a.processItems(t.results),{hasMore:!!t.more})}.bind(this),error:this._addResults.bind(this,[]),offset:this.results.length,selectivity:this,term:this.term})},open:function(t){if(t=t||{},!this.dropdown&&this.triggerEvent("selectivity-opening")){var n=this.options.dropdown||a.Dropdown;n&&(this.dropdown=new n({position:this.options.positionDropdown,selectivity:this,showSearchInput:t.showSearchInput})),this.search("")}},positionDropdown:function(){this.dropdown&&this.dropdown.position()},removeSearchInput:function(){this._$searchInputs.pop(),this.$searchInput=this._$searchInputs[this._$searchInputs.length-1]||null},search:function(t){function n(n,l){e._setResults(n,i.extend({term:t},l))}var e=this;if(void 0===t){if(!e.$searchInput)return;t=e.$searchInput.val()}if(e.items){t=a.transformText(t);var l=e.matcher;n(e.items.map(function(n){return l(n,t)}).filter(function(t){return!!t}))}else e.options.query&&e.options.query({callback:function(t){if(!t||!t.results)throw new Error("callback must be passed a response object");n(a.processItems(t.results),{hasMore:!!t.more})},error:e._showError.bind(e),offset:0,selectivity:e,term:t});e.term=t},setOptions:function(t){t=t||{},a.OptionListeners.forEach(function(n){n(this,t)}.bind(this)),i.extend(this.options,t);var n=i.extend({closeOnSelect:"boolean",dropdown:"function|null",initSelection:"function|null",matcher:"function|null",placeholder:"string",positionDropdown:"function|null",query:"function|null",readOnly:"boolean",removeOnly:"boolean",searchInputListeners:"array"},t.allowedTypes);i.each(t,function(t,e){var l=n[t];if(l&&!l.split("|").some(function(t){return i.type(e)===t}))throw new Error(t+" must be of type "+l);switch(t){case"items":this.items=null===e?e:a.processItems(e);break;case"matcher":this.matcher=e;break;case"searchInputListeners":this.searchInputListeners=e;break;case"templates":i.extend(this.templates,e)}}.bind(this)),this.enabled=!this.options.readOnly&&!this.options.removeOnly},template:function(t,n){var e=this.templates[t];if(e)return"function"===i.type(e)?e(n):e.render?e.render(n):e.toString();throw new Error("Unknown template: "+t)},triggerChange:function(t){this.triggerEvent("change",i.extend({value:this._value},t))},triggerEvent:function(t,n){var e=i.Event(t,n||{});return this.$el.trigger(e),!e.isDefaultPrevented()},undelegateEvents:function(){this._events.forEach(function(t){t.selector?this.$el.off(t.event,t.selector,t.listener):this.$el.off(t.event,t.listener)},this),this._events=[]},val:function(t){return this.value(t)},validateItem:function(t){if(t&&a.isValidId(t.id)&&"string"===i.type(t.text))return t;throw new Error("Item should have id (number or string) and text (string) properties")},value:function(t,n){return n=n||{},void 0===t?this._value:(t=this.validateValue(t),this._value=t,this.options.initSelection?this.options.initSelection(t,function(e){this._value===t&&(this._data=this.validateData(e),n.triggerChange!==!1&&this.triggerChange())}.bind(this)):(this._data=this.getDataForValue(t),n.triggerChange!==!1&&this.triggerChange()),void 0)},_addResults:function(t,n){this.results=this.results.concat(t),this.dropdown&&this.dropdown.showResults(this.filterResults(t),i.extend({add:!0},n))},_closed:function(){this.dropdown=null},_getItemId:function(t){var n;n=t.target?i(t.target).closest("[data-item-id]"):t.length?t:i(t);var e=n.data("item-id");return"string"===i.type(e)?e:a.findById(this._data||[],e)||a.findNestedById(this.results,e)?e:""+e},_setResults:function(t,n){this.results=t,this.dropdown&&this.dropdown.showResults(this.filterResults(t),n||{})},_showError:function(t,n){this.results=[],this.dropdown&&this.dropdown.showError(t,n)}}),a.Dropdown=null,a.InputTypes={},a.OptionListeners=[],a.SearchInputListeners=[],a.Templates={},a.findById=function(t,n){var e=a.findIndexById(t,n);return e>-1?t[e]:null},a.findIndexById=function(t,n){for(var e=0,l=t.length;e<l;e++)if(t[e].id===n)return e;return-1},a.findNestedById=null,a.inherits=function(t,n,e){return 2===arguments.length&&(e=n,n=a),t.prototype=i.extend(Object.create(n.prototype),{constructor:t},e),function(t,e){n.prototype[e].apply(t,Array.prototype.slice.call(arguments,2))}},a.isValidId=function(t){var n=i.type(t);return"number"===n||"string"===n},a.matcher=function(t,n){var e=null;if(a.transformText(t.text).indexOf(n)>-1)e=t;else if(t.children){var l=t.children.map(function(t){return a.matcher(t,n)}).filter(function(t){return!!t});l.length&&(e={id:t.id,text:t.text,children:l})}return e},a.processItem=function(t){if(a.isValidId(t))return{id:t,text:""+t};if(t&&(a.isValidId(t.id)||t.children)&&"string"===i.type(t.text))return t.children&&(t.children=a.processItems(t.children)),t;throw new Error("invalid item")},a.processItems=function(t){if("array"===i.type(t))return t.map(a.processItem);throw new Error("invalid items")},a.quoteCssAttr=function(t){return'"'+(""+t).replace(/\\/g,"\\\\").replace(/"/g,'\\"')+'"'},a.transformText=function(t){return t.toLowerCase()},n.exports=i.fn.selectivity=a},{jquery:"jquery"}],8:[function(t,n,e){"use strict";var l={"Ⓐ":"A","Ａ":"A","À":"A","Á":"A","Â":"A","Ầ":"A","Ấ":"A","Ẫ":"A","Ẩ":"A","Ã":"A","Ā":"A","Ă":"A","Ằ":"A","Ắ":"A","Ẵ":"A","Ẳ":"A","Ȧ":"A","Ǡ":"A","Ä":"A","Ǟ":"A","Ả":"A","Å":"A","Ǻ":"A","Ǎ":"A","Ȁ":"A","Ȃ":"A","Ạ":"A","Ậ":"A","Ặ":"A","Ḁ":"A","Ą":"A","Ⱥ":"A","Ɐ":"A","Ꜳ":"AA","Æ":"AE","Ǽ":"AE","Ǣ":"AE","Ꜵ":"AO","Ꜷ":"AU","Ꜹ":"AV","Ꜻ":"AV","Ꜽ":"AY","Ⓑ":"B","Ｂ":"B","Ḃ":"B","Ḅ":"B","Ḇ":"B","Ƀ":"B","Ƃ":"B","Ɓ":"B","Ⓒ":"C","Ｃ":"C","Ć":"C","Ĉ":"C","Ċ":"C","Č":"C","Ç":"C","Ḉ":"C","Ƈ":"C","Ȼ":"C","Ꜿ":"C","Ⓓ":"D","Ｄ":"D","Ḋ":"D","Ď":"D","Ḍ":"D","Ḑ":"D","Ḓ":"D","Ḏ":"D","Đ":"D","Ƌ":"D","Ɗ":"D","Ɖ":"D","Ꝺ":"D","Ǳ":"DZ","Ǆ":"DZ","ǲ":"Dz","ǅ":"Dz","Ⓔ":"E","Ｅ":"E","È":"E","É":"E","Ê":"E","Ề":"E","Ế":"E","Ễ":"E","Ể":"E","Ẽ":"E","Ē":"E","Ḕ":"E","Ḗ":"E","Ĕ":"E","Ė":"E","Ë":"E","Ẻ":"E","Ě":"E","Ȅ":"E","Ȇ":"E","Ẹ":"E","Ệ":"E","Ȩ":"E","Ḝ":"E","Ę":"E","Ḙ":"E","Ḛ":"E","Ɛ":"E","Ǝ":"E","Ⓕ":"F","Ｆ":"F","Ḟ":"F","Ƒ":"F","Ꝼ":"F","Ⓖ":"G","Ｇ":"G","Ǵ":"G","Ĝ":"G","Ḡ":"G","Ğ":"G","Ġ":"G","Ǧ":"G","Ģ":"G","Ǥ":"G","Ɠ":"G","Ꞡ":"G","Ᵹ":"G","Ꝿ":"G","Ⓗ":"H","Ｈ":"H","Ĥ":"H","Ḣ":"H","Ḧ":"H","Ȟ":"H","Ḥ":"H","Ḩ":"H","Ḫ":"H","Ħ":"H","Ⱨ":"H","Ⱶ":"H","Ɥ":"H","Ⓘ":"I","Ｉ":"I","Ì":"I","Í":"I","Î":"I","Ĩ":"I","Ī":"I","Ĭ":"I","İ":"I","Ï":"I","Ḯ":"I","Ỉ":"I","Ǐ":"I","Ȉ":"I","Ȋ":"I","Ị":"I","Į":"I","Ḭ":"I","Ɨ":"I","Ⓙ":"J","Ｊ":"J","Ĵ":"J","Ɉ":"J","Ⓚ":"K","Ｋ":"K","Ḱ":"K","Ǩ":"K","Ḳ":"K","Ķ":"K","Ḵ":"K","Ƙ":"K","Ⱪ":"K","Ꝁ":"K","Ꝃ":"K","Ꝅ":"K","Ꞣ":"K","Ⓛ":"L","Ｌ":"L","Ŀ":"L","Ĺ":"L","Ľ":"L","Ḷ":"L","Ḹ":"L","Ļ":"L","Ḽ":"L","Ḻ":"L","Ł":"L","Ƚ":"L","Ɫ":"L","Ⱡ":"L","Ꝉ":"L","Ꝇ":"L","Ꞁ":"L","Ǉ":"LJ","ǈ":"Lj","Ⓜ":"M","Ｍ":"M","Ḿ":"M","Ṁ":"M","Ṃ":"M","Ɱ":"M","Ɯ":"M","Ⓝ":"N","Ｎ":"N","Ǹ":"N","Ń":"N","Ñ":"N","Ṅ":"N","Ň":"N","Ṇ":"N","Ņ":"N","Ṋ":"N","Ṉ":"N","Ƞ":"N","Ɲ":"N","Ꞑ":"N","Ꞥ":"N","Ǌ":"NJ","ǋ":"Nj","Ⓞ":"O","Ｏ":"O","Ò":"O","Ó":"O","Ô":"O","Ồ":"O","Ố":"O","Ỗ":"O","Ổ":"O","Õ":"O","Ṍ":"O","Ȭ":"O","Ṏ":"O","Ō":"O","Ṑ":"O","Ṓ":"O","Ŏ":"O","Ȯ":"O","Ȱ":"O","Ö":"O","Ȫ":"O","Ỏ":"O","Ő":"O","Ǒ":"O","Ȍ":"O","Ȏ":"O","Ơ":"O","Ờ":"O","Ớ":"O","Ỡ":"O","Ở":"O","Ợ":"O","Ọ":"O","Ộ":"O","Ǫ":"O","Ǭ":"O","Ø":"O","Ǿ":"O","Ɔ":"O","Ɵ":"O","Ꝋ":"O","Ꝍ":"O","Ƣ":"OI","Ꝏ":"OO","Ȣ":"OU","Ⓟ":"P","Ｐ":"P","Ṕ":"P","Ṗ":"P","Ƥ":"P","Ᵽ":"P","Ꝑ":"P","Ꝓ":"P","Ꝕ":"P","Ⓠ":"Q","Ｑ":"Q","Ꝗ":"Q","Ꝙ":"Q","Ɋ":"Q","Ⓡ":"R","Ｒ":"R","Ŕ":"R","Ṙ":"R","Ř":"R","Ȑ":"R","Ȓ":"R","Ṛ":"R","Ṝ":"R","Ŗ":"R","Ṟ":"R","Ɍ":"R","Ɽ":"R","Ꝛ":"R","Ꞧ":"R","Ꞃ":"R","Ⓢ":"S","Ｓ":"S","ẞ":"S","Ś":"S","Ṥ":"S","Ŝ":"S","Ṡ":"S","Š":"S","Ṧ":"S","Ṣ":"S","Ṩ":"S","Ș":"S","Ş":"S","Ȿ":"S","Ꞩ":"S","Ꞅ":"S","Ⓣ":"T","Ｔ":"T","Ṫ":"T","Ť":"T","Ṭ":"T","Ț":"T","Ţ":"T","Ṱ":"T","Ṯ":"T","Ŧ":"T","Ƭ":"T","Ʈ":"T","Ⱦ":"T","Ꞇ":"T","Ꜩ":"TZ","Ⓤ":"U","Ｕ":"U","Ù":"U","Ú":"U","Û":"U","Ũ":"U","Ṹ":"U","Ū":"U","Ṻ":"U","Ŭ":"U","Ü":"U","Ǜ":"U","Ǘ":"U","Ǖ":"U","Ǚ":"U","Ủ":"U","Ů":"U","Ű":"U","Ǔ":"U","Ȕ":"U","Ȗ":"U","Ư":"U","Ừ":"U","Ứ":"U","Ữ":"U","Ử":"U","Ự":"U","Ụ":"U","Ṳ":"U","Ų":"U","Ṷ":"U","Ṵ":"U","Ʉ":"U","Ⓥ":"V","Ｖ":"V","Ṽ":"V","Ṿ":"V","Ʋ":"V","Ꝟ":"V","Ʌ":"V","Ꝡ":"VY","Ⓦ":"W","Ｗ":"W","Ẁ":"W","Ẃ":"W","Ŵ":"W","Ẇ":"W","Ẅ":"W","Ẉ":"W","Ⱳ":"W","Ⓧ":"X","Ｘ":"X","Ẋ":"X","Ẍ":"X","Ⓨ":"Y","Ｙ":"Y","Ỳ":"Y","Ý":"Y","Ŷ":"Y","Ỹ":"Y","Ȳ":"Y","Ẏ":"Y","Ÿ":"Y","Ỷ":"Y","Ỵ":"Y","Ƴ":"Y","Ɏ":"Y","Ỿ":"Y","Ⓩ":"Z","Ｚ":"Z","Ź":"Z","Ẑ":"Z","Ż":"Z","Ž":"Z","Ẓ":"Z","Ẕ":"Z","Ƶ":"Z","Ȥ":"Z","Ɀ":"Z","Ⱬ":"Z","Ꝣ":"Z","ⓐ":"a","ａ":"a","ẚ":"a","à":"a","á":"a","â":"a","ầ":"a","ấ":"a","ẫ":"a","ẩ":"a","ã":"a","ā":"a","ă":"a","ằ":"a","ắ":"a","ẵ":"a","ẳ":"a","ȧ":"a","ǡ":"a","ä":"a","ǟ":"a","ả":"a","å":"a","ǻ":"a","ǎ":"a","ȁ":"a","ȃ":"a","ạ":"a","ậ":"a","ặ":"a","ḁ":"a","ą":"a","ⱥ":"a","ɐ":"a","ꜳ":"aa","æ":"ae","ǽ":"ae","ǣ":"ae","ꜵ":"ao","ꜷ":"au","ꜹ":"av","ꜻ":"av","ꜽ":"ay","ⓑ":"b","ｂ":"b","ḃ":"b","ḅ":"b","ḇ":"b","ƀ":"b","ƃ":"b","ɓ":"b","ⓒ":"c","ｃ":"c","ć":"c","ĉ":"c","ċ":"c","č":"c","ç":"c","ḉ":"c","ƈ":"c","ȼ":"c","ꜿ":"c","ↄ":"c","ⓓ":"d","ｄ":"d","ḋ":"d","ď":"d","ḍ":"d","ḑ":"d","ḓ":"d","ḏ":"d","đ":"d","ƌ":"d","ɖ":"d","ɗ":"d","ꝺ":"d","ǳ":"dz","ǆ":"dz","ⓔ":"e","ｅ":"e","è":"e","é":"e","ê":"e","ề":"e","ế":"e","ễ":"e","ể":"e","ẽ":"e","ē":"e","ḕ":"e","ḗ":"e","ĕ":"e","ė":"e","ë":"e","ẻ":"e","ě":"e","ȅ":"e","ȇ":"e","ẹ":"e","ệ":"e","ȩ":"e","ḝ":"e","ę":"e","ḙ":"e","ḛ":"e","ɇ":"e","ɛ":"e","ǝ":"e","ⓕ":"f","ｆ":"f","ḟ":"f","ƒ":"f","ꝼ":"f","ⓖ":"g","ｇ":"g","ǵ":"g","ĝ":"g","ḡ":"g","ğ":"g","ġ":"g","ǧ":"g","ģ":"g","ǥ":"g","ɠ":"g","ꞡ":"g","ᵹ":"g","ꝿ":"g","ⓗ":"h","ｈ":"h","ĥ":"h","ḣ":"h","ḧ":"h","ȟ":"h","ḥ":"h","ḩ":"h","ḫ":"h","ẖ":"h","ħ":"h","ⱨ":"h","ⱶ":"h","ɥ":"h","ƕ":"hv","ⓘ":"i","ｉ":"i","ì":"i","í":"i","î":"i","ĩ":"i","ī":"i","ĭ":"i","ï":"i","ḯ":"i","ỉ":"i","ǐ":"i","ȉ":"i","ȋ":"i","ị":"i","į":"i","ḭ":"i","ɨ":"i","ı":"i","ⓙ":"j","ｊ":"j","ĵ":"j","ǰ":"j","ɉ":"j","ⓚ":"k","ｋ":"k","ḱ":"k","ǩ":"k","ḳ":"k","ķ":"k","ḵ":"k","ƙ":"k","ⱪ":"k","ꝁ":"k","ꝃ":"k","ꝅ":"k","ꞣ":"k","ⓛ":"l","ｌ":"l","ŀ":"l","ĺ":"l","ľ":"l","ḷ":"l","ḹ":"l","ļ":"l","ḽ":"l","ḻ":"l","ſ":"l","ł":"l","ƚ":"l","ɫ":"l","ⱡ":"l","ꝉ":"l","ꞁ":"l","ꝇ":"l","ǉ":"lj","ⓜ":"m","ｍ":"m","ḿ":"m","ṁ":"m","ṃ":"m","ɱ":"m","ɯ":"m","ⓝ":"n","ｎ":"n","ǹ":"n","ń":"n","ñ":"n","ṅ":"n","ň":"n","ṇ":"n","ņ":"n","ṋ":"n","ṉ":"n","ƞ":"n","ɲ":"n","ŉ":"n","ꞑ":"n","ꞥ":"n","ǌ":"nj","ⓞ":"o","ｏ":"o","ò":"o","ó":"o","ô":"o","ồ":"o","ố":"o","ỗ":"o","ổ":"o","õ":"o","ṍ":"o","ȭ":"o","ṏ":"o","ō":"o","ṑ":"o","ṓ":"o","ŏ":"o","ȯ":"o","ȱ":"o","ö":"o","ȫ":"o","ỏ":"o","ő":"o","ǒ":"o","ȍ":"o","ȏ":"o","ơ":"o","ờ":"o","ớ":"o","ỡ":"o","ở":"o","ợ":"o","ọ":"o","ộ":"o","ǫ":"o","ǭ":"o","ø":"o","ǿ":"o","ɔ":"o","ꝋ":"o","ꝍ":"o","ɵ":"o","ƣ":"oi","ȣ":"ou","ꝏ":"oo","ⓟ":"p","ｐ":"p","ṕ":"p","ṗ":"p","ƥ":"p","ᵽ":"p","ꝑ":"p","ꝓ":"p","ꝕ":"p","ⓠ":"q","ｑ":"q","ɋ":"q","ꝗ":"q","ꝙ":"q","ⓡ":"r","ｒ":"r","ŕ":"r","ṙ":"r","ř":"r","ȑ":"r","ȓ":"r","ṛ":"r","ṝ":"r","ŗ":"r","ṟ":"r","ɍ":"r","ɽ":"r","ꝛ":"r","ꞧ":"r","ꞃ":"r","ⓢ":"s","ｓ":"s","ß":"s","ś":"s","ṥ":"s","ŝ":"s","ṡ":"s","š":"s","ṧ":"s","ṣ":"s","ṩ":"s","ș":"s","ş":"s","ȿ":"s","ꞩ":"s","ꞅ":"s","ẛ":"s","ⓣ":"t","ｔ":"t","ṫ":"t","ẗ":"t","ť":"t","ṭ":"t","ț":"t","ţ":"t","ṱ":"t","ṯ":"t","ŧ":"t","ƭ":"t","ʈ":"t","ⱦ":"t","ꞇ":"t","ꜩ":"tz","ⓤ":"u","ｕ":"u","ù":"u","ú":"u","û":"u","ũ":"u","ṹ":"u","ū":"u","ṻ":"u","ŭ":"u","ü":"u","ǜ":"u","ǘ":"u","ǖ":"u","ǚ":"u","ủ":"u","ů":"u","ű":"u","ǔ":"u","ȕ":"u","ȗ":"u","ư":"u","ừ":"u","ứ":"u","ữ":"u","ử":"u","ự":"u","ụ":"u","ṳ":"u","ų":"u","ṷ":"u","ṵ":"u","ʉ":"u","ⓥ":"v","ｖ":"v","ṽ":"v","ṿ":"v","ʋ":"v","ꝟ":"v","ʌ":"v","ꝡ":"vy","ⓦ":"w","ｗ":"w","ẁ":"w","ẃ":"w","ŵ":"w","ẇ":"w","ẅ":"w","ẘ":"w","ẉ":"w","ⱳ":"w","ⓧ":"x","ｘ":"x","ẋ":"x","ẍ":"x","ⓨ":"y","ｙ":"y","ỳ":"y","ý":"y","ŷ":"y","ỹ":"y","ȳ":"y","ẏ":"y","ÿ":"y","ỷ":"y","ẙ":"y","ỵ":"y","ƴ":"y","ɏ":"y","ỿ":"y","ⓩ":"z","ｚ":"z","ź":"z","ẑ":"z","ż":"z","ž":"z","ẓ":"z","ẕ":"z","ƶ":"z","ȥ":"z","ɀ":"z","ⱬ":"z","ꝣ":"z","Ά":"Α","Έ":"Ε","Ή":"Η","Ί":"Ι","Ϊ":"Ι","Ό":"Ο","Ύ":"Υ","Ϋ":"Υ","Ώ":"Ω","ά":"α","έ":"ε","ή":"η","ί":"ι","ϊ":"ι","ΐ":"ι","ό":"ο","ύ":"υ","ϋ":"υ","ΰ":"υ","ω":"ω","ς":"σ"},a=t(7),i=a.transformText;a.transformText=function(t){for(var n="",e=0,a=t.length;e<a;e++){var r=t[e];n+=l[r]||r}return i(n)}},{7:7}],9:[function(t,n,e){"use strict";function l(t){var n=t.selectivity;this.$el=a(n.template("dropdown",{dropdownCssClass:n.options.dropdownCssClass,searchInputPlaceholder:n.options.searchInputPlaceholder,showSearchInput:t.showSearchInput})),this.$results=this.$(".selectivity-results-container"),this.hasMore=!1,this.highlightedResult=null,this.loadMoreHighlighted=!1,this.options=t,this.results=[],this.selectivity=n,this._closeProxy=this.close.bind(this),n.options.closeOnSelect!==!1&&n.$el.on("selectivity-selecting",this._closeProxy),this.addToDom(),this.position(),this.setupCloseHandler(),this._scrolledProxy=i(this._scrolled.bind(this),50),this._suppressMouseWheel(),t.showSearchInput&&(n.initSearchInput(this.$(".selectivity-search-input")),n.focus()),this._delegateEvents(),this.showLoading(),setTimeout(this.triggerOpen.bind(this),1)}var a=window.jQuery||window.Zepto,i=t(2),r=t(7);a.extend(l.prototype,{$:function(t){return this.$el.find(t)},addToDom:function(){this.$el.appendTo(this.selectivity.$el[0].ownerDocument.body)},close:function(){this.options.showSearchInput&&this.selectivity.removeSearchInput(),this.$el.remove(),this.removeCloseHandler(),this.selectivity.$el.off("selectivity-selecting",this._closeProxy),this.triggerClose()},events:{"click .selectivity-load-more":"_loadMoreClicked","click .selectivity-result-item":"_resultClicked","mouseenter .selectivity-load-more":"highlightLoadMore","mouseenter .selectivity-result-item":"_resultHovered"},highlight:function(t){this.loadMoreHighlighted&&this.$(".selectivity-load-more").removeClass("highlight"),this.$(".selectivity-result-item").removeClass("highlight").filter("[data-item-id="+r.quoteCssAttr(t.id)+"]").addClass("highlight"),this.highlightedResult=t,this.loadMoreHighlighted=!1,this.selectivity.triggerEvent("selectivity-highlight",{item:t,id:t.id})},highlightLoadMore:function(){this.$(".selectivity-result-item").removeClass("highlight"),this.$(".selectivity-load-more").addClass("highlight"),this.highlightedResult=null,this.loadMoreHighlighted=!0},position:function(){var t=this.options.position;t&&t(this.$el,this.selectivity.$el),this._scrolled()},removeCloseHandler:function(){a("body").off("click",this._closeProxy)},renderItems:function(t){var n=this.selectivity;return t.map(function(t){var e=n.template(t.id?"resultItem":"resultLabel",t);return t.children&&(e+=n.template("resultChildren",{childrenHtml:this.renderItems(t.children)})),e},this).join("")},selectHighlight:function(){this.highlightedResult?this.selectItem(this.highlightedResult.id):this.loadMoreHighlighted&&this._loadMoreClicked()},selectItem:function(t){var n=this.selectivity,e=r.findNestedById(n.results,t);if(e){var l={id:t,item:e};n.triggerEvent("selectivity-selecting",l)&&n.triggerEvent("selectivity-selected",l)}},setupCloseHandler:function(){a("body").on("click",this._closeProxy)},showError:function(t,n){n=n||{},this.$results.html(this.selectivity.template("error",{escape:n.escape!==!1,message:t})),this.hasMore=!1,this.results=[],this.highlightedResult=null,this.loadMoreHighlighted=!1,this.position()},showLoading:function(){this.$results.html(this.selectivity.template("loading")),
this.hasMore=!1,this.results=[],this.highlightedResult=null,this.loadMoreHighlighted=!1,this.position()},showResults:function(t,n){var e=this.renderItems(t);n.hasMore?e+=this.selectivity.template("loadMore"):e||n.add||(e=this.selectivity.template("noResults",{term:n.term})),n.add?(this.$(".selectivity-loading").replaceWith(e),this.results=this.results.concat(t)):(this.$results.html(e),this.results=t),this.hasMore=n.hasMore,n.add&&!this.loadMoreHighlighted||this._highlightFirstItem(t),this.position()},triggerClose:function(){this.selectivity.$el.trigger("selectivity-close")},triggerOpen:function(){this.selectivity.$el.trigger("selectivity-open")},_delegateEvents:function(){a.each(this.events,function(t,n){var e=t.indexOf(" "),l=t.slice(e+1);t=t.slice(0,e),"string"===a.type(n)&&(n=this[n]),n=n.bind(this),this.$el.on(t,l,n)}.bind(this)),this.$results.on("scroll touchmove touchend",this._scrolledProxy)},_highlightFirstItem:function(t){function n(t){for(var e=0,l=t.length;e<l;e++){var a=t[e];if(a.id)return a;if(a.children){var i=n(a.children);if(i)return i}}}var e=n(t);e?this.highlight(e):(this.highlightedResult=null,this.loadMoreHighlighted=!1)},_loadMoreClicked:function(){return this.$(".selectivity-load-more").replaceWith(this.selectivity.template("loading")),this.selectivity.loadMore(),this.selectivity.focus(),!1},_resultClicked:function(t){return this.selectItem(this.selectivity._getItemId(t)),!1},_resultHovered:function(t){var n=this.selectivity._getItemId(t),e=r.findNestedById(this.results,n);e&&this.highlight(e)},_scrolled:function(){var t=this.$(".selectivity-load-more");t.length&&t[0].offsetTop-this.$results[0].scrollTop<this.$el.height()&&this._loadMoreClicked()},_scrollToHighlight:function(t){var n;if(this.highlightedResult){var e=r.quoteCssAttr(this.highlightedResult.id);n=this.$(".selectivity-result-item[data-item-id="+e+"]")[0]}else{if(!this.loadMoreHighlighted)return;n=this.$(".selectivity-load-more")[0]}var l=n.getBoundingClientRect(),a=this.$results[0].getBoundingClientRect();(l.top<a.top||l.bottom>a.bottom)&&n.scrollIntoView(t.alignToTop)},_suppressMouseWheel:function(){var t=this.selectivity.options.suppressMouseWheelSelector;if(null!==t){var n=t||".selectivity-results-container";this.$el.on("DOMMouseScroll mousewheel",n,function(t){function n(){return t.stopPropagation(),t.preventDefault(),t.returnValue=!1,!1}var e=a(this),l=this.scrollTop,i=this.scrollHeight,r=e.height(),o=t.originalEvent,s="DOMMouseScroll"===t.type?o.detail*-40:o.wheelDelta,g=s>0;if(i>r){if(!g&&-s>i-r-l)return e.scrollTop(i),n();if(g&&s>l)return e.scrollTop(0),n()}})}}}),n.exports=r.Dropdown=l},{2:2,7:7,jquery:"jquery"}],10:[function(t,n,e){"use strict";function l(t){var n=t.indexOf("@"),e=t.lastIndexOf("."),l=t.indexOf(" ");return n>0&&e>n+1&&e<t.length-2&&l===-1}function a(t,n){n=void 0===n?t.length:n;for(var e=n-1;e>=0;e--)if(/\s/.test(t[e]))return t.slice(e+1,n);return t.slice(0,n)}function i(t,n){return t.slice(0,1)===n[0]&&t.slice(-1)===n[1]?t.slice(1,-1).trim():t.trim()}function r(t){var n=a(t),e=t.slice(0,-n.length).trim();return l(n)?(n=i(i(n,"()"),"<>"),e=i(e,'""').trim()||n,{id:n,text:e}):t.trim()?{id:t,text:t}:null}function o(t,n,e){function i(t){if(t)for(var n=0,e=t.length;n<e;n++)switch(t[n]){case";":case",":case"\n":return!0;case" ":case"\t":if(l(a(t,n)))return!0;break;case'"':do n++;while(n<e&&'"'!==t[n]);break;default:continue}return!1}function o(t){for(var n=0,e=t.length;n<e;n++)switch(t[n]){case";":case",":case"\n":return{term:t.slice(0,n),input:t.slice(n+1)};case" ":case"\t":if(l(a(t,n)))return{term:t.slice(0,n),input:t.slice(n+1)};break;case'"':do n++;while(n<e&&'"'!==t[n]);break;default:continue}return{}}for(;i(t);){var s=o(t);if(s.term){var g=r(s.term);!g||g.id&&u.findById(n,g.id)||e(g)}t=s.input}return t}function s(t){c.call(this,t)}var g=window.jQuery||window.Zepto,u=t(7),c=t(13),h=u.inherits(s,c,{initSearchInput:function(t){h(this,"initSearchInput",t),t.on("blur",function(){var n=t.val();l(a(n))&&this.add(r(n))}.bind(this))},setOptions:function(t){t=g.extend({createTokenItem:r,showDropdown:!1,tokenizer:o},t),h(this,"setOptions",t)}});n.exports=u.InputTypes.Email=s},{13:13,7:7,jquery:"jquery"}],11:[function(t,n,e){"use strict";function l(t,n){function e(n,l){function i(t,n){for(var e=0,l=t.length;e<l;e++)if(t.eq(e).is(n))return e;return-1}function r(){var t;if(n.highlightedResult){var e=a.quoteCssAttr(n.highlightedResult.id);t=n.$(".selectivity-result-item[data-item-id="+e+"]")[0]}else{if(!n.loadMoreHighlighted)return;t=n.$(".selectivity-load-more")[0]}var i=t.getBoundingClientRect(),r=n.$results[0].getBoundingClientRect();(i.top<r.top||i.bottom>r.bottom)&&t.scrollIntoView(l<0)}if(n.submenu)return void e(n.submenu,l);var o=n.results;if(o.length){var s=n.$(".selectivity-result-item"),g=l>0?0:s.length-1,u=g,c=n.highlightedResult;if(c){var h=a.quoteCssAttr(c.id);if(u=i(s,"[data-item-id="+h+"]")+l,l>0?u>=s.length:u<0){if(n.hasMore)return n.highlightLoadMore(),void r();u=g}}var d=a.findNestedById(o,t._getItemId(s[u]));d&&(n.highlight(d),r())}}function l(n){var l=t.dropdown;l&&(n.keyCode===r?e(l,1):n.keyCode===u?e(l,-1):n.keyCode===g&&setTimeout(function(){t.close({keepFocus:!1})},1))}function c(e){function l(){t.options.showDropdown!==!1&&t.open()}var a=t.dropdown;if(e.keyCode===i){if(!n.val()){if(a&&a.submenu){for(var g=a.submenu;g.submenu;)g=g.submenu;g.close(),t.focus()}e.preventDefault()}}else e.keyCode!==o||e.ctrlKey?e.keyCode===s?(t.close(),e.preventDefault()):e.keyCode===r||e.keyCode===u?(l(),e.preventDefault()):l():(a?a.selectHighlight():t.options.showDropdown!==!1&&l(),e.preventDefault())}n.on("keydown",l).on("keyup",c)}var a=t(7),i=8,r=40,o=13,s=27,g=9,u=38;a.SearchInputListeners.push(l)},{7:7}],12:[function(t,n,e){"use strict";var l=t(3),a=t(7);a.Locale={ajaxError:function(t){return"Failed to fetch results for <b>"+l(t)+"</b>"},loading:"Loading...",loadMore:"Load more...",needMoreCharacters:function(t){return"Enter "+t+" more characters to search"},noResults:"No results found",noResultsForTerm:function(t){return"No results for <b>"+l(t)+"</b>"}}},{3:3,7:7}],13:[function(t,n,e){"use strict";function l(t){i.call(this,t),this.$el.html(this.template("multipleSelectInput",{enabled:this.enabled})).trigger("selectivity-init","multiple"),this._highlightedItemId=null,this.initSearchInput(this.$(".selectivity-multiple-input:not(.selectivity-width-detector)")),this._rerenderSelection(),t.positionDropdown||(this.options.positionDropdown=function(t,n){var e=n.offset(),l=t.height(),i=n.height(),r=n[0].getBoundingClientRect().top+i+l;t.css({left:e.left+"px",top:e.top+("undefined"!=typeof window&&r>a(window).height()?-l:i)+"px"}).width(n.width())})}var a=window.jQuery||window.Zepto,i=t(7),r=8,o=46,s=13,g=i.inherits(l,{add:function(t){var n=i.isValidId(t),e=n?t:this.validateItem(t)&&t.id;this._value.indexOf(e)===-1&&(this._value.push(e),n&&this.options.initSelection?this.options.initSelection([e],function(n){this._value.indexOf(e)>-1&&(t=this.validateItem(n[0]),this._data.push(t),this.triggerChange({added:t}))}.bind(this)):(n&&(t=this.getItemForId(e)),this._data.push(t),this.triggerChange({added:t}))),this.$searchInput.val("")},clear:function(){this.data([])},events:{change:"_rerenderSelection","change .selectivity-multiple-input":function(){return!1},click:"_clicked","click .selectivity-multiple-selected-item":"_itemClicked","keydown .selectivity-multiple-input":"_keyHeld","keyup .selectivity-multiple-input":"_keyReleased","paste .selectivity-multiple-input":"_onPaste","selectivity-selected":"_resultSelected"},filterResults:function(t){return t.filter(function(t){return!i.findById(this._data,t.id)},this)},getDataForValue:function(t){return t.map(this.getItemForId.bind(this)).filter(function(t){return!!t})},getValueForData:function(t){return t.map(function(t){return t.id})},remove:function(t){var n,e="object"===a.type(t)?t.id:t,l=i.findIndexById(this._data,e);l>-1&&(n=this._data[l],this._data.splice(l,1)),this._value[l]!==e&&(l=this._value.indexOf(e)),l>-1&&this._value.splice(l,1),n&&this.triggerChange({removed:n}),e===this._highlightedItemId&&(this._highlightedItemId=null)},search:function(){var t=this.$searchInput.val();this.options.tokenizer&&(t=this.options.tokenizer(t,this._data,this.add.bind(this),this.options),"string"===a.type(t)?this.$searchInput.val(t):t=""),this.dropdown&&g(this,"search")},setOptions:function(t){t=t||{};var n="backspaceHighlightsBeforeDelete";void 0===t[n]&&(t[n]=this.hasTouch),t.allowedTypes=t.allowedTypes||{},t.allowedTypes[n]="boolean",g(this,"setOptions",t)},validateData:function(t){if(null===t)return[];if("array"===a.type(t))return t.map(this.validateItem.bind(this));throw new Error("Data for MultiSelectivity instance should be array")},validateValue:function(t){if(null===t)return[];if("array"===a.type(t)){if(t.every(i.isValidId))return t;throw new Error("Value contains invalid IDs")}throw new Error("Value for MultiSelectivity instance should be an array")},_backspacePressed:function(){this.options.backspaceHighlightsBeforeDelete?this._highlightedItemId?this._deletePressed():this._value.length&&this._highlightItem(this._value.slice(-1)[0]):this._value.length&&this.remove(this._value.slice(-1)[0])},_clicked:function(){if(this.enabled)return this.focus(),this._open(),!1},_createToken:function(){var t=this.$searchInput.val(),n=this.options.createTokenItem;if(t&&n){var e=n(t);e&&this.add(e)}},_deletePressed:function(){this._highlightedItemId&&this.remove(this._highlightedItemId)},_highlightItem:function(t){this._highlightedItemId=t,this.$(".selectivity-multiple-selected-item").removeClass("highlighted").filter("[data-item-id="+i.quoteCssAttr(t)+"]").addClass("highlighted"),this.hasKeyboard&&this.focus()},_itemClicked:function(t){this.enabled&&this._highlightItem(this._getItemId(t))},_itemRemoveClicked:function(t){return this.remove(this._getItemId(t)),this._updateInputWidth(),!1},_keyHeld:function(t){this._originalValue=this.$searchInput.val(),t.keyCode!==s||t.ctrlKey||t.preventDefault()},_keyReleased:function(t){var n=!!this._originalValue;t.keyCode!==s||t.ctrlKey?t.keyCode!==r||n?t.keyCode!==o||n||this._deletePressed():this._backspacePressed():this.options.createTokenItem&&this._createToken(),this._updateInputWidth()},_onPaste:function(){setTimeout(function(){this.search(),this.options.createTokenItem&&this._createToken()}.bind(this),10)},_open:function(){this.options.showDropdown!==!1&&this.open()},_renderSelectedItem:function(t){this.$searchInput.before(this.template("multipleSelectedItem",a.extend({highlighted:t.id===this._highlightedItemId,removable:!this.options.readOnly},t)));var n=i.quoteCssAttr(t.id);this.$(".selectivity-multiple-selected-item[data-item-id="+n+"]").find(".selectivity-multiple-selected-item-remove").on("click",this._itemRemoveClicked.bind(this))},_rerenderSelection:function(t){if(t=t||{},t.added)this._renderSelectedItem(t.added),this._scrollToBottom();else if(t.removed){var n=i.quoteCssAttr(t.removed.id);this.$(".selectivity-multiple-selected-item[data-item-id="+n+"]").remove()}else this.$(".selectivity-multiple-selected-item").remove(),this._data.forEach(this._renderSelectedItem,this),this._updateInputWidth();(t.added||t.removed)&&(this.dropdown&&this.dropdown.showResults(this.filterResults(this.results),{hasMore:this.dropdown.hasMore}),this.hasKeyboard&&this.focus()),this.positionDropdown(),this._updatePlaceholder()},_resultSelected:function(t){this._value.indexOf(t.id)===-1?this.add(t.item):this.remove(t.item)},_scrollToBottom:function(){var t=this.$(".selectivity-multiple-input-container");t.scrollTop(t.height())},_updateInputWidth:function(){if(this.enabled){var t=this.$searchInput,n=this.$(".selectivity-width-detector");n.text(t.val()||!this._data.length&&this.options.placeholder||""),t.width(n.width()+20),this.positionDropdown()}},_updatePlaceholder:function(){var t=this._data.length?"":this.options.placeholder;this.enabled?this.$searchInput.attr("placeholder",t):this.$(".selectivity-placeholder").text(t)}});n.exports=i.InputTypes.Multiple=l},{7:7,jquery:"jquery"}],14:[function(t,n,e){"use strict";function l(t){i.call(this,t),this.$el.html(this.template("singleSelectInput",this.options)).trigger("selectivity-init","single"),this._rerenderSelection(),t.positionDropdown||(this.options.positionDropdown=function(t,n){var e=n.offset(),l=e.top+n.height();if("undefined"!=typeof window){var i=n[0].getBoundingClientRect(),r=t.height(),o=a(window).height();i.top+r>o&&(l=Math.max(o-r+e.top-i.top,0))}t.css({left:e.left+"px",top:l+"px"}).width(n.width())}),t.showSearchInputInDropdown===!1&&this.initSearchInput(this.$(".selectivity-single-select-input"),{noSearch:!0})}var a=window.jQuery||window.Zepto,i=t(7),r=i.inherits(l,{events:{change:"_rerenderSelection",click:"_clicked","focus .selectivity-single-select-input":"_focused","selectivity-selected":"_resultSelected"},clear:function(){this.data(null)},close:function(t){this._closing=!0,r(this,"close"),t&&t.keepFocus===!1||this.$(".selectivity-single-select-input").focus(),this._closing=!1},getDataForValue:function(t){return this.getItemForId(t)},getValueForData:function(t){return t?t.id:null},open:function(t){var n=this.options.showSearchInputInDropdown!==!1;r(this,"open",a.extend({showSearchInput:n},t)),n||this.focus()},setOptions:function(t){t=t||{},t.allowedTypes=a.extend(t.allowedTypes||{},{allowClear:"boolean",showSearchInputInDropdown:"boolean"}),r(this,"setOptions",t)},validateData:function(t){return null===t?t:this.validateItem(t)},validateValue:function(t){if(null===t||i.isValidId(t))return t;throw new Error("Value for SingleSelectivity instance should be a valid ID or null")},_clicked:function(){if(this.enabled)return this.dropdown?this.close():this.options.showDropdown!==!1&&this.open(),!1},_focused:function(){this.enabled&&!this._closing&&this.options.showDropdown!==!1&&this.open()},_itemRemoveClicked:function(){return this.data(null),!1},_rerenderSelection:function(){var t=this.$(".selectivity-single-result-container");this._data?(t.html(this.template("singleSelectedItem",a.extend({removable:this.options.allowClear&&!this.options.readOnly},this._data))),t.find(".selectivity-single-selected-item-remove").on("click",this._itemRemoveClicked.bind(this))):t.html(this.template("singleSelectPlaceholder",{placeholder:this.options.placeholder}))},_resultSelected:function(t){this.data(t.item),this.close()}});n.exports=i.InputTypes.Single=l},{7:7,jquery:"jquery"}],15:[function(t,n,e){"use strict";function l(t){this.parentMenu=t.parentMenu,i.call(this,t),this._closeSubmenuTimeout=0}var a=t(7),i=t(9),r=a.inherits(l,i,{close:function(){this.options.restoreOptions&&this.selectivity.setOptions(this.options.restoreOptions),this.options.restoreResults&&(this.selectivity.results=this.options.restoreResults),this.submenu&&this.submenu.close(),r(this,"close"),this.parentMenu&&(this.parentMenu.submenu=null,this.parentMenu=null)},highlight:function(t){if(this.submenu){if(!this.highlightedResult||this.highlightedResult.id!==t.id)return this._closeSubmenuTimeout&&clearTimeout(this._closeSubmenuTimeout),void(this._closeSubmenuTimeout=setTimeout(this._closeSubmenuAndHighlight.bind(this,t),100))}else this.parentMenu&&this.parentMenu._closeSubmenuTimeout&&(clearTimeout(this.parentMenu._closeSubmenuTimeout),this.parentMenu._closeSubmenuTimeout=0);this._doHighlight(t)},selectHighlight:function(){this.submenu?this.submenu.selectHighlight():r(this,"selectHighlight")},selectItem:function(t){var n=this.selectivity,e=a.findNestedById(n.results,t);if(e&&!e.submenu){var l={id:t,item:e};n.triggerEvent("selectivity-selecting",l)&&n.triggerEvent("selectivity-selected",l)}},showResults:function(t,n){this.submenu?this.submenu.showResults(t,n):r(this,"showResults",t,n)},triggerClose:function(){this.parentMenu?this.selectivity.$el.trigger("selectivity-close-submenu"):r(this,"triggerClose")},triggerOpen:function(){this.parentMenu?this.selectivity.$el.trigger("selectivity-open-submenu"):r(this,"triggerOpen")},_closeSubmenuAndHighlight:function(t){this.submenu&&this.submenu.close(),this._doHighlight(t)},_doHighlight:function(t){if(r(this,"highlight",t),t.submenu&&!this.submenu){var n=this.selectivity,e=n.options.dropdown||a.Dropdown;if(e){var l=a.quoteCssAttr(t.id),i=this.$(".selectivity-result-item[data-item-id="+l+"]"),o=this.$el;this.submenu=new e({parentMenu:this,position:t.submenu.positionDropdown||function(t){var n=i.offset(),e=o.width();t.css({left:n.left+e+"px",top:n.top+"px"}).width(e)},restoreOptions:{items:n.items,query:n.options.query||null},restoreResults:n.results,selectivity:n,showSearchInput:t.submenu.showSearchInput}),n.setOptions({items:t.submenu.items||null,query:t.submenu.query||null}),n.search("")}}}});a.Dropdown=l,a.findNestedById=function(t,n){for(var e=0,l=t.length;e<l;e++){var i,r=t[e];if(r.id===n?i=r:r.children?i=a.findNestedById(r.children,n):r.submenu&&r.submenu.items&&(i=a.findNestedById(r.submenu.items,n)),i)return i}return null},n.exports=l},{7:7,9:9}],16:[function(t,n,e){"use strict";var l=t(3),a=t(7);t(12),a.Templates={dropdown:function(t){var n=t.dropdownCssClass?" "+t.dropdownCssClass:"",e="";if(t.showSearchInput){n+=" has-search-input";var a=t.searchInputPlaceholder;e='<div class="selectivity-search-input-container"><input type="text" class="selectivity-search-input"'+(a?' placeholder="'+l(a)+'"':"")+"></div>"}return'<div class="selectivity-dropdown'+n+'">'+e+'<div class="selectivity-results-container"></div></div>'},error:function(t){return'<div class="selectivity-error">'+(t.escape?l(t.message):t.message)+"</div>"},loading:function(){return'<div class="selectivity-loading">'+a.Locale.loading+"</div>"},loadMore:function(){return'<div class="selectivity-load-more">'+a.Locale.loadMore+"</div>"},multipleSelectInput:function(t){return'<div class="selectivity-multiple-input-container">'+(t.enabled?'<input type="text" autocomplete="off" autocorrect="off" autocapitalize="off" class="selectivity-multiple-input"><span class="selectivity-multiple-input selectivity-width-detector"></span>':'<div class="selectivity-multiple-input selectivity-placeholder"></div>')+'<div class="selectivity-clearfix"></div></div>'},multipleSelectedItem:function(t){var n=t.highlighted?" highlighted":"";return'<span class="selectivity-multiple-selected-item'+n+'" data-item-id="'+l(t.id)+'">'+l(t.text)+(t.removable?'<a class="selectivity-multiple-selected-item-remove"><i class="fa fa-remove"></i></a>':"")+"</span>"},noResults:function(t){var n=a.Locale;return'<div class="selectivity-error">'+(t.term?n.noResultsForTerm(t.term):n.noResults)+"</div>"},resultChildren:function(t){return'<div class="selectivity-result-children">'+t.childrenHtml+"</div>"},resultItem:function(t){return'<div class="selectivity-result-item" data-item-id="'+l(t.id)+'">'+l(t.text)+(t.submenu?'<i class="selectivity-submenu-icon fa fa-chevron-right"></i>':"")+"</div>"},resultLabel:function(t){return'<div class="selectivity-result-label">'+l(t.text)+"</div>"},singleSelectInput:'<div class="selectivity-single-select"><input type="text" class="selectivity-single-select-input"><div class="selectivity-single-result-container"></div><i class="fa fa-sort-desc selectivity-caret"></i></div>',singleSelectPlaceholder:function(t){return'<div class="selectivity-placeholder">'+l(t.placeholder)+"</div>"},singleSelectedItem:function(t){return'<span class="selectivity-single-selected-item" data-item-id="'+l(t.id)+'">'+(t.removable?'<a class="selectivity-single-selected-item-remove"><i class="fa fa-remove"></i></a>':"")+l(t.text)+"</span>"},selectCompliance:function(t){return'<select name="'+t.name+'"'+("multiple"===t.mode?" multiple":"")+"></select>"},selectOptionCompliance:function(t){return'<option value="'+l(t.id)+'" selected>'+l(t.text)+"</option>"}}},{12:12,3:3,7:7}],17:[function(t,n,e){"use strict";function l(t,n,e,l){function a(t){return!!t&&s.some(function(n){return t.indexOf(n)>-1})}function r(t){for(var n=0,e=t.length;n<e;n++)if(s.indexOf(t[n])>-1)return{term:t.slice(0,n),input:t.slice(n+1)};return{}}for(var o=l.createTokenItem||function(t){return t?{id:t,text:t}:null},s=l.tokenSeparators;a(t);){var g=r(t);if(g.term){var u=o(g.term);u&&!i.findById(n,u.id)&&e(u)}t=g.input}return t}var a=window.jQuery||window.Zepto,i=t(7);i.OptionListeners.push(function(t,n){n.tokenSeparators&&(n.allowedTypes=a.extend({tokenSeparators:"array"},n.allowedTypes),n.tokenizer=n.tokenizer||l)})},{7:7,jquery:"jquery"}],18:[function(t,n,e){"use strict";function l(t,n){var e=n.multiple?[]:null,l=function(){var t=i(this);if(t.is("option")){var a=t.attr("value")||t.text();return t.prop("selected")&&(n.multiple?e.push(a):e=a),{id:a,text:t.attr("label")||t.text()}}return{text:t.attr("label"),children:t.children("option,optgroup").map(l).get()}};n.allowClear="allowClear"in n?n.allowClear:!t.prop("required"),n.items=t.children("option,optgroup").map(l).get(),n.placeholder=n.placeholder||t.data("placeholder")||"",n.value=e;var a=(t.attr("class")||"selectivity-input").split(" ");a.indexOf("selectivity-input")===-1&&a.push("selectivity-input");var r=i("<div>").attr({id:t.attr("id"),"class":a.join(" "),style:t.attr("style"),"data-name":t.attr("name")});return t.replaceWith(r),r}function a(t){var n=t.$el;n.on("selectivity-init",function(e,l){n.append(t.template("selectCompliance",{name:n.attr("data-name"),mode:l})).removeAttr("data-name")}).on("selectivity-init change",function(){var e=t._data,l=n.find("select");e instanceof Array?(l.empty(),e.forEach(function(n){l.append(t.template("selectOptionCompliance",n))})):e?l.html(t.template("selectOptionCompliance",e)):l.empty()})}var i=window.jQuery||window.Zepto,r=t(7);r.OptionListeners.push(function(t,n){var e=t.$el;e.is("select")&&(e.attr("autofocus")&&setTimeout(function(){t.focus()},1),t.$el=l(e,n),t.$el[0].selectivity=t,a(t))})},{7:7,jquery:"jquery"}]},{},[1])(1)}),function(t){"function"==typeof define&&define.amd?define("picker",["jquery"],t):"object"==typeof exports?module.exports=t(require("jquery")):this.Picker=t(jQuery)}(function(t){function n(i,r,s,h){function d(){return n._.node("div",n._.node("div",n._.node("div",n._.node("div",M.component.nodes(C.open),S.box),S.wrap),S.frame),S.holder,'tabindex="-1"')}function f(){x.data(r,M).addClass(S.input).val(x.data("value")?M.get("select",k.format):i.value),k.editable||x.on("focus."+C.id+" click."+C.id,function(t){t.preventDefault(),M.open()}).on("keydown."+C.id,w),a(i,{haspopup:!0,expanded:!1,readonly:!1,owns:i.id+"_root"})}function p(){a(M.$root[0],"hidden",!0)}function m(){M.$holder.on({keydown:w,"focus.toOpen":b,blur:function(){x.removeClass(S.target)},focusin:function(t){M.$root.removeClass(S.focused),t.stopPropagation()},"mousedown click":function(n){var e=n.target;e!=M.$holder[0]&&(n.stopPropagation(),"mousedown"!=n.type||t(e).is("input, select, textarea, button, option")||(n.preventDefault(),M.$holder[0].focus()))}}).on("click","[data-pick], [data-nav], [data-clear], [data-close]",function(){var n=t(this),e=n.data(),l=n.hasClass(S.navDisabled)||n.hasClass(S.disabled),a=o();a=a&&(a.type||a.href),(l||a&&!t.contains(M.$root[0],a))&&M.$holder[0].focus(),!l&&e.nav?M.set("highlight",M.component.item.highlight,{nav:e.nav}):!l&&"pick"in e?(M.set("select",e.pick),k.closeOnSelect&&M.close(!0)):e.clear?(M.clear(),k.closeOnClear&&M.close(!0)):e.close&&M.close(!0)})}function v(){var n;k.hiddenName===!0?(n=i.name,i.name=""):(n=["string"==typeof k.hiddenPrefix?k.hiddenPrefix:"","string"==typeof k.hiddenSuffix?k.hiddenSuffix:"_submit"],n=n[0]+i.name+n[1]),M._hidden=t('<input type=hidden name="'+n+'"'+(x.data("value")||i.value?' value="'+M.get("select",k.formatSubmit)+'"':"")+">")[0],x.on("change."+C.id,function(){M._hidden.value=i.value?M.get("select",k.formatSubmit):""})}function y(){_&&c?M.$holder.find("."+S.frame).one("transitionend",function(){M.$holder[0].focus()}):M.$holder[0].focus()}function b(t){t.stopPropagation(),x.addClass(S.target),M.$root.addClass(S.focused),M.open()}function w(t){var n=t.keyCode,e=/^(8|46)$/.test(n);return 27==n?(M.close(!0),!1):void((32==n||e||!C.open&&M.component.key[n])&&(t.preventDefault(),t.stopPropagation(),e?M.clear().close():M.open()))}if(!i)return n;var _=!1,C={id:i.id||"P"+Math.abs(~~(Math.random()*new Date))},k=s?t.extend(!0,{},s.defaults,h):h||{},S=t.extend({},n.klasses(),k.klass),x=t(i),L=function(){return this.start()},M=L.prototype={constructor:L,$node:x,start:function(){return C&&C.start?M:(C.methods={},C.start=!0,C.open=!1,C.type=i.type,i.autofocus=i==o(),i.readOnly=!k.editable,i.id=i.id||C.id,"text"!=i.type&&(i.type="text"),M.component=new s(M,k),M.$root=t('<div class="'+S.picker+'" id="'+i.id+'_root" />'),p(),M.$holder=t(d()).appendTo(M.$root),m(),k.formatSubmit&&v(),f(),k.containerHidden?t(k.containerHidden).append(M._hidden):x.after(M._hidden),k.container?t(k.container).append(M.$root):x.after(M.$root),M.on({start:M.component.onStart,render:M.component.onRender,stop:M.component.onStop,open:M.component.onOpen,close:M.component.onClose,set:M.component.onSet}).on({start:k.onStart,render:k.onRender,stop:k.onStop,open:k.onOpen,close:k.onClose,set:k.onSet}),_=e(M.$holder[0]),i.autofocus&&M.open(),M.trigger("start").trigger("render"))},render:function(n){return n?(M.$holder=t(d()),m(),M.$root.html(M.$holder)):M.$root.find("."+S.box).html(M.component.nodes(C.open)),M.trigger("render")},stop:function(){return C.start?(M.close(),M._hidden&&M._hidden.parentNode.removeChild(M._hidden),M.$root.remove(),x.removeClass(S.input).removeData(r),setTimeout(function(){x.off("."+C.id)},0),i.type=C.type,i.readOnly=!1,M.trigger("stop"),C.methods={},C.start=!1,M):M},open:function(e){return C.open?M:(x.addClass(S.active),a(i,"expanded",!0),setTimeout(function(){M.$root.addClass(S.opened),a(M.$root[0],"hidden",!1)},0),e!==!1&&(C.open=!0,_&&u.css("overflow","hidden").css("padding-right","+="+l()),y(),g.on("click."+C.id+" focusin."+C.id,function(t){var n=t.target;n!=i&&n!=document&&3!=t.which&&M.close(n===M.$holder[0])}).on("keydown."+C.id,function(e){var l=e.keyCode,a=M.component.key[l],i=e.target;27==l?M.close(!0):i!=M.$holder[0]||!a&&13!=l?t.contains(M.$root[0],i)&&13==l&&(e.preventDefault(),i.click()):(e.preventDefault(),a?n._.trigger(M.component.key.go,M,[n._.trigger(a)]):M.$root.find("."+S.highlighted).hasClass(S.disabled)||(M.set("select",M.component.item.highlight),k.closeOnSelect&&M.close(!0)))})),M.trigger("open"))},close:function(t){return t&&(k.editable?i.focus():(M.$holder.off("focus.toOpen").focus(),setTimeout(function(){M.$holder.on("focus.toOpen",b)},0))),x.removeClass(S.active),a(i,"expanded",!1),setTimeout(function(){M.$root.removeClass(S.opened+" "+S.focused),a(M.$root[0],"hidden",!0)},0),C.open?(C.open=!1,_&&u.css("overflow","").css("padding-right","-="+l()),g.off("."+C.id),M.trigger("close")):M},clear:function(t){return M.set("clear",null,t)},set:function(n,e,l){var a,i,r=t.isPlainObject(n),o=r?n:{};if(l=r&&t.isPlainObject(e)?e:l||{},n){r||(o[n]=e);for(a in o)i=o[a],a in M.component.item&&(void 0===i&&(i=null),M.component.set(a,i,l)),"select"!=a&&"clear"!=a||x.val("clear"==a?"":M.get(a,k.format)).trigger("change");M.render()}return l.muted?M:M.trigger("set",o)},get:function(t,e){if(t=t||"value",null!=C[t])return C[t];if("valueSubmit"==t){if(M._hidden)return M._hidden.value;t="value"}if("value"==t)return i.value;if(t in M.component.item){if("string"==typeof e){var l=M.component.get(t);return l?n._.trigger(M.component.formats.toString,M.component,[e,l]):""}return M.component.get(t)}},on:function(n,e,l){var a,i,r=t.isPlainObject(n),o=r?n:{};if(n){r||(o[n]=e);for(a in o)i=o[a],l&&(a="_"+a),C.methods[a]=C.methods[a]||[],C.methods[a].push(i)}return M},off:function(){var t,n,e=arguments;for(t=0,namesCount=e.length;t<namesCount;t+=1)n=e[t],n in C.methods&&delete C.methods[n];return M},trigger:function(t,e){var l=function(t){var l=C.methods[t];l&&l.map(function(t){n._.trigger(t,M,[e])})};return l("_"+t),l(t),M}};return new L}function e(t){var n,e="position";return t.currentStyle?n=t.currentStyle[e]:window.getComputedStyle&&(n=getComputedStyle(t)[e]),"fixed"==n}function l(){if(u.height()<=s.height())return 0;var n=t('<div style="visibility:hidden;width:100px" />').appendTo("body"),e=n[0].offsetWidth;n.css("overflow","scroll");var l=t('<div style="width:100%" />').appendTo(n),a=l[0].offsetWidth;return n.remove(),e-a}function a(n,e,l){if(t.isPlainObject(e))for(var a in e)i(n,a,e[a]);else i(n,e,l)}function i(t,n,e){t.setAttribute(("role"==n?"":"aria-")+n,e)}function r(n,e){t.isPlainObject(n)||(n={attribute:e}),e="";for(var l in n){var a=("role"==l?"":"aria-")+l,i=n[l];e+=null==i?"":a+'="'+n[l]+'"'}return e}function o(){try{return document.activeElement}catch(t){}}var s=t(window),g=t(document),u=t(document.documentElement),c=null!=document.documentElement.style.transition;return n.klasses=function(t){return t=t||"picker",{picker:t,opened:t+"--opened",focused:t+"--focused",input:t+"__input",active:t+"__input--active",target:t+"__input--target",holder:t+"__holder",frame:t+"__frame",wrap:t+"__wrap",box:t+"__box"}},n._={group:function(t){for(var e,l="",a=n._.trigger(t.min,t);a<=n._.trigger(t.max,t,[a]);a+=t.i)e=n._.trigger(t.item,t,[a]),l+=n._.node(t.node,e[0],e[1],e[2]);return l},node:function(n,e,l,a){return e?(e=t.isArray(e)?e.join(""):e,l=l?' class="'+l+'"':"",a=a?" "+a:"","<"+n+l+a+">"+e+"</"+n+">"):""},lead:function(t){return(t<10?"0":"")+t},trigger:function(t,n,e){return"function"==typeof t?t.apply(n,e||[]):t},digits:function(t){return/\d/.test(t[1])?2:1},isDate:function(t){return{}.toString.call(t).indexOf("Date")>-1&&this.isInteger(t.getDate())},isInteger:function(t){return{}.toString.call(t).indexOf("Number")>-1&&t%1===0},ariaAttr:r},n.extend=function(e,l){t.fn[e]=function(a,i){var r=this.data(e);return"picker"==a?r:r&&"string"==typeof a?n._.trigger(r[a],r,[i]):this.each(function(){var i=t(this);i.data(e)||new n(this,e,l,a)})},t.fn[e].defaults=l.defaults},n}),function(t){"function"==typeof define&&define.amd?define(["picker","jquery"],t):"object"==typeof exports?module.exports=t(require("./picker.js"),require("jquery")):t(Picker,jQuery)}(function(t,n){function e(t,n){var e=this,l=t.$node[0],a=l.value,i=t.$node.data("value"),r=i||a,o=i?n.formatSubmit:n.format,s=function(){return l.currentStyle?"rtl"==l.currentStyle.direction:"rtl"==getComputedStyle(t.$root[0]).direction};e.settings=n,e.$node=t.$node,e.queue={min:"measure create",max:"measure create",now:"now create",select:"parse create validate",highlight:"parse navigate create validate",view:"parse create validate viewset",disable:"deactivate",enable:"activate"},e.item={},e.item.clear=null,e.item.disable=(n.disable||[]).slice(0),e.item.enable=-function(t){return t[0]===!0?t.shift():-1}(e.item.disable),e.set("min",n.min).set("max",n.max).set("now"),r?e.set("select",r,{format:o,defaultValue:!0}):e.set("select",null).set("highlight",e.item.now),e.key={40:7,38:-7,39:function(){return s()?-1:1},37:function(){return s()?1:-1},go:function(t){var n=e.item.highlight,l=new Date(n.year,n.month,n.date+t);e.set("highlight",l,{interval:t}),this.render()}},t.on("render",function(){t.$root.find("."+n.klass.selectMonth).on("change",function(){var e=this.value;e&&(t.set("highlight",[t.get("view").year,e,t.get("highlight").date]),t.$root.find("."+n.klass.selectMonth).trigger("focus"))}),t.$root.find("."+n.klass.selectYear).on("change",function(){var e=this.value;e&&(t.set("highlight",[e,t.get("view").month,t.get("highlight").date]),t.$root.find("."+n.klass.selectYear).trigger("focus"))})},1).on("open",function(){var l="";e.disabled(e.get("now"))&&(l=":not(."+n.klass.buttonToday+")"),t.$root.find("button"+l+", select").attr("disabled",!1)},1).on("close",function(){t.$root.find("button, select").attr("disabled",!0)},1)}var l=7,a=6,i=t._;e.prototype.set=function(t,n,e){var l=this,a=l.item;return null===n?("clear"==t&&(t="select"),a[t]=n,l):(a["enable"==t?"disable":"flip"==t?"enable":t]=l.queue[t].split(" ").map(function(a){return n=l[a](t,n,e)}).pop(),"select"==t?l.set("highlight",a.select,e):"highlight"==t?l.set("view",a.highlight,e):t.match(/^(flip|min|max|disable|enable)$/)&&(a.select&&l.disabled(a.select)&&l.set("select",a.select,e),
a.highlight&&l.disabled(a.highlight)&&l.set("highlight",a.highlight,e)),l)},e.prototype.get=function(t){return this.item[t]},e.prototype.create=function(t,e,l){var a,r=this;return e=void 0===e?t:e,e==-(1/0)||e==1/0?a=e:n.isPlainObject(e)&&i.isInteger(e.pick)?e=e.obj:n.isArray(e)?(e=new Date(e[0],e[1],e[2]),e=i.isDate(e)?e:r.create().obj):e=i.isInteger(e)||i.isDate(e)?r.normalize(new Date(e),l):r.now(t,e,l),{year:a||e.getFullYear(),month:a||e.getMonth(),date:a||e.getDate(),day:a||e.getDay(),obj:a||e,pick:a||e.getTime()}},e.prototype.createRange=function(t,e){var l=this,a=function(t){return t===!0||n.isArray(t)||i.isDate(t)?l.create(t):t};return i.isInteger(t)||(t=a(t)),i.isInteger(e)||(e=a(e)),i.isInteger(t)&&n.isPlainObject(e)?t=[e.year,e.month,e.date+t]:i.isInteger(e)&&n.isPlainObject(t)&&(e=[t.year,t.month,t.date+e]),{from:a(t),to:a(e)}},e.prototype.withinRange=function(t,n){return t=this.createRange(t.from,t.to),n.pick>=t.from.pick&&n.pick<=t.to.pick},e.prototype.overlapRanges=function(t,n){var e=this;return t=e.createRange(t.from,t.to),n=e.createRange(n.from,n.to),e.withinRange(t,n.from)||e.withinRange(t,n.to)||e.withinRange(n,t.from)||e.withinRange(n,t.to)},e.prototype.now=function(t,n,e){return n=new Date,e&&e.rel&&n.setDate(n.getDate()+e.rel),this.normalize(n,e)},e.prototype.navigate=function(t,e,l){var a,i,r,o,s=n.isArray(e),g=n.isPlainObject(e),u=this.item.view;if(s||g){for(g?(i=e.year,r=e.month,o=e.date):(i=+e[0],r=+e[1],o=+e[2]),l&&l.nav&&u&&u.month!==r&&(i=u.year,r=u.month),a=new Date(i,r+(l&&l.nav?l.nav:0),1),i=a.getFullYear(),r=a.getMonth();new Date(i,r,o).getMonth()!==r;)o-=1;e=[i,r,o]}return e},e.prototype.normalize=function(t){return t.setHours(0,0,0,0),t},e.prototype.measure=function(t,n){var e=this;return n?"string"==typeof n?n=e.parse(t,n):i.isInteger(n)&&(n=e.now(t,n,{rel:n})):n="min"==t?-(1/0):1/0,n},e.prototype.viewset=function(t,n){return this.create([n.year,n.month,1])},e.prototype.validate=function(t,e,l){var a,r,o,s,g=this,u=e,c=l&&l.interval?l.interval:1,h=g.item.enable===-1,d=g.item.min,f=g.item.max,p=h&&g.item.disable.filter(function(t){if(n.isArray(t)){var l=g.create(t).pick;l<e.pick?a=!0:l>e.pick&&(r=!0)}return i.isInteger(t)}).length;if((!l||!l.nav&&!l.defaultValue)&&(!h&&g.disabled(e)||h&&g.disabled(e)&&(p||a||r)||!h&&(e.pick<=d.pick||e.pick>=f.pick)))for(h&&!p&&(!r&&c>0||!a&&c<0)&&(c*=-1);g.disabled(e)&&(Math.abs(c)>1&&(e.month<u.month||e.month>u.month)&&(e=u,c=c>0?1:-1),e.pick<=d.pick?(o=!0,c=1,e=g.create([d.year,d.month,d.date+(e.pick===d.pick?0:-1)])):e.pick>=f.pick&&(s=!0,c=-1,e=g.create([f.year,f.month,f.date+(e.pick===f.pick?0:1)])),!o||!s);)e=g.create([e.year,e.month,e.date+c]);return e},e.prototype.disabled=function(t){var e=this,l=e.item.disable.filter(function(l){return i.isInteger(l)?t.day===(e.settings.firstDay?l:l-1)%7:n.isArray(l)||i.isDate(l)?t.pick===e.create(l).pick:n.isPlainObject(l)?e.withinRange(l,t):void 0});return l=l.length&&!l.filter(function(t){return n.isArray(t)&&"inverted"==t[3]||n.isPlainObject(t)&&t.inverted}).length,e.item.enable===-1?!l:l||t.pick<e.item.min.pick||t.pick>e.item.max.pick},e.prototype.parse=function(t,n,e){var l=this,a={};return n&&"string"==typeof n?(e&&e.format||(e=e||{},e.format=l.settings.format),l.formats.toArray(e.format).map(function(t){var e=l.formats[t],r=e?i.trigger(e,l,[n,a]):t.replace(/^!/,"").length;e&&(a[t]=n.substr(0,r)),n=n.substr(r)}),[a.yyyy||a.yy,+(a.mm||a.m)-1,a.dd||a.d]):n},e.prototype.formats=function(){function t(t,n,e){var l=t.match(/[^\x00-\x7F]+|\w+/)[0];return e.mm||e.m||(e.m=n.indexOf(l)+1),l.length}function n(t){return t.match(/\w+/)[0].length}return{d:function(t,n){return t?i.digits(t):n.date},dd:function(t,n){return t?2:i.lead(n.date)},ddd:function(t,e){return t?n(t):this.settings.weekdaysShort[e.day]},dddd:function(t,e){return t?n(t):this.settings.weekdaysFull[e.day]},m:function(t,n){return t?i.digits(t):n.month+1},mm:function(t,n){return t?2:i.lead(n.month+1)},mmm:function(n,e){var l=this.settings.monthsShort;return n?t(n,l,e):l[e.month]},mmmm:function(n,e){var l=this.settings.monthsFull;return n?t(n,l,e):l[e.month]},yy:function(t,n){return t?2:(""+n.year).slice(2)},yyyy:function(t,n){return t?4:n.year},toArray:function(t){return t.split(/(d{1,4}|m{1,4}|y{4}|yy|!.)/g)},toString:function(t,n){var e=this;return e.formats.toArray(t).map(function(t){return i.trigger(e.formats[t],e,[0,n])||t.replace(/^!/,"")}).join("")}}}(),e.prototype.isDateExact=function(t,e){var l=this;return i.isInteger(t)&&i.isInteger(e)||"boolean"==typeof t&&"boolean"==typeof e?t===e:(i.isDate(t)||n.isArray(t))&&(i.isDate(e)||n.isArray(e))?l.create(t).pick===l.create(e).pick:!(!n.isPlainObject(t)||!n.isPlainObject(e))&&(l.isDateExact(t.from,e.from)&&l.isDateExact(t.to,e.to))},e.prototype.isDateOverlap=function(t,e){var l=this,a=l.settings.firstDay?1:0;return i.isInteger(t)&&(i.isDate(e)||n.isArray(e))?(t=t%7+a,t===l.create(e).day+1):i.isInteger(e)&&(i.isDate(t)||n.isArray(t))?(e=e%7+a,e===l.create(t).day+1):!(!n.isPlainObject(t)||!n.isPlainObject(e))&&l.overlapRanges(t,e)},e.prototype.flipEnable=function(t){var n=this.item;n.enable=t||(n.enable==-1?1:-1)},e.prototype.deactivate=function(t,e){var l=this,a=l.item.disable.slice(0);return"flip"==e?l.flipEnable():e===!1?(l.flipEnable(1),a=[]):e===!0?(l.flipEnable(-1),a=[]):e.map(function(t){for(var e,r=0;r<a.length;r+=1)if(l.isDateExact(t,a[r])){e=!0;break}e||(i.isInteger(t)||i.isDate(t)||n.isArray(t)||n.isPlainObject(t)&&t.from&&t.to)&&a.push(t)}),a},e.prototype.activate=function(t,e){var l=this,a=l.item.disable,r=a.length;return"flip"==e?l.flipEnable():e===!0?(l.flipEnable(1),a=[]):e===!1?(l.flipEnable(-1),a=[]):e.map(function(t){var e,o,s,g;for(s=0;s<r;s+=1){if(o=a[s],l.isDateExact(o,t)){e=a[s]=null,g=!0;break}if(l.isDateOverlap(o,t)){n.isPlainObject(t)?(t.inverted=!0,e=t):n.isArray(t)?(e=t,e[3]||e.push("inverted")):i.isDate(t)&&(e=[t.getFullYear(),t.getMonth(),t.getDate(),"inverted"]);break}}if(e)for(s=0;s<r;s+=1)if(l.isDateExact(a[s],t)){a[s]=null;break}if(g)for(s=0;s<r;s+=1)if(l.isDateOverlap(a[s],t)){a[s]=null;break}e&&a.push(e)}),a.filter(function(t){return null!=t})},e.prototype.nodes=function(t){var n=this,e=n.settings,r=n.item,o=r.now,s=r.select,g=r.highlight,u=r.view,c=r.disable,h=r.min,d=r.max,f=function(t,n){return e.firstDay&&(t.push(t.shift()),n.push(n.shift())),i.node("thead",i.node("tr",i.group({min:0,max:l-1,i:1,node:"th",item:function(l){return[t[l],e.klass.weekdays,'scope=col title="'+n[l]+'"']}})))}((e.showWeekdaysFull?e.weekdaysFull:e.weekdaysShort).slice(0),e.weekdaysFull.slice(0)),p=function(t){return i.node("div"," ",e.klass["nav"+(t?"Next":"Prev")]+(t&&u.year>=d.year&&u.month>=d.month||!t&&u.year<=h.year&&u.month<=h.month?" "+e.klass.navDisabled:""),"data-nav="+(t||-1)+" "+i.ariaAttr({role:"button",controls:n.$node[0].id+"_table"})+' title="'+(t?e.labelMonthNext:e.labelMonthPrev)+'"')},m=function(){var l=e.showMonthsShort?e.monthsShort:e.monthsFull;return e.selectMonths?i.node("select",i.group({min:0,max:11,i:1,node:"option",item:function(t){return[l[t],0,"value="+t+(u.month==t?" selected":"")+(u.year==h.year&&t<h.month||u.year==d.year&&t>d.month?" disabled":"")]}}),e.klass.selectMonth,(t?"":"disabled")+" "+i.ariaAttr({controls:n.$node[0].id+"_table"})+' title="'+e.labelMonthSelect+'"'):i.node("div",l[u.month],e.klass.month)},v=function(){var l=u.year,a=e.selectYears===!0?5:~~(e.selectYears/2);if(a){var r=h.year,o=d.year,s=l-a,g=l+a;if(r>s&&(g+=r-s,s=r),o<g){var c=s-r,f=g-o;s-=c>f?f:c,g=o}return i.node("select",i.group({min:s,max:g,i:1,node:"option",item:function(t){return[t,0,"value="+t+(l==t?" selected":"")]}}),e.klass.selectYear,(t?"":"disabled")+" "+i.ariaAttr({controls:n.$node[0].id+"_table"})+' title="'+e.labelYearSelect+'"')}return i.node("div",l,e.klass.year)};return i.node("div",(e.selectYears?v()+m():m()+v())+p()+p(1),e.klass.header)+i.node("table",f+i.node("tbody",i.group({min:0,max:a-1,i:1,node:"tr",item:function(t){var a=e.firstDay&&0===n.create([u.year,u.month,1]).day?-7:0;return[i.group({min:l*t-u.day+a+1,max:function(){return this.min+l-1},i:1,node:"td",item:function(t){t=n.create([u.year,u.month,t+(e.firstDay?1:0)]);var l=s&&s.pick==t.pick,a=g&&g.pick==t.pick,r=c&&n.disabled(t)||t.pick<h.pick||t.pick>d.pick,f=i.trigger(n.formats.toString,n,[e.format,t]);return[i.node("div",t.date,function(n){return n.push(u.month==t.month?e.klass.infocus:e.klass.outfocus),o.pick==t.pick&&n.push(e.klass.now),l&&n.push(e.klass.selected),a&&n.push(e.klass.highlighted),r&&n.push(e.klass.disabled),n.join(" ")}([e.klass.day]),"data-pick="+t.pick+" "+i.ariaAttr({role:"gridcell",label:f,selected:!(!l||n.$node.val()!==f)||null,activedescendant:!!a||null,disabled:!!r||null})),"",i.ariaAttr({role:"presentation"})]}})]}})),e.klass.table,'id="'+n.$node[0].id+'_table" '+i.ariaAttr({role:"grid",controls:n.$node[0].id,readonly:!0}))+i.node("div",i.node("button",e.today,e.klass.buttonToday,"type=button data-pick="+o.pick+(t&&!n.disabled(o)?"":" disabled")+" "+i.ariaAttr({controls:n.$node[0].id}))+i.node("button",e.clear,e.klass.buttonClear,"type=button data-clear=1"+(t?"":" disabled")+" "+i.ariaAttr({controls:n.$node[0].id}))+i.node("button",e.close,e.klass.buttonClose,"type=button data-close=true "+(t?"":" disabled")+" "+i.ariaAttr({controls:n.$node[0].id})),e.klass.footer)},e.defaults=function(t){return{labelMonthNext:"Next month",labelMonthPrev:"Previous month",labelMonthSelect:"Select a month",labelYearSelect:"Select a year",monthsFull:["January","February","March","April","May","June","July","August","September","October","November","December"],monthsShort:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],weekdaysFull:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],weekdaysShort:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],today:"Today",clear:"Clear",close:"Close",closeOnSelect:!0,closeOnClear:!0,format:"d mmmm, yyyy",klass:{table:t+"table",header:t+"header",navPrev:t+"nav--prev",navNext:t+"nav--next",navDisabled:t+"nav--disabled",month:t+"month",year:t+"year",selectMonth:t+"select--month",selectYear:t+"select--year",weekdays:t+"weekday",day:t+"day",disabled:t+"day--disabled",selected:t+"day--selected",highlighted:t+"day--highlighted",now:t+"day--today",infocus:t+"day--infocus",outfocus:t+"day--outfocus",footer:t+"footer",buttonClear:t+"button--clear",buttonToday:t+"button--today",buttonClose:t+"button--close"}}}(t.klasses().picker+"__"),t.extend("pickadate",e)}),function(t,n,e){L.MarkerClusterGroup=L.FeatureGroup.extend({options:{maxClusterRadius:80,iconCreateFunction:null,spiderfyOnMaxZoom:!0,showCoverageOnHover:!0,zoomToBoundsOnClick:!0,singleMarkerMode:!1,disableClusteringAtZoom:null,removeOutsideVisibleBounds:!0,animateAddingMarkers:!1,spiderfyDistanceMultiplier:1,polygonOptions:{}},initialize:function(t){L.Util.setOptions(this,t),this.options.iconCreateFunction||(this.options.iconCreateFunction=this._defaultIconCreateFunction),this._featureGroup=L.featureGroup(),this._featureGroup.on(L.FeatureGroup.EVENTS,this._propagateEvent,this),this._nonPointGroup=L.featureGroup(),this._nonPointGroup.on(L.FeatureGroup.EVENTS,this._propagateEvent,this),this._inZoomAnimation=0,this._needsClustering=[],this._needsRemoving=[],this._currentShownBounds=null,this._queue=[]},addLayer:function(t){if(t instanceof L.LayerGroup){var n=[];for(var e in t._layers)n.push(t._layers[e]);return this.addLayers(n)}if(!t.getLatLng)return this._nonPointGroup.addLayer(t),this;if(!this._map)return this._needsClustering.push(t),this;if(this.hasLayer(t))return this;this._unspiderfy&&this._unspiderfy(),this._addLayer(t,this._maxZoom);var l=t,a=this._map.getZoom();if(t.__parent)for(;l.__parent._zoom>=a;)l=l.__parent;return this._currentShownBounds.contains(l.getLatLng())&&(this.options.animateAddingMarkers?this._animationAddLayer(t,l):this._animationAddLayerNonAnimated(t,l)),this},removeLayer:function(t){if(t instanceof L.LayerGroup){var n=[];for(var e in t._layers)n.push(t._layers[e]);return this.removeLayers(n)}return t.getLatLng?this._map?t.__parent?(this._unspiderfy&&(this._unspiderfy(),this._unspiderfyLayer(t)),this._removeLayer(t,!0),this._featureGroup.hasLayer(t)&&(this._featureGroup.removeLayer(t),t.setOpacity&&t.setOpacity(1)),this):this:(!this._arraySplice(this._needsClustering,t)&&this.hasLayer(t)&&this._needsRemoving.push(t),this):(this._nonPointGroup.removeLayer(t),this)},addLayers:function(t){var n,e,l,a=this._map,i=this._featureGroup,r=this._nonPointGroup;for(n=0,e=t.length;n<e;n++)if(l=t[n],l.getLatLng){if(!this.hasLayer(l))if(a){if(this._addLayer(l,this._maxZoom),l.__parent&&2===l.__parent.getChildCount()){var o=l.__parent.getAllChildMarkers(),s=o[0]===l?o[1]:o[0];i.removeLayer(s)}}else this._needsClustering.push(l)}else r.addLayer(l);return a&&(i.eachLayer(function(t){t instanceof L.MarkerCluster&&t._iconNeedsUpdate&&t._updateIcon()}),this._topClusterLevel._recursivelyAddChildrenToMap(null,this._zoom,this._currentShownBounds)),this},removeLayers:function(t){var n,e,l,a=this._featureGroup,i=this._nonPointGroup;if(!this._map){for(n=0,e=t.length;n<e;n++)l=t[n],this._arraySplice(this._needsClustering,l),i.removeLayer(l);return this}for(n=0,e=t.length;n<e;n++)l=t[n],l.__parent?(this._removeLayer(l,!0,!0),a.hasLayer(l)&&(a.removeLayer(l),l.setOpacity&&l.setOpacity(1))):i.removeLayer(l);return this._topClusterLevel._recursivelyAddChildrenToMap(null,this._zoom,this._currentShownBounds),a.eachLayer(function(t){t instanceof L.MarkerCluster&&t._updateIcon()}),this},clearLayers:function(){return this._map||(this._needsClustering=[],delete this._gridClusters,delete this._gridUnclustered),this._noanimationUnspiderfy&&this._noanimationUnspiderfy(),this._featureGroup.clearLayers(),this._nonPointGroup.clearLayers(),this.eachLayer(function(t){delete t.__parent}),this._map&&this._generateInitialClusters(),this},getBounds:function(){var t=new L.LatLngBounds;if(this._topClusterLevel)t.extend(this._topClusterLevel._bounds);else for(var n=this._needsClustering.length-1;n>=0;n--)t.extend(this._needsClustering[n].getLatLng());return t.extend(this._nonPointGroup.getBounds()),t},eachLayer:function(t,n){var e,l=this._needsClustering.slice();for(this._topClusterLevel&&this._topClusterLevel.getAllChildMarkers(l),e=l.length-1;e>=0;e--)t.call(n,l[e]);this._nonPointGroup.eachLayer(t,n)},getLayers:function(){var t=[];return this.eachLayer(function(n){t.push(n)}),t},getLayer:function(t){var n=null;return this.eachLayer(function(e){L.stamp(e)===t&&(n=e)}),n},hasLayer:function(t){if(!t)return!1;var n,e=this._needsClustering;for(n=e.length-1;n>=0;n--)if(e[n]===t)return!0;for(e=this._needsRemoving,n=e.length-1;n>=0;n--)if(e[n]===t)return!1;return!(!t.__parent||t.__parent._group!==this)||this._nonPointGroup.hasLayer(t)},zoomToShowLayer:function(t,n){var e=function(){if((t._icon||t.__parent._icon)&&!this._inZoomAnimation)if(this._map.off("moveend",e,this),this.off("animationend",e,this),t._icon)n();else if(t.__parent._icon){var l=function(){this.off("spiderfied",l,this),n()};this.on("spiderfied",l,this),t.__parent.spiderfy()}};t._icon&&this._map.getBounds().contains(t.getLatLng())?n():t.__parent._zoom<this._map.getZoom()?(this._map.on("moveend",e,this),this._map.panTo(t.getLatLng())):(this._map.on("moveend",e,this),this.on("animationend",e,this),this._map.setView(t.getLatLng(),t.__parent._zoom+1),t.__parent.zoomToBounds())},onAdd:function(t){this._map=t;var n,e,l;if(!isFinite(this._map.getMaxZoom()))throw"Map has no maxZoom specified";for(this._featureGroup.onAdd(t),this._nonPointGroup.onAdd(t),this._gridClusters||this._generateInitialClusters(),n=0,e=this._needsRemoving.length;n<e;n++)l=this._needsRemoving[n],this._removeLayer(l,!0);for(this._needsRemoving=[],n=0,e=this._needsClustering.length;n<e;n++)l=this._needsClustering[n],l.getLatLng?l.__parent||this._addLayer(l,this._maxZoom):this._featureGroup.addLayer(l);this._needsClustering=[],this._map.on("zoomend",this._zoomEnd,this),this._map.on("moveend",this._moveEnd,this),this._spiderfierOnAdd&&this._spiderfierOnAdd(),this._bindEvents(),this._zoom=this._map.getZoom(),this._currentShownBounds=this._getExpandedVisibleBounds(),this._topClusterLevel._recursivelyAddChildrenToMap(null,this._zoom,this._currentShownBounds)},onRemove:function(t){t.off("zoomend",this._zoomEnd,this),t.off("moveend",this._moveEnd,this),this._unbindEvents(),this._map._mapPane.className=this._map._mapPane.className.replace(" leaflet-cluster-anim",""),this._spiderfierOnRemove&&this._spiderfierOnRemove(),this._hideCoverage(),this._featureGroup.onRemove(t),this._nonPointGroup.onRemove(t),this._featureGroup.clearLayers(),this._map=null},getVisibleParent:function(t){for(var n=t;n&&!n._icon;)n=n.__parent;return n||null},_arraySplice:function(t,n){for(var e=t.length-1;e>=0;e--)if(t[e]===n)return t.splice(e,1),!0},_removeLayer:function(t,n,e){var l=this._gridClusters,a=this._gridUnclustered,i=this._featureGroup,r=this._map;if(n)for(var o=this._maxZoom;o>=0&&a[o].removeObject(t,r.project(t.getLatLng(),o));o--);var s,g=t.__parent,u=g._markers;for(this._arraySplice(u,t);g&&(g._childCount--,!(g._zoom<0));)n&&g._childCount<=1?(s=g._markers[0]===t?g._markers[1]:g._markers[0],l[g._zoom].removeObject(g,r.project(g._cLatLng,g._zoom)),a[g._zoom].addObject(s,r.project(s.getLatLng(),g._zoom)),this._arraySplice(g.__parent._childClusters,g),g.__parent._markers.push(s),s.__parent=g.__parent,g._icon&&(i.removeLayer(g),e||i.addLayer(s))):(g._recalculateBounds(),e&&g._icon||g._updateIcon()),g=g.__parent;delete t.__parent},_isOrIsParent:function(t,n){for(;n;){if(t===n)return!0;n=n.parentNode}return!1},_propagateEvent:function(t){if(t.layer instanceof L.MarkerCluster){if(t.originalEvent&&this._isOrIsParent(t.layer._icon,t.originalEvent.relatedTarget))return;t.type="cluster"+t.type}this.fire(t.type,t)},_defaultIconCreateFunction:function(t){var n=t.getChildCount(),e=" marker-cluster-";return e+=n<10?"small":n<100?"medium":"large",new L.DivIcon({html:"<div><span>"+n+"</span></div>",className:"marker-cluster"+e,iconSize:new L.Point(40,40)})},_bindEvents:function(){var t=this._map,n=this.options.spiderfyOnMaxZoom,e=this.options.showCoverageOnHover,l=this.options.zoomToBoundsOnClick;(n||l)&&this.on("clusterclick",this._zoomOrSpiderfy,this),e&&(this.on("clustermouseover",this._showCoverage,this),this.on("clustermouseout",this._hideCoverage,this),t.on("zoomend",this._hideCoverage,this))},_zoomOrSpiderfy:function(t){var n=this._map;n.getMaxZoom()===n.getZoom()?this.options.spiderfyOnMaxZoom&&t.layer.spiderfy():this.options.zoomToBoundsOnClick&&t.layer.zoomToBounds(),t.originalEvent&&13===t.originalEvent.keyCode&&n._container.focus()},_showCoverage:function(t){var n=this._map;this._inZoomAnimation||(this._shownPolygon&&n.removeLayer(this._shownPolygon),t.layer.getChildCount()>2&&t.layer!==this._spiderfied&&(this._shownPolygon=new L.Polygon(t.layer.getConvexHull(),this.options.polygonOptions),n.addLayer(this._shownPolygon)))},_hideCoverage:function(){this._shownPolygon&&(this._map.removeLayer(this._shownPolygon),this._shownPolygon=null)},_unbindEvents:function(){var t=this.options.spiderfyOnMaxZoom,n=this.options.showCoverageOnHover,e=this.options.zoomToBoundsOnClick,l=this._map;(t||e)&&this.off("clusterclick",this._zoomOrSpiderfy,this),n&&(this.off("clustermouseover",this._showCoverage,this),this.off("clustermouseout",this._hideCoverage,this),l.off("zoomend",this._hideCoverage,this))},_zoomEnd:function(){this._map&&(this._mergeSplitClusters(),this._zoom=this._map._zoom,this._currentShownBounds=this._getExpandedVisibleBounds())},_moveEnd:function(){if(!this._inZoomAnimation){var t=this._getExpandedVisibleBounds();this._topClusterLevel._recursivelyRemoveChildrenFromMap(this._currentShownBounds,this._zoom,t),this._topClusterLevel._recursivelyAddChildrenToMap(null,this._map._zoom,t),this._currentShownBounds=t}},_generateInitialClusters:function(){var t=this._map.getMaxZoom(),n=this.options.maxClusterRadius;this.options.disableClusteringAtZoom&&(t=this.options.disableClusteringAtZoom-1),this._maxZoom=t,this._gridClusters={},this._gridUnclustered={};for(var e=t;e>=0;e--)this._gridClusters[e]=new L.DistanceGrid(n),this._gridUnclustered[e]=new L.DistanceGrid(n);this._topClusterLevel=new L.MarkerCluster(this,(-1))},_addLayer:function(t,n){var e,l,a=this._gridClusters,i=this._gridUnclustered;for(this.options.singleMarkerMode&&(t.options.icon=this.options.iconCreateFunction({getChildCount:function(){return 1},getAllChildMarkers:function(){return[t]}}));n>=0;n--){e=this._map.project(t.getLatLng(),n);var r=a[n].getNearObject(e);if(r)return r._addChild(t),void(t.__parent=r);if(r=i[n].getNearObject(e)){var o=r.__parent;o&&this._removeLayer(r,!1);var s=new L.MarkerCluster(this,n,r,t);a[n].addObject(s,this._map.project(s._cLatLng,n)),r.__parent=s,t.__parent=s;var g=s;for(l=n-1;l>o._zoom;l--)g=new L.MarkerCluster(this,l,g),a[l].addObject(g,this._map.project(r.getLatLng(),l));for(o._addChild(g),l=n;l>=0&&i[l].removeObject(r,this._map.project(r.getLatLng(),l));l--);return}i[n].addObject(t,e)}this._topClusterLevel._addChild(t),t.__parent=this._topClusterLevel},_enqueue:function(t){this._queue.push(t),this._queueTimeout||(this._queueTimeout=setTimeout(L.bind(this._processQueue,this),300))},_processQueue:function(){for(var t=0;t<this._queue.length;t++)this._queue[t].call(this);this._queue.length=0,clearTimeout(this._queueTimeout),this._queueTimeout=null},_mergeSplitClusters:function(){this._processQueue(),this._zoom<this._map._zoom&&this._currentShownBounds.contains(this._getExpandedVisibleBounds())?(this._animationStart(),this._topClusterLevel._recursivelyRemoveChildrenFromMap(this._currentShownBounds,this._zoom,this._getExpandedVisibleBounds()),this._animationZoomIn(this._zoom,this._map._zoom)):this._zoom>this._map._zoom?(this._animationStart(),this._animationZoomOut(this._zoom,this._map._zoom)):this._moveEnd()},_getExpandedVisibleBounds:function(){if(!this.options.removeOutsideVisibleBounds)return this.getBounds();var t=this._map,n=t.getBounds(),e=n._southWest,l=n._northEast,a=L.Browser.mobile?0:Math.abs(e.lat-l.lat),i=L.Browser.mobile?0:Math.abs(e.lng-l.lng);return new L.LatLngBounds(new L.LatLng(e.lat-a,e.lng-i,(!0)),new L.LatLng(l.lat+a,l.lng+i,(!0)))},_animationAddLayerNonAnimated:function(t,n){if(n===t)this._featureGroup.addLayer(t);else if(2===n._childCount){n._addToMap();var e=n.getAllChildMarkers();this._featureGroup.removeLayer(e[0]),this._featureGroup.removeLayer(e[1])}else n._updateIcon()}}),L.MarkerClusterGroup.include(L.DomUtil.TRANSITION?{_animationStart:function(){this._map._mapPane.className+=" leaflet-cluster-anim",this._inZoomAnimation++},_animationEnd:function(){this._map&&(this._map._mapPane.className=this._map._mapPane.className.replace(" leaflet-cluster-anim","")),this._inZoomAnimation--,this.fire("animationend")},_animationZoomIn:function(t,n){var e,l=this._getExpandedVisibleBounds(),a=this._featureGroup;this._topClusterLevel._recursively(l,t,0,function(i){var r,o=i._latlng,s=i._markers;for(l.contains(o)||(o=null),i._isSingleParent()&&t+1===n?(a.removeLayer(i),i._recursivelyAddChildrenToMap(null,n,l)):(i.setOpacity(0),i._recursivelyAddChildrenToMap(o,n,l)),e=s.length-1;e>=0;e--)r=s[e],l.contains(r._latlng)||a.removeLayer(r)}),this._forceLayout(),this._topClusterLevel._recursivelyBecomeVisible(l,n),a.eachLayer(function(t){t instanceof L.MarkerCluster||!t._icon||t.setOpacity(1)}),this._topClusterLevel._recursively(l,t,n,function(t){t._recursivelyRestoreChildPositions(n)}),this._enqueue(function(){this._topClusterLevel._recursively(l,t,0,function(t){a.removeLayer(t),t.setOpacity(1)}),this._animationEnd()})},_animationZoomOut:function(t,n){this._animationZoomOutSingle(this._topClusterLevel,t-1,n),this._topClusterLevel._recursivelyAddChildrenToMap(null,n,this._getExpandedVisibleBounds()),this._topClusterLevel._recursivelyRemoveChildrenFromMap(this._currentShownBounds,t,this._getExpandedVisibleBounds())},_animationZoomOutSingle:function(t,n,e){var l=this._getExpandedVisibleBounds();t._recursivelyAnimateChildrenInAndAddSelfToMap(l,n+1,e);var a=this;this._forceLayout(),t._recursivelyBecomeVisible(l,e),this._enqueue(function(){if(1===t._childCount){var i=t._markers[0];i.setLatLng(i.getLatLng()),i.setOpacity(1)}else t._recursively(l,e,0,function(t){t._recursivelyRemoveChildrenFromMap(l,n+1)});a._animationEnd()})},_animationAddLayer:function(t,n){var e=this,l=this._featureGroup;l.addLayer(t),n!==t&&(n._childCount>2?(n._updateIcon(),this._forceLayout(),this._animationStart(),t._setPos(this._map.latLngToLayerPoint(n.getLatLng())),t.setOpacity(0),this._enqueue(function(){l.removeLayer(t),t.setOpacity(1),e._animationEnd()})):(this._forceLayout(),e._animationStart(),e._animationZoomOutSingle(n,this._map.getMaxZoom(),this._map.getZoom())))},_forceLayout:function(){L.Util.falseFn(n.body.offsetWidth)}}:{_animationStart:function(){},_animationZoomIn:function(t,n){this._topClusterLevel._recursivelyRemoveChildrenFromMap(this._currentShownBounds,t),this._topClusterLevel._recursivelyAddChildrenToMap(null,n,this._getExpandedVisibleBounds())},_animationZoomOut:function(t,n){this._topClusterLevel._recursivelyRemoveChildrenFromMap(this._currentShownBounds,t),this._topClusterLevel._recursivelyAddChildrenToMap(null,n,this._getExpandedVisibleBounds())},_animationAddLayer:function(t,n){this._animationAddLayerNonAnimated(t,n)}}),L.markerClusterGroup=function(t){return new L.MarkerClusterGroup(t)},L.MarkerCluster=L.Marker.extend({initialize:function(t,n,e,l){L.Marker.prototype.initialize.call(this,e?e._cLatLng||e.getLatLng():new L.LatLng(0,0),{icon:this}),this._group=t,this._zoom=n,this._markers=[],this._childClusters=[],this._childCount=0,this._iconNeedsUpdate=!0,this._bounds=new L.LatLngBounds,e&&this._addChild(e),l&&this._addChild(l)},getAllChildMarkers:function(t){t=t||[];for(var n=this._childClusters.length-1;n>=0;n--)this._childClusters[n].getAllChildMarkers(t);for(var e=this._markers.length-1;e>=0;e--)t.push(this._markers[e]);return t},getChildCount:function(){return this._childCount},zoomToBounds:function(){for(var t,n=this._childClusters.slice(),e=this._group._map,l=e.getBoundsZoom(this._bounds),a=this._zoom+1,i=e.getZoom();n.length>0&&l>a;){a++;var r=[];for(t=0;t<n.length;t++)r=r.concat(n[t]._childClusters);n=r}l>a?this._group._map.setView(this._latlng,a):l<=i?this._group._map.setView(this._latlng,i+1):this._group._map.fitBounds(this._bounds)},getBounds:function(){var t=new L.LatLngBounds;return t.extend(this._bounds),t},_updateIcon:function(){this._iconNeedsUpdate=!0,this._icon&&this.setIcon(this)},createIcon:function(){return this._iconNeedsUpdate&&(this._iconObj=this._group.options.iconCreateFunction(this),this._iconNeedsUpdate=!1),this._iconObj.createIcon()},createShadow:function(){return this._iconObj.createShadow()},_addChild:function(t,n){this._iconNeedsUpdate=!0,this._expandBounds(t),t instanceof L.MarkerCluster?(n||(this._childClusters.push(t),t.__parent=this),this._childCount+=t._childCount):(n||this._markers.push(t),this._childCount++),this.__parent&&this.__parent._addChild(t,!0)},_expandBounds:function(t){var n,e=t._wLatLng||t._latlng;t instanceof L.MarkerCluster?(this._bounds.extend(t._bounds),n=t._childCount):(this._bounds.extend(e),n=1),this._cLatLng||(this._cLatLng=t._cLatLng||e);var l=this._childCount+n;this._wLatLng?(this._wLatLng.lat=(e.lat*n+this._wLatLng.lat*this._childCount)/l,this._wLatLng.lng=(e.lng*n+this._wLatLng.lng*this._childCount)/l):this._latlng=this._wLatLng=new L.LatLng(e.lat,e.lng)},_addToMap:function(t){t&&(this._backupLatlng=this._latlng,this.setLatLng(t)),this._group._featureGroup.addLayer(this)},_recursivelyAnimateChildrenIn:function(t,n,e){this._recursively(t,0,e-1,function(t){var e,l,a=t._markers;for(e=a.length-1;e>=0;e--)l=a[e],l._icon&&(l._setPos(n),l.setOpacity(0))},function(t){var e,l,a=t._childClusters;for(e=a.length-1;e>=0;e--)l=a[e],l._icon&&(l._setPos(n),l.setOpacity(0))})},_recursivelyAnimateChildrenInAndAddSelfToMap:function(t,n,e){this._recursively(t,e,0,function(l){l._recursivelyAnimateChildrenIn(t,l._group._map.latLngToLayerPoint(l.getLatLng()).round(),n),l._isSingleParent()&&n-1===e?(l.setOpacity(1),l._recursivelyRemoveChildrenFromMap(t,n)):l.setOpacity(0),l._addToMap()})},_recursivelyBecomeVisible:function(t,n){this._recursively(t,0,n,null,function(t){t.setOpacity(1)})},_recursivelyAddChildrenToMap:function(t,n,e){this._recursively(e,-1,n,function(l){if(n!==l._zoom)for(var a=l._markers.length-1;a>=0;a--){var i=l._markers[a];e.contains(i._latlng)&&(t&&(i._backupLatlng=i.getLatLng(),i.setLatLng(t),i.setOpacity&&i.setOpacity(0)),l._group._featureGroup.addLayer(i))}},function(n){n._addToMap(t)})},_recursivelyRestoreChildPositions:function(t){for(var n=this._markers.length-1;n>=0;n--){var e=this._markers[n];e._backupLatlng&&(e.setLatLng(e._backupLatlng),delete e._backupLatlng)}if(t-1===this._zoom)for(var l=this._childClusters.length-1;l>=0;l--)this._childClusters[l]._restorePosition();else for(var a=this._childClusters.length-1;a>=0;a--)this._childClusters[a]._recursivelyRestoreChildPositions(t)},_restorePosition:function(){this._backupLatlng&&(this.setLatLng(this._backupLatlng),delete this._backupLatlng)},_recursivelyRemoveChildrenFromMap:function(t,n,e){var l,a;this._recursively(t,-1,n-1,function(t){for(a=t._markers.length-1;a>=0;a--)l=t._markers[a],e&&e.contains(l._latlng)||(t._group._featureGroup.removeLayer(l),l.setOpacity&&l.setOpacity(1))},function(t){for(a=t._childClusters.length-1;a>=0;a--)l=t._childClusters[a],e&&e.contains(l._latlng)||(t._group._featureGroup.removeLayer(l),l.setOpacity&&l.setOpacity(1))})},_recursively:function(t,n,e,l,a){var i,r,o=this._childClusters,s=this._zoom;if(n>s)for(i=o.length-1;i>=0;i--)r=o[i],t.intersects(r._bounds)&&r._recursively(t,n,e,l,a);else if(l&&l(this),a&&this._zoom===e&&a(this),e>s)for(i=o.length-1;i>=0;i--)r=o[i],t.intersects(r._bounds)&&r._recursively(t,n,e,l,a)},_recalculateBounds:function(){var t,n=this._markers,e=this._childClusters;for(this._bounds=new L.LatLngBounds,delete this._wLatLng,t=n.length-1;t>=0;t--)this._expandBounds(n[t]);for(t=e.length-1;t>=0;t--)this._expandBounds(e[t])},_isSingleParent:function(){return this._childClusters.length>0&&this._childClusters[0]._childCount===this._childCount}}),L.DistanceGrid=function(t){this._cellSize=t,this._sqCellSize=t*t,this._grid={},this._objectPoint={}},L.DistanceGrid.prototype={addObject:function(t,n){var e=this._getCoord(n.x),l=this._getCoord(n.y),a=this._grid,i=a[l]=a[l]||{},r=i[e]=i[e]||[],o=L.Util.stamp(t);this._objectPoint[o]=n,r.push(t)},updateObject:function(t,n){this.removeObject(t),this.addObject(t,n)},removeObject:function(t,n){var e,l,a=this._getCoord(n.x),i=this._getCoord(n.y),r=this._grid,o=r[i]=r[i]||{},s=o[a]=o[a]||[];for(delete this._objectPoint[L.Util.stamp(t)],e=0,l=s.length;e<l;e++)if(s[e]===t)return s.splice(e,1),1===l&&delete o[a],!0},eachObject:function(t,n){var e,l,a,i,r,o,s,g=this._grid;for(e in g){r=g[e];for(l in r)for(o=r[l],a=0,i=o.length;a<i;a++)s=t.call(n,o[a]),s&&(a--,i--)}},getNearObject:function(t){var n,e,l,a,i,r,o,s,g=this._getCoord(t.x),u=this._getCoord(t.y),c=this._objectPoint,h=this._sqCellSize,d=null;for(n=u-1;n<=u+1;n++)if(a=this._grid[n])for(e=g-1;e<=g+1;e++)if(i=a[e])for(l=0,r=i.length;l<r;l++)o=i[l],s=this._sqDist(c[L.Util.stamp(o)],t),s<h&&(h=s,d=o);return d},_getCoord:function(t){return Math.floor(t/this._cellSize)},_sqDist:function(t,n){var e=n.x-t.x,l=n.y-t.y;return e*e+l*l}},function(){L.QuickHull={getDistant:function(t,n){var e=n[1].lat-n[0].lat,l=n[0].lng-n[1].lng;return l*(t.lat-n[0].lat)+e*(t.lng-n[0].lng)},findMostDistantPointFromBaseLine:function(t,n){var e,l,a,i=0,r=null,o=[];for(e=n.length-1;e>=0;e--)l=n[e],a=this.getDistant(l,t),a>0&&(o.push(l),a>i&&(i=a,r=l));return{maxPoint:r,newPoints:o}},buildConvexHull:function(t,n){var e=[],l=this.findMostDistantPointFromBaseLine(t,n);return l.maxPoint?(e=e.concat(this.buildConvexHull([t[0],l.maxPoint],l.newPoints)),e=e.concat(this.buildConvexHull([l.maxPoint,t[1]],l.newPoints))):[t[0]]},getConvexHull:function(t){var n,e=!1,l=!1,a=null,i=null;
for(n=t.length-1;n>=0;n--){var r=t[n];(e===!1||r.lat>e)&&(a=r,e=r.lat),(l===!1||r.lat<l)&&(i=r,l=r.lat)}var o=[].concat(this.buildConvexHull([i,a],t),this.buildConvexHull([a,i],t));return o}}}(),L.MarkerCluster.include({getConvexHull:function(){var t,n,e=this.getAllChildMarkers(),l=[];for(n=e.length-1;n>=0;n--)t=e[n].getLatLng(),l.push(t);return L.QuickHull.getConvexHull(l)}}),L.MarkerCluster.include({_2PI:2*Math.PI,_circleFootSeparation:25,_circleStartAngle:Math.PI/6,_spiralFootSeparation:28,_spiralLengthStart:11,_spiralLengthFactor:5,_circleSpiralSwitchover:9,spiderfy:function(){if(this._group._spiderfied!==this&&!this._group._inZoomAnimation){var t,n=this.getAllChildMarkers(),e=this._group,l=e._map,a=l.latLngToLayerPoint(this._latlng);this._group._unspiderfy(),this._group._spiderfied=this,n.length>=this._circleSpiralSwitchover?t=this._generatePointsSpiral(n.length,a):(a.y+=10,t=this._generatePointsCircle(n.length,a)),this._animationSpiderfy(n,t)}},unspiderfy:function(t){this._group._inZoomAnimation||(this._animationUnspiderfy(t),this._group._spiderfied=null)},_generatePointsCircle:function(t,n){var e,l,a=this._group.options.spiderfyDistanceMultiplier*this._circleFootSeparation*(2+t),i=a/this._2PI,r=this._2PI/t,o=[];for(o.length=t,e=t-1;e>=0;e--)l=this._circleStartAngle+e*r,o[e]=new L.Point(n.x+i*Math.cos(l),n.y+i*Math.sin(l))._round();return o},_generatePointsSpiral:function(t,n){var e,l=this._group.options.spiderfyDistanceMultiplier*this._spiralLengthStart,a=this._group.options.spiderfyDistanceMultiplier*this._spiralFootSeparation,i=this._group.options.spiderfyDistanceMultiplier*this._spiralLengthFactor,r=0,o=[];for(o.length=t,e=t-1;e>=0;e--)r+=a/l+5e-4*e,o[e]=new L.Point(n.x+l*Math.cos(r),n.y+l*Math.sin(r))._round(),l+=this._2PI*i/r;return o},_noanimationUnspiderfy:function(){var t,n,e=this._group,l=e._map,a=e._featureGroup,i=this.getAllChildMarkers();for(this.setOpacity(1),n=i.length-1;n>=0;n--)t=i[n],a.removeLayer(t),t._preSpiderfyLatlng&&(t.setLatLng(t._preSpiderfyLatlng),delete t._preSpiderfyLatlng),t.setZIndexOffset&&t.setZIndexOffset(0),t._spiderLeg&&(l.removeLayer(t._spiderLeg),delete t._spiderLeg);e._spiderfied=null}}),L.MarkerCluster.include(L.DomUtil.TRANSITION?{SVG_ANIMATION:function(){return n.createElementNS("http://www.w3.org/2000/svg","animate").toString().indexOf("SVGAnimate")>-1}(),_animationSpiderfy:function(t,e){var l,a,i,r,o=this,s=this._group,g=s._map,u=s._featureGroup,c=g.latLngToLayerPoint(this._latlng);for(l=t.length-1;l>=0;l--)a=t[l],a.setOpacity?(a.setZIndexOffset(1e6),a.setOpacity(0),u.addLayer(a),a._setPos(c)):u.addLayer(a);s._forceLayout(),s._animationStart();var h=L.Path.SVG?0:.3,d=L.Path.SVG_NS;for(l=t.length-1;l>=0;l--)if(r=g.layerPointToLatLng(e[l]),a=t[l],a._preSpiderfyLatlng=a._latlng,a.setLatLng(r),a.setOpacity&&a.setOpacity(1),i=new L.Polyline([o._latlng,r],{weight:1.5,color:"#222",opacity:h}),g.addLayer(i),a._spiderLeg=i,L.Path.SVG&&this.SVG_ANIMATION){var f=i._path.getTotalLength();i._path.setAttribute("stroke-dasharray",f+","+f);var p=n.createElementNS(d,"animate");p.setAttribute("attributeName","stroke-dashoffset"),p.setAttribute("begin","indefinite"),p.setAttribute("from",f),p.setAttribute("to",0),p.setAttribute("dur",.25),i._path.appendChild(p),p.beginElement(),p=n.createElementNS(d,"animate"),p.setAttribute("attributeName","stroke-opacity"),p.setAttribute("attributeName","stroke-opacity"),p.setAttribute("begin","indefinite"),p.setAttribute("from",0),p.setAttribute("to",.5),p.setAttribute("dur",.25),i._path.appendChild(p),p.beginElement()}if(o.setOpacity(.3),L.Path.SVG)for(this._group._forceLayout(),l=t.length-1;l>=0;l--)a=t[l]._spiderLeg,a.options.opacity=.5,a._path.setAttribute("stroke-opacity",.5);setTimeout(function(){s._animationEnd(),s.fire("spiderfied")},200)},_animationUnspiderfy:function(t){var n,e,l,a=this._group,i=a._map,r=a._featureGroup,o=t?i._latLngToNewLayerPoint(this._latlng,t.zoom,t.center):i.latLngToLayerPoint(this._latlng),s=this.getAllChildMarkers(),g=L.Path.SVG&&this.SVG_ANIMATION;for(a._animationStart(),this.setOpacity(1),e=s.length-1;e>=0;e--)n=s[e],n._preSpiderfyLatlng&&(n.setLatLng(n._preSpiderfyLatlng),delete n._preSpiderfyLatlng,n.setOpacity?(n._setPos(o),n.setOpacity(0)):r.removeLayer(n),g&&(l=n._spiderLeg._path.childNodes[0],l.setAttribute("to",l.getAttribute("from")),l.setAttribute("from",0),l.beginElement(),l=n._spiderLeg._path.childNodes[1],l.setAttribute("from",.5),l.setAttribute("to",0),l.setAttribute("stroke-opacity",0),l.beginElement(),n._spiderLeg._path.setAttribute("stroke-opacity",0)));setTimeout(function(){var t=0;for(e=s.length-1;e>=0;e--)n=s[e],n._spiderLeg&&t++;for(e=s.length-1;e>=0;e--)n=s[e],n._spiderLeg&&(n.setOpacity&&(n.setOpacity(1),n.setZIndexOffset(0)),t>1&&r.removeLayer(n),i.removeLayer(n._spiderLeg),delete n._spiderLeg);a._animationEnd()},200)}}:{_animationSpiderfy:function(t,n){var e,l,a,i,r=this._group,o=r._map,s=r._featureGroup;for(e=t.length-1;e>=0;e--)i=o.layerPointToLatLng(n[e]),l=t[e],l._preSpiderfyLatlng=l._latlng,l.setLatLng(i),l.setZIndexOffset&&l.setZIndexOffset(1e6),s.addLayer(l),a=new L.Polyline([this._latlng,i],{weight:1.5,color:"#222"}),o.addLayer(a),l._spiderLeg=a;this.setOpacity(.3),r.fire("spiderfied")},_animationUnspiderfy:function(){this._noanimationUnspiderfy()}}),L.MarkerClusterGroup.include({_spiderfied:null,_spiderfierOnAdd:function(){this._map.on("click",this._unspiderfyWrapper,this),this._map.options.zoomAnimation&&this._map.on("zoomstart",this._unspiderfyZoomStart,this),this._map.on("zoomend",this._noanimationUnspiderfy,this),L.Path.SVG&&!L.Browser.touch&&this._map._initPathRoot()},_spiderfierOnRemove:function(){this._map.off("click",this._unspiderfyWrapper,this),this._map.off("zoomstart",this._unspiderfyZoomStart,this),this._map.off("zoomanim",this._unspiderfyZoomAnim,this),this._unspiderfy()},_unspiderfyZoomStart:function(){this._map&&this._map.on("zoomanim",this._unspiderfyZoomAnim,this)},_unspiderfyZoomAnim:function(t){L.DomUtil.hasClass(this._map._mapPane,"leaflet-touching")||(this._map.off("zoomanim",this._unspiderfyZoomAnim,this),this._unspiderfy(t))},_unspiderfyWrapper:function(){this._unspiderfy()},_unspiderfy:function(t){this._spiderfied&&this._spiderfied.unspiderfy(t)},_noanimationUnspiderfy:function(){this._spiderfied&&this._spiderfied._noanimationUnspiderfy()},_unspiderfyLayer:function(t){t._spiderLeg&&(this._featureGroup.removeLayer(t),t.setOpacity(1),t.setZIndexOffset(0),this._map.removeLayer(t._spiderLeg),delete t._spiderLeg)}})}(window,document),function t(n,e,l){function a(r,o){if(!e[r]){if(!n[r]){var s="function"==typeof require&&require;if(!o&&s)return s(r,!0);if(i)return i(r,!0);var g=new Error("Cannot find module '"+r+"'");throw g.code="MODULE_NOT_FOUND",g}var u=e[r]={exports:{}};n[r][0].call(u.exports,function(t){var e=n[r][1][t];return a(e?e:t)},u,u.exports,t,n,e,l)}return e[r].exports}for(var i="function"==typeof require&&require,r=0;r<l.length;r++)a(l[r]);return a}({1:[function(t,n,e){"use strict";_.mixin(t("./underscore_mixins"));var l=function(){};_.extend(l.prototype,Backbone.Events),l.prototype.start=function(){this.model=new(t("./model")),this.nav=new(t("./navBar"))({el:$("nav.topbar").get(0),model:this.model,app:this}),this.map=new(t("./map"))({el:$("#map").get(0),model:this.model,app:this}),this.controls=new(t("./controls"))({el:$("aside.tools").get(0),model:this.model,app:this}),this.nav.render(),this.map.render(),this.controls.render(),this.controls.refetchData(),mixpanel.track("started")},$(function(){console.log("Starting app..."),(window.app=new l).start()})},{"./controls":3,"./map":4,"./model":5,"./navBar":6,"./underscore_mixins":7}],2:[function(t,n,e){n.exports={TX:{counties:{Anderson:{lat:31.841266,lng:-95.661744},Andrews:{lat:32.312258,lng:-102.640206},Angelina:{lat:31.251951,lng:-94.611056},Aransas:{lat:28.104225,lng:-96.977983},Archer:{lat:33.616305,lng:-98.687267},Armstrong:{lat:34.964179,lng:-101.356636},Atascosa:{lat:28.894296,lng:-98.528187},Austin:{lat:29.891901,lng:-96.27017},Bailey:{lat:34.067521,lng:-102.830345},Bandera:{lat:29.755748,lng:-99.260682},Bastrop:{lat:30.103128,lng:-97.311859},Baylor:{lat:33.618172,lng:-99.197228},Bee:{lat:28.416077,lng:-97.742586},Bell:{lat:31.04211,lng:-97.481921},Bexar:{lat:29.448671,lng:-98.520147},Blanco:{lat:30.265605,lng:-98.399977},Borden:{lat:32.744062,lng:-101.433033},Bosque:{lat:31.900764,lng:-97.637632},Bowie:{lat:33.446051,lng:-94.422375},Brazoria:{lat:29.167818,lng:-95.434647},Brazos:{lat:30.656725,lng:-96.302389},Brewster:{lat:29.808997,lng:-103.252458},Briscoe:{lat:34.525173,lng:-101.205893},Brooks:{lat:27.034994,lng:-98.215276},Brown:{lat:31.764103,lng:-98.99847},Burleson:{lat:30.493487,lng:-96.622091},Burnet:{lat:30.789616,lng:-98.201195},Caldwell:{lat:29.840422,lng:-97.631097},Calhoun:{lat:28.445366,lng:-96.5833},Callahan:{lat:32.29315,lng:-99.372249},Cameron:{lat:26.102923,lng:-97.478958},Camp:{lat:32.974581,lng:-94.979085},Carson:{lat:35.405496,lng:-101.355356},Cass:{lat:33.083698,lng:-94.357579},Castro:{lat:34.533621,lng:-102.258786},Chambers:{lat:29.703933,lng:-94.668875},Cherokee:{lat:31.843859,lng:-95.156504},Childress:{lat:34.529337,lng:-100.208336},Clay:{lat:33.785904,lng:-98.212918},Cochran:{lat:33.60844,lng:-102.830449},Coke:{lat:31.877105,lng:-100.635236},Coleman:{lat:31.914205,lng:-99.346622},Collin:{lat:33.193885,lng:-96.578153},Collingsworth:{lat:34.963358,lng:-100.272135},Colorado:{lat:29.595908,lng:-96.508389},Comal:{lat:29.803019,lng:-98.255201},Comanche:{lat:31.951645,lng:-98.549617},Concho:{lat:31.318865,lng:-99.863648},Cooke:{lat:33.639169,lng:-97.210372},Coryell:{lat:31.391177,lng:-97.798022},Cottle:{lat:34.091906,lng:-100.276442},Crane:{lat:31.422797,lng:-102.487774},Crockett:{lat:30.717532,lng:-101.404211},Crosby:{lat:33.609144,lng:-101.29871},Culberson:{lat:31.445909,lng:-104.526945},Dallam:{lat:36.28637,lng:-102.59402},Dallas:{lat:32.766987,lng:-96.778424},Dawson:{lat:32.741934,lng:-101.947322},"Deaf Smith":{lat:34.940766,lng:-102.607564},Delta:{lat:33.385933,lng:-95.67335},Denton:{lat:33.205005,lng:-97.119046},DeWitt:{lat:29.082342,lng:-97.361656},Dickens:{lat:33.614666,lng:-100.786095},Dimmit:{lat:28.423587,lng:-99.765871},Donley:{lat:34.955036,lng:-100.815846},Duval:{lat:27.681123,lng:-98.497393},Eastland:{lat:32.324645,lng:-98.83656},Ector:{lat:31.865301,lng:-102.542507},Edwards:{lat:29.985877,lng:-100.307373},Ellis:{lat:32.347279,lng:-96.798336},"El Paso":{lat:31.766403,lng:-106.241391},Erath:{lat:32.238136,lng:-98.222377},Falls:{lat:31.25193,lng:-96.934128},Fannin:{lat:33.591161,lng:-96.104988},Fayette:{lat:29.877886,lng:-96.921231},Fisher:{lat:32.740473,lng:-100.40312},Floyd:{lat:34.073731,lng:-101.303274},Foard:{lat:33.980404,lng:-99.777427},"Fort Bend":{lat:29.526602,lng:-95.771015},Franklin:{lat:33.175846,lng:-95.219066},Freestone:{lat:31.701654,lng:-96.144237},Frio:{lat:28.869334,lng:-99.108788},Gaines:{lat:32.743942,lng:-102.631562},Galveston:{lat:29.228706,lng:-94.894865},Garza:{lat:33.183792,lng:-101.301134},Gillespie:{lat:30.32639,lng:-98.942106},Glasscock:{lat:31.868591,lng:-101.528971},Goliad:{lat:28.6607,lng:-97.430415},Gonzales:{lat:29.468704,lng:-97.477738},Gray:{lat:35.402542,lng:-100.812374},Grayson:{lat:33.624508,lng:-96.675699},Gregg:{lat:32.486397,lng:-94.816276},Grimes:{lat:30.543231,lng:-95.988082},Guadalupe:{lat:29.583208,lng:-97.949027},Hale:{lat:34.068436,lng:-101.822888},Hall:{lat:34.453189,lng:-100.576343},Hamilton:{lat:31.706982,lng:-98.111794},Hansford:{lat:36.272847,lng:-101.35693},Hardeman:{lat:34.289904,lng:-99.745697},Hardin:{lat:30.329612,lng:-94.393149},Harris:{lat:29.857273,lng:-95.393037},Harrison:{lat:32.547993,lng:-94.374425},Hartley:{lat:35.840244,lng:-102.610047},Haskell:{lat:33.175965,lng:-99.730773},Hays:{lat:30.061225,lng:-98.029267},Hemphill:{lat:35.816237,lng:-100.284807},Henderson:{lat:32.211633,lng:-95.853418},Hidalgo:{lat:26.396384,lng:-98.18099},Hill:{lat:31.98224,lng:-97.129886},Hockley:{lat:33.605932,lng:-102.343398},Hood:{lat:32.430149,lng:-97.831677},Hopkins:{lat:33.148959,lng:-95.565194},Houston:{lat:31.323036,lng:-95.4216},Howard:{lat:32.303583,lng:-101.43853},Hudspeth:{lat:31.450868,lng:-105.377549},Hunt:{lat:33.123438,lng:-96.083807},Hutchinson:{lat:35.837047,lng:-101.362746},Irion:{lat:31.303424,lng:-100.981304},Jack:{lat:33.232277,lng:-98.171902},Jackson:{lat:28.959802,lng:-96.58908},Jasper:{lat:30.752932,lng:-94.022294},"Jeff Davis":{lat:30.617087,lng:-104.18786},Jefferson:{lat:29.854,lng:-94.149331},"Jim Hogg":{lat:27.041212,lng:-98.700127},"Jim Wells":{lat:27.733516,lng:-98.090814},Johnson:{lat:32.379511,lng:-97.364823},Jones:{lat:32.743709,lng:-99.87443},Karnes:{lat:28.907618,lng:-97.860767},Kaufman:{lat:32.598944,lng:-96.288378},Kendall:{lat:29.944524,lng:-98.711094},Kenedy:{lat:26.890232,lng:-97.591233},Kent:{lat:33.18478,lng:-100.76972},Kerr:{lat:30.053928,lng:-99.351968},Kimble:{lat:30.479472,lng:-99.746396},King:{lat:33.614159,lng:-100.250548},Kinney:{lat:29.347087,lng:-100.4177},Kleberg:{lat:27.438735,lng:-97.66062},Knox:{lat:33.616657,lng:-99.747112},Lamar:{lat:33.667263,lng:-95.570348},Lamb:{lat:34.068862,lng:-102.348018},Lampasas:{lat:31.196731,lng:-98.240889},"La Salle":{lat:28.351098,lng:-99.096774},Lavaca:{lat:29.382578,lng:-96.923633},Lee:{lat:30.321105,lng:-96.976365},Leon:{lat:31.300493,lng:-95.995622},Liberty:{lat:30.162189,lng:-94.822682},Limestone:{lat:31.547543,lng:-96.593623},Lipscomb:{lat:36.2802,lng:-100.272683},"Live Oak":{lat:28.351535,lng:-98.126961},Llano:{lat:30.707585,lng:-98.68469},Loving:{lat:31.844936,lng:-103.561229},Lubbock:{lat:33.611469,lng:-101.819944},Lynn:{lat:33.178412,lng:-101.818493},McCulloch:{lat:31.205477,lng:-99.359856},McLennan:{lat:31.549493,lng:-97.201472},McMullen:{lat:28.384922,lng:-98.578853},Madison:{lat:30.966878,lng:-95.930372},Marion:{lat:32.797757,lng:-94.357673},Martin:{lat:32.30983,lng:-101.961836},Mason:{lat:30.703232,lng:-99.237608},Matagorda:{lat:28.783341,lng:-95.997755},Maverick:{lat:28.745217,lng:-100.311368},Medina:{lat:29.353661,lng:-99.111085},Menard:{lat:30.883707,lng:-99.854936},Midland:{lat:31.870896,lng:-102.024326},Milam:{lat:30.791242,lng:-96.984395},Mills:{lat:31.494889,lng:-98.594623},Mitchell:{lat:32.303781,lng:-100.92458},Montague:{lat:33.676289,lng:-97.724747},Montgomery:{lat:30.302364,lng:-95.503523},Moore:{lat:35.835676,lng:-101.890502},Morris:{lat:33.116466,lng:-94.731265},Motley:{lat:34.058383,lng:-100.793696},Nacogdoches:{lat:31.62056,lng:-94.62025},Navarro:{lat:32.04845,lng:-96.476908},Newton:{lat:30.786718,lng:-93.73925},Nolan:{lat:32.312338,lng:-100.418108},Nueces:{lat:27.739406,lng:-97.521643},Ochiltree:{lat:36.278744,lng:-100.815864},Oldham:{lat:35.401921,lng:-102.59762},Orange:{lat:30.120918,lng:-93.893358},"Palo Pinto":{lat:32.75221,lng:-98.317974},Panola:{lat:32.163978,lng:-94.305156},Parker:{lat:32.777096,lng:-97.805905},Parmer:{lat:34.532163,lng:-102.784853},Pecos:{lat:30.770894,lng:-102.71986},Polk:{lat:30.784553,lng:-94.837338},Potter:{lat:35.398675,lng:-101.893804},Presidio:{lat:30.005891,lng:-104.261619},Rains:{lat:32.87058,lng:-95.79544},Randall:{lat:34.962529,lng:-101.895547},Reagan:{lat:31.372895,lng:-101.513901},Real:{lat:29.82303,lng:-99.805303},"Red River":{lat:33.619626,lng:-95.048429},Reeves:{lat:31.308366,lng:-103.712706},Refugio:{lat:28.312496,lng:-97.160479},Roberts:{lat:35.836216,lng:-100.807555},Robertson:{lat:31.025481,lng:-96.514941},Rockwall:{lat:32.889216,lng:-96.407501},Runnels:{lat:31.833311,lng:-99.967856},Rusk:{lat:32.109423,lng:-94.756382},Sabine:{lat:31.3433,lng:-93.851913},"San Augustine":{lat:31.382449,lng:-94.16318},"San Jacinto":{lat:30.574218,lng:-95.162852},"San Patricio":{lat:28.011782,lng:-97.517165},"San Saba":{lat:31.155138,lng:-98.819292},Schleicher:{lat:30.896233,lng:-100.527216},Scurry:{lat:32.744462,lng:-100.913399},Shackelford:{lat:32.743788,lng:-99.347045},Shelby:{lat:31.790137,lng:-94.142565},Sherman:{lat:36.277628,lng:-101.894716},Smith:{lat:32.377093,lng:-95.26963},Somervell:{lat:32.217942,lng:-97.769211},Starr:{lat:26.546335,lng:-98.715803},Stephens:{lat:32.731531,lng:-98.840081},Sterling:{lat:31.835774,lng:-101.054911},Stonewall:{lat:33.17958,lng:-100.253807},Sutton:{lat:30.517865,lng:-100.505395},Swisher:{lat:34.53046,lng:-101.732852},Tarrant:{lat:32.77204,lng:-97.291291},Taylor:{lat:32.295684,lng:-99.89322},Terrell:{lat:30.232332,lng:-102.072539},Terry:{lat:33.171229,lng:-102.339284},Throckmorton:{lat:33.170712,lng:-99.206137},Titus:{lat:33.214599,lng:-94.966783},"Tom Green":{lat:31.401583,lng:-100.461355},Travis:{lat:30.239513,lng:-97.69127},Trinity:{lat:31.087483,lng:-95.153291},Tyler:{lat:30.769579,lng:-94.379449},Upshur:{lat:32.735878,lng:-94.941649},Upton:{lat:31.353849,lng:-102.042013},Uvalde:{lat:29.35034,lng:-99.761074},"Val Verde":{lat:29.884961,lng:-101.146646},"Van Zandt":{lat:32.558948,lng:-95.836391},Victoria:{lat:28.79637,lng:-96.971198},Walker:{lat:30.74309,lng:-95.569888},Waller:{lat:30.013578,lng:-95.982102},Ward:{lat:31.513069,lng:-103.105113},Washington:{lat:30.215075,lng:-96.410272},Webb:{lat:27.770584,lng:-99.326641},Wharton:{lat:29.278481,lng:-96.229675},Wheeler:{lat:35.392593,lng:-100.253107},Wichita:{lat:33.991103,lng:-98.716851},Wilbarger:{lat:34.08492,lng:-99.24244},Willacy:{lat:26.481092,lng:-97.584224},Williamson:{lat:30.64903,lng:-97.605069},Wilson:{lat:29.174303,lng:-98.085899},Winkler:{lat:31.831416,lng:-103.055986},Wise:{lat:33.219095,lng:-97.653997},Wood:{lat:32.783588,lng:-95.382166},Yoakum:{lat:33.172397,lng:-102.823771},Young:{lat:33.158787,lng:-98.678267},Zapata:{lat:26.996981,lng:-99.182603},Zavala:{lat:28.864652,lng:-99.75983}},cities:{Abilene:{lat:32.4487364,lng:-99.73314390000002},Allen:{lat:33.1031744,lng:-96.67055030000002},Amarillo:{lat:35.2219971,lng:-101.8312969},Arlington:{lat:32.735687,lng:-97.10806559999999},Atascocita:{lat:29.99883059999999,lng:-95.1765978},Austin:{lat:30.267153,lng:-97.7430608},Baytown:{lat:29.7355047,lng:-94.97742740000001},Beaumont:{lat:30.080174,lng:-94.1265562},Bedford:{lat:32.844017,lng:-97.1430671},Brownsville:{lat:25.9017472,lng:-97.4974838},Bryan:{lat:30.6743643,lng:-96.3699632},Carrollton:{lat:32.9756415,lng:-96.8899636},"Cedar Hill":{lat:32.5884689,lng:-96.9561152},"Cedar Park":{lat:30.505198,lng:-97.8202888},"College Station":{lat:30.627977,lng:-96.3344068},Conroe:{lat:30.3118769,lng:-95.45605119999999},"Corpus Christi":{lat:27.8005828,lng:-97.39638099999999},Dallas:{lat:32.802955,lng:-96.769923},Denton:{lat:33.2148412,lng:-97.13306829999999},DeSoto:{lat:32.5898577,lng:-96.85694509999999},Edinburg:{lat:26.3017374,lng:-98.1633432},"El Paso":{lat:31.7587198,lng:-106.4869314},Euless:{lat:32.8370727,lng:-97.08195409999999},"Flower Mound":{lat:33.0145673,lng:-97.0969552},"Fort Worth":{lat:32.725409,lng:-97.3208496},Frisco:{lat:33.1506744,lng:-96.82361159999999},Galveston:{lat:29.3013479,lng:-94.7976958},Garland:{lat:32.912624,lng:-96.63888329999999},Georgetown:{lat:30.6326942,lng:-97.6772311},"Grand Prairie":{lat:32.7459645,lng:-96.99778459999999},Grapevine:{lat:32.9342919,lng:-97.0780654},"Haltom City":{lat:32.7995738,lng:-97.26918169999999},Harlingen:{lat:26.1906306,lng:-97.69610259999999},Houston:{lat:29.7601927,lng:-95.36938959999999},Irving:{lat:32.8140177,lng:-96.9488945},Keller:{lat:32.9345701,lng:-97.251682},Killeen:{lat:31.1171194,lng:-97.72779589999999},Laredo:{lat:27.506407,lng:-99.5075421},"League City":{lat:29.5074538,lng:-95.0949303},Lewisville:{lat:33.046233,lng:-96.994174},Longview:{lat:32.5007037,lng:-94.74048909999999},Lubbock:{lat:33.5778631,lng:-101.8551665},McAllen:{lat:26.2034071,lng:-98.23001239999999},McKinney:{lat:33.1972465,lng:-96.6397822},Mansfield:{lat:32.5631924,lng:-97.1416768},Mesquite:{lat:32.76679550000001,lng:-96.5991593},Midland:{lat:31.9973456,lng:-102.0779146},Mission:{lat:26.2159066,lng:-98.32529319999999},"Missouri City":{lat:29.6185669,lng:-95.5377215},"New Braunfels":{lat:29.7030024,lng:-98.1244531},"North Richland Hills":{lat:32.8342952,lng:-97.2289029},Odessa:{lat:31.8456816,lng:-102.3676431},Pasadena:{lat:29.6910625,lng:-95.2091006},Pearland:{lat:29.5635666,lng:-95.2860474},Pflugerville:{lat:30.4393696,lng:-97.62000429999999},Pharr:{lat:26.1947962,lng:-98.1836216},Plano:{lat:33.0198431,lng:-96.6988856},"Port Arthur":{lat:29.8849504,lng:-93.93994699999999},Richardson:{lat:32.9481789,lng:-96.7297205},Rockwall:{lat:32.93123360000001,lng:-96.4597089},"Round Rock":{lat:30.5082551,lng:-97.678896},Rowlett:{lat:32.9029017,lng:-96.56388},"San Angelo":{lat:31.4637723,lng:-100.4370375},"San Antonio":{lat:29.4241219,lng:-98.49362819999999},"San Marcos":{lat:29.8832749,lng:-97.9413941},Spring:{lat:30.0799405,lng:-95.41716009999999},"Sugar Land":{lat:29.6196787,lng:-95.6349463},Temple:{lat:31.0982344,lng:-97.342782},"Texas City":{lat:29.383845,lng:-94.9027002},"The Woodlands":{lat:30.1658207,lng:-95.46126249999999},Tyler:{lat:32.3512601,lng:-95.30106239999999},Victoria:{lat:28.8052674,lng:-97.0035982},Waco:{lat:31.549333,lng:-97.1466695},"Wichita Falls":{lat:33.9137085,lng:-98.4933873},Wylie:{lat:33.0151201,lng:-96.5388789}},center:{lat:31.106,lng:-97.6475}},OH:{counties:{Adams:{lat:38.841681,lng:-83.474173},Allen:{lat:40.771528,lng:-84.106546},Ashland:{lat:40.843274,lng:-82.270121},Ashtabula:{lat:41.906644,lng:-80.745641},Athens:{lat:39.333848,lng:-82.046008},Auglaize:{lat:40.561309,lng:-84.224018},Belmont:{lat:40.017682,lng:-80.967727},Brown:{lat:38.931377,lng:-83.866772},Butler:{lat:39.439915,lng:-84.565397},Carroll:{lat:40.579884,lng:-81.090787},Champaign:{lat:40.132759,lng:-83.767543},Clark:{lat:39.917032,lng:-83.783676},Clermont:{lat:39.052084,lng:-84.149614},Clinton:{lat:39.414041,lng:-83.814542},Columbiana:{lat:40.768462,lng:-80.777231},Coshocton:{lat:40.29672,lng:-81.930112},Crawford:{lat:40.848508,lng:-82.924771},Cuyahoga:{lat:41.760392,lng:-81.724217},Darke:{lat:40.132176,lng:-84.620438},Defiance:{lat:41.321679,lng:-84.486433},Delaware:{lat:40.278941,lng:-83.007462},Erie:{lat:41.554006,lng:-82.525897},Fairfield:{lat:39.752935,lng:-82.628276},Fayette:{lat:39.553845,lng:-83.459327},Franklin:{lat:39.969447,lng:-83.008258},Fulton:{lat:41.597264,lng:-84.124267},Gallia:{lat:38.817046,lng:-82.301746},Geauga:{lat:41.499322,lng:-81.173505},Greene:{lat:39.687479,lng:-83.894894},Guernsey:{lat:40.056665,lng:-81.497875},Hamilton:{lat:39.196927,lng:-84.544187},Hancock:{lat:41.000471,lng:-83.666034},Hardin:{lat:40.660415,lng:-83.664077},Harrison:{lat:40.292318,lng:-81.091565},Henry:{lat:41.335072,lng:-84.065882},Highland:{lat:39.184488,lng:-83.603668},Hocking:{lat:39.490343,lng:-82.483445},Holmes:{lat:40.565309,lng:-81.929869},Huron:{lat:41.14508,lng:-82.594641},Jackson:{lat:39.013477,lng:-82.614142},Jefferson:{lat:40.399188,lng:-80.76141},Knox:{lat:40.40362,lng:-82.422393},Lake:{lat:41.924116,lng:-81.392643},Lawrence:{lat:38.603866,lng:-82.517186},Licking:{lat:40.093609,lng:-82.481251},Logan:{lat:40.387553,lng:-83.766343},Lorain:{lat:41.438805,lng:-82.179722},Lucas:{lat:41.682321,lng:-83.468867},Madison:{lat:39.896607,lng:-83.400885},Mahoning:{lat:41.01088,lng:-80.770396},Marion:{lat:40.588208,lng:-83.172927},Medina:{lat:41.116051,lng:-81.899566},Meigs:{lat:39.089807,lng:-82.028397},Mercer:{lat:40.535333,lng:-84.632059},Miami:{lat:40.053326,lng:-84.228414},Monroe:{lat:39.725969,lng:-81.090658},Montgomery:{lat:39.755218,lng:-84.290546},Morgan:{lat:39.624946,lng:-81.861699},Morrow:{lat:40.525266,lng:-82.797729},Muskingum:{lat:39.966046,lng:-81.943506},Noble:{lat:39.767232,lng:-81.452604},Ottawa:{lat:41.544467,lng:-83.009253},Paulding:{lat:41.119141,lng:-84.576967},Perry:{lat:39.743187,lng:-82.237953},Pickaway:{lat:39.648947,lng:-83.052827},Pike:{lat:39.071365,lng:-83.052921},Portage:{lat:41.16864,lng:-81.196932},Preble:{lat:39.737906,lng:-84.645358},Putnam:{lat:41.024533,lng:-84.129879},Richland:{lat:40.774167,lng:-82.542715},Ross:{lat:39.323763,lng:-83.059585},Sandusky:{lat:41.355291,lng:-83.142735},Scioto:{lat:38.815019,lng:-82.999028},Seneca:{lat:41.120008,lng:-83.127436},Shelby:{lat:40.33668,lng:-84.204143},Stark:{lat:40.814131,lng:-81.365667},Summit:{lat:41.121851,lng:-81.534936},Trumbull:{lat:41.308936,lng:-80.767656},Tuscarawas:{lat:40.447441,lng:-81.471157},Union:{lat:40.295901,lng:-83.367042},"Van Wert":{lat:40.85552,lng:-84.585775},Vinton:{lat:39.252014,lng:-82.485961},Warren:{lat:39.425652,lng:-84.169906},Washington:{lat:39.450684,lng:-81.490653},Wayne:{lat:40.829661,lng:-81.887194},Williams:{lat:41.564958,lng:-84.584323},Wood:{lat:41.360183,lng:-83.622682},Wyandot:{lat:40.840122,lng:-83.313172}},cities:{Akron:{lat:41.0814447,lng:-81.51900529999999},Beavercreek:{lat:39.7092262,lng:-84.06326849999999},Canton:{lat:40.79894729999999,lng:-81.378447},Centerville:{lat:39.6283928,lng:-84.15938179999999},Cincinnati:{lat:39.1031182,lng:-84.5120196},Cleveland:{lat:41.4994954,lng:-81.6954088},"Cleveland Heights":{lat:41.5200518,lng:-81.556235},Columbus:{lat:39.9611755,lng:-82.99879419999999},"Cuyahoga Falls":{lat:41.1339449,lng:-81.48455849999999},Dayton:{lat:39.7589478,lng:-84.1916069},Dublin:{lat:40.0992294,lng:-83.1140771},Elyria:{lat:41.3683798,lng:-82.10764859999999},Euclid:{lat:41.5931049,lng:-81.5267873},Fairfield:{lat:39.3454673,lng:-84.5603187},Hamilton:{lat:39.3995008,lng:-84.5613355},Kettering:{lat:39.68950359999999,lng:-84.1688274},Lakewood:{lat:41.4819932,lng:-81.7981908},Lorain:{lat:41.452819,lng:-82.1823746},Mansfield:{lat:40.75839,lng:-82.5154471},Mentor:{lat:41.6661573,lng:-81.339552},Middletown:{lat:39.5150576,lng:-84.39827629999999},Newark:{lat:40.0581205,lng:-82.4012642},Parma:{lat:41.4047742,lng:-81.7229086},Springfield:{lat:39.9242266,lng:-83.8088171},Strongsville:{lat:41.3144966,lng:-81.83569},Toledo:{lat:41.6639383,lng:-83.55521200000001},Youngstown:{lat:41.0997803,lng:-80.6495194}},center:{lat:40.3736,lng:-82.7755}},FL:{counties:{Alachua:{lat:29.67574,lng:-82.357221},Baker:{lat:30.324442,lng:-82.302284},Bay:{lat:30.237563,lng:-85.631348},Bradford:{lat:29.946934,lng:-82.166796},Brevard:{lat:28.298276,lng:-80.700384},Broward:{lat:26.19352,lng:-80.476658},Calhoun:{lat:30.388801,lng:-85.197916},Charlotte:{lat:26.868826,lng:-81.940858},Citrus:{lat:28.843628,lng:-82.524796},Clay:{lat:29.987116,lng:-81.858147},Collier:{lat:26.118713,lng:-81.400884},Columbia:{lat:30.221305,lng:-82.623127},DeSoto:{lat:27.190581,lng:-81.806253},Dixie:{lat:29.580899,lng:-83.195666},Duval:{lat:30.335245,lng:-81.648113},Escambia:{lat:30.611664,lng:-87.33904},Flagler:{lat:29.474894,lng:-81.286362},Franklin:{lat:29.810176,lng:-84.799174},Gadsden:{lat:30.57917,lng:-84.612783},Gilchrist:{lat:29.723456,lng:-82.795801},Glades:{lat:26.95481,lng:-81.19082},Gulf:{lat:29.907257,lng:-85.256537},Hamilton:{lat:30.491102,lng:-82.951049},Hardee:{lat:27.492846,lng:-81.82158},Hendry:{lat:26.53934,lng:-81.151584},Hernando:{lat:28.567911,lng:-82.464835},Highlands:{lat:27.342627,lng:-81.340921},Hillsborough:{lat:27.90659,lng:-82.349568},Holmes:{lat:30.866222,lng:-85.812959},"Indian River":{lat:27.700638,lng:-80.574803},Jackson:{lat:30.787812,lng:-85.210374},Jefferson:{lat:30.424558,lng:-83.890859},Lafayette:{lat:29.990066,lng:-83.17851},Lake:{lat:28.764113,lng:-81.712282},Lee:{lat:26.552134,lng:-81.89225},Leon:{lat:30.45931,lng:-84.2778},Levy:{lat:29.284409,lng:-82.783483},Liberty:{lat:30.259849,lng:-84.868581},Madison:{lat:30.447228,lng:-83.470437},Manatee:{lat:27.481386,lng:-82.365784},Marion:{lat:29.202805,lng:-82.0431},Martin:{lat:27.079954,lng:-80.398211},"Miami-Dade":{lat:25.610494,lng:-80.499045},Monroe:{lat:25.601043,lng:-81.206777},Nassau:{lat:30.605926,lng:-81.764929},Okaloosa:{lat:30.665858,lng:-86.594194},Okeechobee:{lat:27.385592,lng:-80.887388},Orange:{lat:28.514435,lng:-81.323295},Osceola:{lat:28.059027,lng:-81.139312},"Palm Beach":{lat:26.645763,lng:-80.448673},Pasco:{lat:28.302024,lng:-82.455707},Pinellas:{lat:27.903122,lng:-82.739518},Polk:{lat:27.953115,lng:-81.692783},Putnam:{lat:29.606006,lng:-81.740894},"St. Johns":{lat:29.890593,lng:-81.383914},"St. Lucie":{lat:27.380775,lng:-80.443364},"Santa Rosa":{lat:30.703633,lng:-87.014255},Sarasota:{lat:27.184386,lng:-82.365835},Seminole:{lat:28.690079,lng:-81.13198},Sumter:{lat:28.714294,lng:-82.074715},Suwannee:{lat:30.189244,lng:-82.992754},Taylor:{lat:30.016943,lng:-83.616417},Union:{lat:30.05428,lng:-82.366918},Volusia:{lat:29.057617,lng:-81.161813},Wakulla:{lat:30.140378,lng:-84.375136},Walton:{lat:30.631211,lng:-86.176614},Washington:{lat:30.602217,lng:-85.662797}},cities:{Alafaya:{lat:28.5641,lng:-81.2114},"Altamonte Springs":{lat:28.6611089,lng:-81.3656242},Apopka:{lat:28.68675,lng:-81.51327599999999},"Boca Raton":{lat:26.3586885,lng:-80.0830984},"Bonita Springs":{lat:26.339806,lng:-81.7786972},"Boynton Beach":{lat:26.5253491,lng:-80.0664309},Bradenton:{lat:27.4989278,lng:-82.5748194},Brandon:{lat:27.937801,lng:-82.2859247},"Cape Coral":{lat:26.5628537,lng:-81.9495331},Clearwater:{lat:27.9658533,lng:-82.8001026},"Coconut Creek":{lat:26.2517482,lng:-80.17893509999999},"Coral Gables":{lat:25.72149,lng:-80.2683838},"Coral Springs":{lat:26.271192,lng:-80.2706044},"Country Club":{lat:25.9481487,lng:-80.3169953},"Cutler Bay":{lat:25.5783,lng:-80.3377},Davie:{lat:26.0628664,lng:-80.2331038},"Daytona Beach":{lat:29.2108147,lng:-81.0228331},"Deerfield Beach":{lat:26.3184123,lng:-80.09976569999999},"Delray Beach":{lat:26.4614625,lng:-80.0728201},Deltona:{lat:28.9005446,lng:-81.26367379999999},Doral:{lat:25.8195424,lng:-80.3553302},"Fort Lauderdale":{lat:26.1223084,lng:-80.14337859999999},"Fort Myers":{lat:26.640628,lng:-81.8723084},"Fort Pierce":{lat:27.4467056,lng:-80.3256056},Fountainbleau:{lat:25.7728774,lng:-80.3478301},Gainesville:{lat:29.6516344,lng:-82.32482619999999},Hialeah:{lat:25.8575963,lng:-80.2781057},Hollywood:{lat:26.0112014,lng:-80.1494901},Homestead:{lat:25.4687224,lng:-80.4775569},Jacksonville:{lat:30.3321838,lng:-81.65565099999999},Jupiter:{lat:26.9342246,lng:-80.0942087},"Kendale Lakes":{lat:25.7081577,lng:-80.4069986},Kendall:{lat:25.6660336,lng:-80.357827},Kissimmee:{lat:28.2919557,lng:-81.40757099999999},Lakeland:{lat:28.0394654,lng:-81.9498042},Largo:{lat:27.9094665,lng:-82.7873244},Lauderhill:{lat:26.1403635,lng:-80.2133808},"Lehigh Acres":{lat:26.6253497,lng:-81.6248026},Margate:{lat:26.2445263,lng:-80.206436},Melbourne:{lat:28.0836269,lng:-80.60810889999999},Miami:{lat:25.7889689,lng:-80.2264393},"Miami Gardens":{lat:25.9420377,lng:-80.2456045},Miramar:{lat:25.9756704,lng:-80.28675009999999},"North Lauderdale":{lat:26.217305,lng:-80.2258811},"North Miami":{lat:25.8900949,lng:-80.1867138},"North Miami Beach":{lat:25.9331488,lng:-80.1625463},"North Port":{lat:27.044224,lng:-82.2359254},"Oakland Park":{lat:26.1723065,lng:-80.1319893},Ocala:{lat:29.1871986,lng:-82.14009229999999},Orlando:{lat:28.5383355,lng:-81.3792365},"Palm Bay":{lat:28.0344621,lng:-80.5886646},"Palm Beach Gardens":{lat:26.8233946,lng:-80.13865469999999},"Palm Coast":{lat:29.5849736,lng:-81.2078411},"Palm Harbor":{lat:28.0780718,lng:-82.7637127},"Pembroke Pines":{lat:26.0122378,lng:-80.3152233},Pensacola:{lat:30.42130899999999,lng:-87.2169149},"Pine Hills":{lat:28.5577794,lng:-81.4534046},"Pinellas Park":{lat:27.8428025,lng:-82.6995443},Plantation:{lat:26.1275862,lng:-80.23310359999999},Poinciana:{lat:28.1402939,lng:-81.4584058},"Pompano Beach":{lat:26.2378597,lng:-80.1247667},"Port Charlotte":{lat:26.9761707,lng:-82.09064479999999},"Port Orange":{lat:29.1383165,lng:-80.9956105},"Port St Lucie":{lat:27.2758333,lng:-80.35499999999999},Riverview:{lat:27.8661364,lng:-82.32648089999999},"St Petersburg":{lat:27.7730556,lng:-82.64},Sanford:{lat:28.7588218,lng:-81.29417939999999},Sarasota:{lat:27.3364347,lng:-82.53065269999999},"Spring Hill":{lat:28.4831682,lng:-82.5369872},Sunrise:{lat:26.1571743,lng:-80.28622560000001},Tallahassee:{lat:30.4382559,lng:-84.28073289999999},Tamarac:{lat:26.2128609,lng:-80.2497707},Tamiami:{lat:25.7587114,lng:-80.398387},Tampa:{lat:27.950575,lng:-82.4571776},"The Hammocks":{lat:25.6714925,lng:-80.4444997},"The Villages":{lat:28.9377778,lng:-81.9711111},Titusville:{lat:28.6122187,lng:-80.8075537},"Town 'n' Country":{lat:28.0105745,lng:-82.57731930000001},Valrico:{lat:27.9408333,
lng:-82.24249999999999},Wellington:{lat:26.6552309,lng:-80.25425129999999},"Wesley Chapel":{lat:28.1786111,lng:-82.35055559999999},Weston:{lat:26.1003654,lng:-80.3997748},"West Palm Beach":{lat:26.7153424,lng:-80.0533746}},center:{lat:27.8333,lng:-81.717}},CA:{counties:{Alameda:{lat:37.648081,lng:-121.913304},Alpine:{lat:38.61761,lng:-119.798999},Amador:{lat:38.44355,lng:-120.653856},Butte:{lat:39.665959,lng:-121.601919},Calaveras:{lat:38.187844,lng:-120.555115},Colusa:{lat:39.177739,lng:-122.237563},"Contra Costa":{lat:37.919479,lng:-121.951543},"Del Norte":{lat:41.749903,lng:-123.980998},"El Dorado":{lat:38.785532,lng:-120.534398},Fresno:{lat:36.761006,lng:-119.655019},Glenn:{lat:39.602546,lng:-122.4017},Humboldt:{lat:40.706673,lng:-123.925818},Imperial:{lat:33.040816,lng:-115.355395},Inyo:{lat:36.561977,lng:-117.403927},Kern:{lat:35.346629,lng:-118.729506},Kings:{lat:36.072478,lng:-119.81553},Lake:{lat:39.094802,lng:-122.746757},Lassen:{lat:40.721089,lng:-120.629931},"Los Angeles":{lat:34.196398,lng:-118.261862},Madera:{lat:37.210039,lng:-119.749852},Marin:{lat:38.051817,lng:-122.745974},Mariposa:{lat:37.570034,lng:-119.91286},Mendocino:{lat:39.432388,lng:-123.442881},Merced:{lat:37.194806,lng:-120.722802},Modoc:{lat:41.592919,lng:-120.71837},Mono:{lat:37.915836,lng:-118.875167},Monterey:{lat:36.240107,lng:-121.315573},Napa:{lat:38.507351,lng:-122.325995},Nevada:{lat:39.295191,lng:-120.773446},Orange:{lat:33.675687,lng:-117.777207},Placer:{lat:39.062032,lng:-120.722718},Plumas:{lat:39.99517,lng:-120.829516},Riverside:{lat:33.729828,lng:-116.002239},Sacramento:{lat:38.450011,lng:-121.340441},"San Benito":{lat:36.610702,lng:-121.085296},"San Bernardino":{lat:34.85722,lng:-116.181197},"San Diego":{lat:33.023604,lng:-116.776117},"San Francisco":{lat:37.727239,lng:-123.032229},"San Joaquin":{lat:37.935034,lng:-121.272237},"San Luis Obispo":{lat:35.385227,lng:-120.44754},"San Mateo":{lat:37.414664,lng:-122.371542},"Santa Barbara":{lat:34.537378,lng:-120.038485},"Santa Clara":{lat:37.220777,lng:-121.690622},"Santa Cruz":{lat:37.012488,lng:-122.007205},Shasta:{lat:40.760522,lng:-122.04355},Sierra:{lat:39.576925,lng:-120.521993},Siskiyou:{lat:41.587986,lng:-122.533287},Solano:{lat:38.267226,lng:-121.939594},Sonoma:{lat:38.532574,lng:-122.945194},Stanislaus:{lat:37.562384,lng:-121.002656},Sutter:{lat:39.035257,lng:-121.702758},Tehama:{lat:40.126156,lng:-122.232276},Trinity:{lat:40.647724,lng:-123.114404},Tulare:{lat:36.230453,lng:-118.780542},Tuolumne:{lat:38.021451,lng:-119.964708},Ventura:{lat:34.358742,lng:-119.133143},Yolo:{lat:38.679268,lng:-121.903178},Yuba:{lat:39.270026,lng:-121.34428}},cities:{Alameda:{lat:37.7652065,lng:-122.2416355},Alhambra:{lat:34.095287,lng:-118.1270146},"Aliso Viejo":{lat:33.57509599999999,lng:-117.725431},Altadena:{lat:34.1897274,lng:-118.1311819},Anaheim:{lat:33.8352932,lng:-117.9145036},"Antelope North Rd":{lat:38.7172491,lng:-121.3274832},Antioch:{lat:38.0049214,lng:-121.805789},"Apple Valley":{lat:34.5008311,lng:-117.1858759},Arcadia:{lat:34.1397292,lng:-118.0353449},"Arden-Arcade":{lat:38.6008071,lng:-121.3770336},Azusa:{lat:34.1336186,lng:-117.9075627},Bakersfield:{lat:35.3732921,lng:-119.0187125},"Baldwin Park":{lat:34.0852868,lng:-117.9608978},Beaumont:{lat:33.9294606,lng:-116.977248},Bellflower:{lat:33.8816818,lng:-118.1170117},"Bell Gardens":{lat:33.9652918,lng:-118.1514588},Berkeley:{lat:37.8715926,lng:-122.272747},Brentwood:{lat:37.931868,lng:-121.6957863},"Buena Park":{lat:33.8675143,lng:-117.9981181},Burbank:{lat:37.3205556,lng:-121.9316667},Calexico:{lat:32.6789476,lng:-115.4988834},Camarillo:{lat:34.2163937,lng:-119.0376023},Carlsbad:{lat:33.1580933,lng:-117.3505939},Carmichael:{lat:38.617127,lng:-121.3282843},Carson:{lat:33.8314058,lng:-118.2820165},"Castro Valley":{lat:37.6940973,lng:-122.0863522},"Cathedral City":{lat:33.7797426,lng:-116.4652911},Ceres:{lat:37.5949316,lng:-120.9577098},Cerritos:{lat:33.8583483,lng:-118.0647871},Chico:{lat:39.7284944,lng:-121.8374777},Chino:{lat:34.0122346,lng:-117.688944},"Chino Hills":{lat:33.9898188,lng:-117.7325848},"Chula Vista":{lat:32.6400541,lng:-117.0841955},"Citrus Heights":{lat:38.7071247,lng:-121.2810611},Clovis:{lat:36.8252277,lng:-119.7029194},Coachella:{lat:33.6803003,lng:-116.173894},Colton:{lat:34.0739016,lng:-117.3136547},Compton:{lat:33.8958492,lng:-118.2200712},Concord:{lat:37.9779776,lng:-122.0310733},Corona:{lat:33.8752935,lng:-117.5664384},"Costa Mesa":{lat:33.6411316,lng:-117.9186689},Covina:{lat:34.0900091,lng:-117.8903397},Cupertino:{lat:37.3229978,lng:-122.0321823},Cypress:{lat:33.8169599,lng:-118.0372852},"Daly City":{lat:37.6879241,lng:-122.4702079},Danville:{lat:37.8215929,lng:-121.9999606},Davis:{lat:38.5449065,lng:-121.7405167},Delano:{lat:35.7688425,lng:-119.2470536},"Diamond Bar":{lat:34.0286226,lng:-117.8103367},Downey:{lat:33.94001430000001,lng:-118.1325688},Dublin:{lat:37.7021521,lng:-121.9357918},"East Los Angeles":{lat:34.0239015,lng:-118.1720157},"Los Angeles":{lat:34.0522342,lng:-118.2436849},"El Cajon":{lat:32.7947731,lng:-116.9625269},"El Centro":{lat:32.792,lng:-115.5630514},"El Dorado Hills":{lat:38.6857367,lng:-121.082167},"Elk Grove":{lat:38.4087993,lng:-121.3716178},"El Monte":{lat:34.0686206,lng:-118.0275667},Encinitas:{lat:33.0369867,lng:-117.2919818},Escondido:{lat:33.1192068,lng:-117.086421},Fairfield:{lat:38.24935809999999,lng:-122.0399663},"Florence-Graham":{lat:33.9694444,lng:-118.2438889},Florin:{lat:38.4960187,lng:-121.4088416},Folsom:{lat:38.6779591,lng:-121.1760583},Fontana:{lat:34.0922335,lng:-117.435048},"Fountain Valley":{lat:33.7091847,lng:-117.9536697},Fremont:{lat:37.5482697,lng:-121.9885719},Fresno:{lat:36.7477272,lng:-119.7723661},Fullerton:{lat:33.8702923,lng:-117.925338},Gardena:{lat:33.8883487,lng:-118.3089624},"Garden Grove":{lat:33.7739053,lng:-117.9414477},Glendale:{lat:34.1425078,lng:-118.255075},Glendora:{lat:34.1361187,lng:-117.865339},"Hacienda Heights":{lat:33.9930677,lng:-117.9686755},Hawthorne:{lat:33.9164032,lng:-118.3525748},Hayward:{lat:37.6688205,lng:-122.0807964},Hemet:{lat:33.7475203,lng:-116.9719684},Hesperia:{lat:34.4263886,lng:-117.3008784},Highland:{lat:34.1283442,lng:-117.2086513},"Huntington Beach":{lat:33.660297,lng:-117.9992265},"Huntington Park":{lat:33.9816812,lng:-118.2250725},Indio:{lat:33.7205771,lng:-116.2155619},Inglewood:{lat:33.9616801,lng:-118.3531311},Irvine:{lat:33.6839473,lng:-117.7946942},"Laguna Niguel":{lat:33.5225261,lng:-117.7075526},"La Habra":{lat:33.9319578,lng:-117.9461734},"Lake Elsinore":{lat:33.6680772,lng:-117.3272615},"Lake Forest":{lat:33.6469661,lng:-117.689218},Lakewood:{lat:33.8536269,lng:-118.1339563},"La Mesa":{lat:32.7678287,lng:-117.0230839},"La Mirada":{lat:33.9172357,lng:-118.0120086},Lancaster:{lat:34.6867846,lng:-118.1541632},"La Quinta":{lat:33.6633573,lng:-116.3100095},Lincoln:{lat:38.891565,lng:-121.2930079},Livermore:{lat:37.6818745,lng:-121.7680088},Lodi:{lat:38.1301968,lng:-121.2724473},Lompoc:{lat:34.6391501,lng:-120.4579409},"Long Beach":{lat:33.8041667,lng:-118.1580556},Lynwood:{lat:33.930293,lng:-118.2114603},Madera:{lat:36.9613356,lng:-120.0607176},Manteca:{lat:37.7974273,lng:-121.2160526},Menifee:{lat:33.692372,lng:-117.1884585},Merced:{lat:37.3021632,lng:-120.4829677},Milpitas:{lat:37.4282724,lng:-121.9066238},"Mission Viejo":{lat:33.6000232,lng:-117.6719953},Modesto:{lat:37.63909719999999,lng:-120.9968782},Montebello:{lat:34.0165053,lng:-118.1137535},"Monterey Park":{lat:34.0625106,lng:-118.1228476},"Moreno Valley":{lat:33.9424658,lng:-117.2296717},"Mountain View":{lat:37.3860517,lng:-122.0838511},Murrieta:{lat:33.5539143,lng:-117.2139232},Napa:{lat:38.5024689,lng:-122.2653887},"National City":{lat:32.6781085,lng:-117.0991967},Newark:{lat:37.5296593,lng:-122.0402399},"Newport Beach":{lat:33.6189101,lng:-117.9289469},"North Highlands":{lat:38.6857362,lng:-121.3721745},Norwalk:{lat:33.9022367,lng:-118.081733},Novato:{lat:38.1074198,lng:-122.5697032},Oakland:{lat:37.8043637,lng:-122.2711137},Oceanside:{lat:33.1958696,lng:-117.3794834},Ontario:{lat:34.0633443,lng:-117.6508876},Orange:{lat:33.7877944,lng:-117.8531119},Oxnard:{lat:34.1975048,lng:-119.1770516},Palmdale:{lat:34.5794343,lng:-118.1164613},"Palm Desert":{lat:33.7222445,lng:-116.3744556},"Palm Springs":{lat:33.8302961,lng:-116.5452921},"Palo Alto":{lat:37.4418834,lng:-122.1430195},Paramount:{lat:33.8894598,lng:-118.1597911},Pasadena:{lat:34.1477849,lng:-118.1445155},Perris:{lat:33.7825194,lng:-117.2286478},Petaluma:{lat:38.232417,lng:-122.6366524},"Pico Rivera":{lat:33.9830688,lng:-118.096735},Pittsburg:{lat:38.0279762,lng:-121.8846806},Placentia:{lat:33.8722371,lng:-117.8703363},Pleasanton:{lat:37.6624312,lng:-121.8746789},Pomona:{lat:34.0552267,lng:-117.7523048},Poway:{lat:32.9628232,lng:-117.0358646},"Rancho Cordova":{lat:38.5890723,lng:-121.302728},"Rancho Cucamonga":{lat:34.10639889999999,lng:-117.5931084},"Rancho Palos Verdes":{lat:33.7444613,lng:-118.3870173},"Rancho Santa Margarita":{lat:33.640855,lng:-117.603104},Redding:{lat:40.5865396,lng:-122.3916754},Redlands:{lat:34.0555693,lng:-117.1825381},"Redondo Beach":{lat:33.8491816,lng:-118.3884078},"Redwood City":{lat:37.48521520000001,lng:-122.2363548},Rialto:{lat:34.1064001,lng:-117.3703235},Richmond:{lat:37.9357576,lng:-122.3477486},Riverside:{lat:33.9533487,lng:-117.3961564},Rocklin:{lat:38.7907339,lng:-121.2357828},"Rohnert Park":{lat:38.3396367,lng:-122.7010984},Rosemead:{lat:34.0805651,lng:-118.072846},Roseville:{lat:38.7521235,lng:-121.2880059},"Rowland Heights":{lat:33.9761238,lng:-117.9053395},Sacramento:{lat:38.5815719,lng:-121.4943996},Salinas:{lat:36.6777372,lng:-121.6555013},"San Bernardino":{lat:34.1083449,lng:-117.2897652},"San Bruno":{lat:37.6304904,lng:-122.4110835},Ventura:{lat:34.2746405,lng:-119.2290053},"San Clemente":{lat:33.4269728,lng:-117.6119925},"San Diego":{lat:32.7153292,lng:-117.1572551},"San Francisco":{lat:37.7749295,lng:-122.4194155},"San Jacinto":{lat:33.7839084,lng:-116.958635},"San Jose":{lat:37.3393857,lng:-121.8949555},"San Leandro":{lat:37.7249296,lng:-122.1560768},"San Luis Obispo":{lat:35.2827524,lng:-120.6596156},"San Marcos":{lat:33.1433723,lng:-117.1661449},"San Mateo":{lat:37.5629917,lng:-122.3255254},"San Rafael":{lat:37.9735346,lng:-122.5310874},"San Ramon":{lat:37.7799273,lng:-121.9780153},"Santa Ana":{lat:33.7455731,lng:-117.8678338},"Santa Barbara":{lat:34.4208305,lng:-119.6981901},"Santa Clara":{lat:37.3541079,lng:-121.9552356},"Santa Clarita":{lat:34.3916641,lng:-118.542586},"Santa Cruz":{lat:36.9741171,lng:-122.0307963},"Santa Maria":{lat:34.9530337,lng:-120.4357191},"Santa Monica":{lat:34.0194543,lng:-118.4911912},"Santa Rosa":{lat:38.4404674,lng:-122.7144314},Santee:{lat:32.8383828,lng:-116.9739167},"Simi Valley":{lat:34.2694474,lng:-118.781482},"South Gate":{lat:33.954737,lng:-118.2120161},"South San Francisco":{lat:37.654656,lng:-122.4077498},"South Whittier":{lat:33.9347222,lng:-118.0308333},Stockton:{lat:37.9577016,lng:-121.2907796},Sunnyvale:{lat:37.36883,lng:-122.0363496},Temecula:{lat:33.4936391,lng:-117.1483648},"Thousand Oaks":{lat:34.1705609,lng:-118.8375937},Torrance:{lat:33.8358492,lng:-118.3406288},Tracy:{lat:37.7396513,lng:-121.4252227},Turlock:{lat:37.4946568,lng:-120.8465941},Tustin:{lat:33.7458511,lng:-117.826166},"Union City":{lat:37.5919304,lng:-122.0456199},Upland:{lat:34.09751,lng:-117.6483876},Vacaville:{lat:38.3565773,lng:-121.9877444},Vallejo:{lat:38.1040864,lng:-122.2566367},Victorville:{lat:34.5361067,lng:-117.2911565},Visalia:{lat:36.3302284,lng:-119.2920585},Vista:{lat:33.2000368,lng:-117.2425355},"Walnut Creek":{lat:37.9063131,lng:-122.064963},Watsonville:{lat:36.910231,lng:-121.7568946},"West Covina":{lat:34.0686208,lng:-117.9389526},Westminster:{lat:33.7513419,lng:-117.9939921},"West Sacramento":{lat:38.5804609,lng:-121.530234},Whittier:{lat:33.9791793,lng:-118.032844},Woodland:{lat:38.67851570000001,lng:-121.7732971},"Yorba Linda":{lat:33.8886259,lng:-117.8131125},"Yuba City":{lat:39.1404477,lng:-121.6169108},Yucaipa:{lat:34.033625,lng:-117.0430865}},center:{lat:36.17,lng:-119.7462}},NY:{counties:{Albany:{lat:42.588271,lng:-73.974014},Allegany:{lat:42.247894,lng:-78.026176},Bronx:{lat:40.848711,lng:-73.852939},Broome:{lat:42.161977,lng:-75.830291},Cattaraugus:{lat:42.244853,lng:-78.681006},Cayuga:{lat:43.008546,lng:-76.574587},Chautauqua:{lat:42.304216,lng:-79.407595},Chemung:{lat:42.155281,lng:-76.747179},Chenango:{lat:42.489732,lng:-75.604905},Clinton:{lat:44.75271,lng:-73.705648},Columbia:{lat:42.247729,lng:-73.626805},Cortland:{lat:42.593824,lng:-76.076265},Delaware:{lat:42.193987,lng:-74.966728},Dutchess:{lat:41.755009,lng:-73.739951},Erie:{lat:42.752759,lng:-78.778192},Essex:{lat:44.108971,lng:-73.777573},Franklin:{lat:44.594374,lng:-74.31067},Fulton:{lat:43.115609,lng:-74.423678},Genesee:{lat:43.00091,lng:-78.192778},Greene:{lat:42.286951,lng:-74.149495},Hamilton:{lat:43.657879,lng:-74.502456},Herkimer:{lat:43.461635,lng:-74.894694},Jefferson:{lat:43.995371,lng:-76.053522},Kings:{lat:40.635133,lng:-73.950777},Lewis:{lat:43.786397,lng:-75.442617},Livingston:{lat:42.727485,lng:-77.76978},Madison:{lat:42.910026,lng:-75.663575},Monroe:{lat:43.464475,lng:-77.664656},Montgomery:{lat:42.900891,lng:-74.435358},Nassau:{lat:40.729687,lng:-73.589384},"New York":{lat:40.776557,lng:-73.970174},Niagara:{lat:43.456731,lng:-78.792143},Oneida:{lat:43.242727,lng:-75.434282},Onondaga:{lat:43.00653,lng:-76.196117},Ontario:{lat:42.856695,lng:-77.303277},Orange:{lat:41.40241,lng:-74.306252},Orleans:{lat:43.502287,lng:-78.229726},Oswego:{lat:43.461443,lng:-76.209258},Otsego:{lat:42.629776,lng:-75.028841},Putnam:{lat:41.427904,lng:-73.743882},Queens:{lat:40.658557,lng:-73.837929},Rensselaer:{lat:42.710421,lng:-73.513845},Richmond:{lat:40.563855,lng:-74.137063},Rockland:{lat:41.154785,lng:-74.024772},"St. Lawrence":{lat:44.488113,lng:-75.074311},Saratoga:{lat:43.106135,lng:-73.855387},Schenectady:{lat:42.817542,lng:-74.043583},Schoharie:{lat:42.591294,lng:-74.438172},Schuyler:{lat:42.419776,lng:-76.938604},Seneca:{lat:42.782294,lng:-76.827088},Steuben:{lat:42.266725,lng:-77.385525},Suffolk:{lat:40.943554,lng:-72.692218},Sullivan:{lat:41.720176,lng:-74.76468},Tioga:{lat:42.178057,lng:-76.29745},Tompkins:{lat:42.453281,lng:-76.473712},Ulster:{lat:41.947232,lng:-74.265447},Warren:{lat:43.555105,lng:-73.838139},Washington:{lat:43.312377,lng:-73.439428},Wayne:{lat:43.458758,lng:-77.063164},Westchester:{lat:41.15277,lng:-73.745912},Wyoming:{lat:42.701363,lng:-78.228567},Yates:{lat:42.638237,lng:-77.104324}},cities:{Albany:{lat:42.6525793,lng:-73.7562317},Binghamton:{lat:42.09868669999999,lng:-75.91797380000001},Brentwood:{lat:40.7812093,lng:-73.2462273},Buffalo:{lat:42.88644679999999,lng:-78.8783689},Cheektowaga:{lat:42.9026136,lng:-78.74457199999999},Freeport:{lat:40.6576022,lng:-73.58318349999999},Hempstead:{lat:40.7062128,lng:-73.6187397},Hicksville:{lat:40.7684331,lng:-73.5251253},Irondequoit:{lat:43.2133955,lng:-77.5797226},Levittown:{lat:40.7259336,lng:-73.51429209999999},"Mt Vernon":{lat:40.9125992,lng:-73.8370786},"New Rochelle":{lat:40.9114882,lng:-73.7823549},"New York":{lat:40.7143528,lng:-74.00597309999999},Manhattan:{lat:40.7834345,lng:-73.9662495},"Niagara Falls":{lat:43.0962143,lng:-79.0377388},Rochester:{lat:43.16103,lng:-77.6109219},Schenectady:{lat:42.8142432,lng:-73.9395687},Syracuse:{lat:43.114397,lng:-76.2710833},Troy:{lat:42.7284117,lng:-73.69178509999999},Utica:{lat:43.100903,lng:-75.232664},"West Babylon":{lat:40.718155,lng:-73.354287},"West Seneca":{lat:42.8500585,lng:-78.79975470000001},"White Plains":{lat:41.03398620000001,lng:-73.7629097},Yonkers:{lat:40.9312099,lng:-73.89874689999999}},center:{lat:42.1497,lng:-74.9384}},GA:{counties:{Appling:{lat:31.739712,lng:-82.290103},Atkinson:{lat:31.300562,lng:-82.883614},Bacon:{lat:31.563327,lng:-82.387859},Baker:{lat:31.319622,lng:-84.454857},Baldwin:{lat:33.059532,lng:-83.255362},Banks:{lat:34.351922,lng:-83.498441},Barrow:{lat:33.992009,lng:-83.712303},Bartow:{lat:34.240918,lng:-84.838188},"Ben Hill":{lat:31.740776,lng:-83.14719},Berrien:{lat:31.274308,lng:-83.231906},Bibb:{lat:32.808844,lng:-83.694193},Bleckley:{lat:32.435403,lng:-83.331717},Brantley:{lat:31.197334,lng:-81.982978},Brooks:{lat:30.833696,lng:-83.588971},Bryan:{lat:32.017969,lng:-81.438543},Bulloch:{lat:32.393408,lng:-81.74381},Burke:{lat:33.063737,lng:-82.00389},Butts:{lat:33.290355,lng:-83.958221},Calhoun:{lat:31.521279,lng:-84.62629},Camden:{lat:30.916358,lng:-81.636516},Candler:{lat:32.403986,lng:-82.071446},Carroll:{lat:33.582237,lng:-85.080527},Catoosa:{lat:34.899393,lng:-85.137353},Charlton:{lat:30.779904,lng:-82.139644},Chatham:{lat:31.974756,lng:-81.091768},Chattahoochee:{lat:32.347445,lng:-84.788021},Chattooga:{lat:34.474179,lng:-85.345289},Cherokee:{lat:34.244317,lng:-84.475057},Clarke:{lat:33.952234,lng:-83.36713},Clay:{lat:31.619831,lng:-84.992583},Clayton:{lat:33.552242,lng:-84.412977},Clinch:{lat:30.917653,lng:-82.702614},Cobb:{lat:33.93994,lng:-84.574166},Coffee:{lat:31.549245,lng:-82.844938},Colquitt:{lat:31.189758,lng:-83.769741},Columbia:{lat:33.550556,lng:-82.251342},Cook:{lat:31.152935,lng:-83.429552},Coweta:{lat:33.352897,lng:-84.762138},Crawford:{lat:32.709446,lng:-83.979182},Crisp:{lat:31.914753,lng:-83.753338},Dade:{lat:34.852424,lng:-85.506201},Dawson:{lat:34.442842,lng:-84.173284},Decatur:{lat:30.877961,lng:-84.577744},DeKalb:{lat:33.770661,lng:-84.226343},Dodge:{lat:32.160656,lng:-83.156818},Dooly:{lat:32.151995,lng:-83.807167},Dougherty:{lat:31.535068,lng:-84.214444},Douglas:{lat:33.699317,lng:-84.765944},Early:{lat:31.324191,lng:-84.906723},Echols:{lat:30.7085,lng:-82.836132},Effingham:{lat:32.361711,lng:-81.343337},Elbert:{lat:34.115017,lng:-82.842057},Emanuel:{lat:32.5911,lng:-82.299763},Evans:{lat:32.151902,lng:-81.887618},Fannin:{lat:34.863837,lng:-84.319287},Fayette:{lat:33.412717,lng:-84.493941},Floyd:{lat:34.263677,lng:-85.21373},Forsyth:{lat:34.225143,lng:-84.127336},Franklin:{lat:34.375155,lng:-83.227291},Fulton:{lat:33.790034,lng:-84.468182},Gilmer:{lat:34.690541,lng:-84.453984},Glascock:{lat:33.227491,lng:-82.606913},Glynn:{lat:31.212747,lng:-81.496517},Gordon:{lat:34.509667,lng:-84.873862},Grady:{lat:30.875863,lng:-84.244772},Greene:{lat:33.576836,lng:-83.167103},Gwinnett:{lat:33.959101,lng:-84.022938},Habersham:{lat:34.635108,lng:-83.526406},Hall:{lat:34.317588,lng:-83.818497},Hancock:{lat:33.26922,lng:-83.000465},Haralson:{lat:33.795165,lng:-85.220062},Harris:{lat:32.731549,lng:-84.912432},Hart:{lat:34.348733,lng:-82.96329},Heard:{lat:33.290968,lng:-85.139594},Henry:{lat:33.452881,lng:-84.15444},Houston:{lat:32.458381,lng:-83.662856},Irwin:{lat:31.604306,lng:-83.277037},Jackson:{lat:34.134157,lng:-83.565133},Jasper:{lat:33.314905,lng:-83.687892},"Jeff Davis":{lat:31.811615,lng:-82.636825},Jefferson:{lat:33.051874,lng:-82.41905},Jenkins:{lat:32.794563,lng:-81.971524},Johnson:{lat:32.689831,lng:-82.661354},Jones:{lat:33.020226,lng:-83.562339},Lamar:{lat:33.07446,lng:-84.146721},Lanier:{lat:31.038197,lng:-83.063164},Laurens:{lat:32.39322,lng:-82.926317},Lee:{lat:31.818419,lng:-84.146681},Liberty:{lat:31.807245,lng:-81.457969},Lincoln:{lat:33.792151,lng:-82.448299},Long:{lat:31.749563,lng:-81.74287},Lowndes:{lat:30.83368,lng:-83.268967},Lumpkin:{lat:34.568149,lng:-83.998828},McDuffie:{lat:33.482464,lng:-82.473188},McIntosh:{lat:31.482978,lng:-81.370199},Macon:{lat:32.366216,lng:-84.052162},Madison:{lat:34.128486,lng:-83.203637},Marion:{lat:32.359538,lng:-84.529561},Meriwether:{lat:33.03022,lng:-84.663279},Miller:{lat:31.162908,lng:-84.730386},Mitchell:{lat:31.22894,lng:-84.192407},Monroe:{lat:33.017435,lng:-83.922938},Montgomery:{lat:32.172108,lng:-82.533349},Morgan:{lat:33.593732,lng:-83.492324},Murray:{lat:34.797097,lng:-84.73799},Muscogee:{lat:32.510197,lng:-84.874946},Newton:{lat:33.544046,lng:-83.855189},Oconee:{lat:33.834125,lng:-83.437728},Oglethorpe:{lat:33.866806,lng:-83.074081},Paulding:{lat:33.920903,lng:-84.866979},Peach:{lat:32.571324,lng:-83.831978},Pickens:{lat:34.456621,lng:-84.490256},Pierce:{lat:31.353988,lng:-82.210427},Pike:{lat:33.090769,lng:-84.386627},Polk:{lat:33.995961,lng:-85.186826},Pulaski:{lat:32.238794,lng:-83.481855},Putnam:{lat:33.321061,lng:-83.37179},Quitman:{lat:31.861487,lng:-85.009317},Rabun:{lat:34.883026,lng:-83.404735},Randolph:{lat:31.762651,lng:-84.752311},Richmond:{lat:33.361487,lng:-82.074998},Rockdale:{lat:33.652081,lng:-84.02637},Schley:{lat:32.263441,lng:-84.322724},Screven:{lat:32.744751,lng:-81.617585},Seminole:{lat:30.933894,lng:-84.867592},Spalding:{lat:33.262389,lng:-84.286067},Stephens:{lat:34.552914,lng:-83.290216},Stewart:{lat:32.073225,lng:-84.834912},Sumter:{lat:32.042203,lng:-84.204283},Talbot:{lat:32.704603,lng:-84.530029},Taliaferro:{lat:33.559314,lng:-82.875208},Tattnall:{lat:32.043768,lng:-82.059208},Taylor:{lat:32.554667,lng:-84.251426},Telfair:{lat:31.913639,lng:-82.931062},Terrell:{lat:31.777191,lng:-84.439446},Thomas:{lat:30.864616,lng:-83.919783},Tift:{lat:31.457003,lng:-83.525931},Toombs:{lat:32.126698,lng:-82.332071},Towns:{lat:34.90265,lng:-83.732158},Treutlen:{lat:32.409586,lng:-82.570882},Troup:{lat:33.034482,lng:-85.02836},Turner:{lat:31.718232,lng:-83.628567},Twiggs:{lat:32.665847,lng:-83.425879},Union:{lat:34.83377,lng:-83.989573},Upson:{lat:32.881837,lng:-84.292281},Walker:{lat:34.735827,lng:-85.305385},Walton:{lat:33.782649,lng:-83.734215},Ware:{lat:31.050881,lng:-82.421507},Warren:{lat:33.419169,lng:-82.688012},Washington:{lat:32.971848,lng:-82.798112},Wayne:{lat:31.547845,lng:-81.912376},Webster:{lat:32.046554,lng:-84.553218},Wheeler:{lat:32.109276,lng:-82.738701},White:{lat:34.643677,lng:-83.743713},Whitfield:{lat:34.801726,lng:-84.968541},Wilcox:{lat:31.962717,lng:-83.438262},Wilkes:{lat:33.77904,lng:-82.747922},Wilkinson:{lat:32.804321,lng:-83.175587},Worth:{lat:31.551773,lng:-83.84996}},cities:{Albany:{lat:31.5785074,lng:-84.15574099999999},Alpharetta:{lat:34.0753762,lng:-84.2940899},Athens:{lat:33.955802,lng:-83.3823656},Atlanta:{lat:33.7489954,lng:-84.3879824},Augusta:{lat:33.474246,lng:-82.00967},Columbus:{lat:32.4609764,lng:-84.9877094},Dunwoody:{lat:33.9462125,lng:-84.3346473},"Johns Creek":{lat:34.0289259,lng:-84.198579},Macon:{lat:32.8406946,lng:-83.6324022},Marietta:{lat:33.95260200000001,lng:-84.5499327},"North Atlanta":{lat:33.8651033,lng:-84.3365917},Roswell:{lat:34.02315530000001,lng:-84.3615928},"Sandy Springs":{lat:33.9242688,lng:-84.3785379},Savannah:{lat:32.0835407,lng:-81.09983419999999},Smyrna:{lat:33.8839926,lng:-84.51437609999999},Valdosta:{lat:30.8327022,lng:-83.2784851},"Warner Robins":{lat:32.6086111,lng:-83.6380556}},center:{lat:32.9866,lng:-83.6487}},OR:{counties:{Baker:{lat:44.703427,lng:-117.691933},Benton:{lat:44.490623,lng:-123.426317},Clackamas:{lat:45.160493,lng:-122.195127},Clatsop:{lat:46.024509,lng:-123.705014},Columbia:{lat:45.941932,lng:-123.081079},Coos:{lat:43.184193,lng:-124.092557},Crook:{lat:44.163054,lng:-120.371585},Curry:{lat:42.466671,lng:-124.211407},Deschutes:{lat:43.915118,lng:-121.225575},Douglas:{lat:43.285904,lng:-123.15438},Gilliam:{lat:45.381666,lng:-120.211851},Grant:{lat:44.496326,lng:-119.014057},Harney:{lat:43.064355,lng:-118.985949},"Hood River":{lat:45.511775,lng:-121.655976},Jackson:{lat:42.411782,lng:-122.675797},Jefferson:{lat:44.64379,lng:-121.183021},Josephine:{lat:42.385382,lng:-123.597245},Klamath:{lat:42.683761,lng:-121.646168},Lake:{lat:42.788401,lng:-120.38979},Lane:{lat:43.928276,lng:-122.897678},Lincoln:{lat:44.641076,lng:-123.911183},Linn:{lat:44.494824,lng:-122.543756},Malheur:{lat:43.1877,lng:-117.603976},Marion:{lat:44.900898,lng:-122.57626},Morrow:{lat:45.425496,lng:-119.602311},Multnomah:{lat:45.547693,lng:-122.417173},Polk:{lat:44.904395,lng:-123.397329},Sherman:{lat:45.399216,lng:-120.678512},Tillamook:{lat:45.455743,lng:-123.759327},Umatilla:{lat:45.5912,lng:-118.73388},Union:{lat:45.304047,lng:-117.999136},Wallowa:{lat:45.593753,lng:-117.18558},Wasco:{lat:45.164536,lng:-121.165069},Washington:{lat:45.553542,lng:-123.097615},Wheeler:{lat:44.736411,lng:-120.026875},Yamhill:{lat:45.248138,lng:-123.316117}},cities:{Albany:{lat:44.6365107,lng:-123.1059282},Aloha:{lat:45.4942838,lng:-122.8670454},Beaverton:{lat:45.48706199999999,lng:-122.8037102},Bend:{lat:44.0581728,lng:-121.3153096},Corvallis:{lat:44.5645659,lng:-123.2620435},Eugene:{lat:44.0520691,lng:-123.0867536},Gresham:{lat:45.5001357,lng:-122.4302013},Hillsboro:{lat:45.5228939,lng:-122.989827},Medford:{lat:42.3265152,lng:-122.8755949},Portland:{lat:45.5234515,lng:-122.6762071},Salem:{lat:44.9428975,lng:-123.0350963},Springfield:{lat:44.0462362,lng:-123.0220289},Tigard:{lat:45.4312294,lng:-122.7714861}},center:{lat:44.5672,lng:-122.1269}},NM:{counties:{Bernalillo:{lat:35.054002,lng:-106.669065},Catron:{lat:33.901814,lng:-108.392097},Chaves:{lat:33.361605,lng:-104.469837},Cibola:{lat:34.93205,lng:-108.000255},Colfax:{lat:36.612963,lng:-104.640126},Curry:{lat:34.572984,lng:-103.346055},"De Baca":{lat:34.351429,lng:-104.401527},"Dona Ana":{lat:32.350912,lng:-106.832182},Eddy:{lat:32.457858,lng:-104.306471},Grant:{lat:32.732087,lng:-108.381504},Guadalupe:{lat:34.869782,lng:-104.784968},Harding:{lat:35.863152,lng:-103.829931},Hidalgo:{lat:31.899658,lng:-108.745729},Lea:{lat:32.795687,lng:-103.413271},Lincoln:{lat:33.740941,lng:-105.449083},"Los Alamos":{lat:35.870047,lng:-106.307968},Luna:{lat:32.184482,lng:-107.746639},McKinley:{lat:35.573732,lng:-108.255307},Mora:{lat:35.982841,lng:-104.921898},Otero:{lat:32.588776,lng:-105.781079},Quay:{lat:35.107018,lng:-103.548071},"Rio Arriba":{lat:36.509669,lng:-106.693983},Roosevelt:{lat:34.021457,lng:-103.482725},Sandoval:{lat:35.685073,lng:-106.882618},"San Juan":{lat:36.511625,lng:-108.324578},"San Miguel":{lat:35.476876,lng:-104.803515},"Santa Fe":{lat:35.513722,lng:-105.966441},Sierra:{lat:33.119479,lng:-107.188161},Socorro:{lat:33.991614,lng:-106.939003},Taos:{lat:36.576529,lng:-105.637987},Torrance:{lat:34.634644,lng:-105.846836},Union:{lat:36.488085,lng:-103.475723},Valencia:{lat:34.71684,lng:-106.806582}},cities:{Albuquerque:{lat:35.0844909,lng:-106.6511367},Farmington:{lat:36.72805830000001,lng:-108.2186856},"Las Cruces":{lat:32.3199396,lng:-106.7636538},"Rio Rancho":{lat:35.2327544,lng:-106.6630437},Roswell:{lat:33.3942655,lng:-104.5230242},"Santa Fe":{lat:35.6869752,lng:-105.937799},"South Valley":{lat:35.0100487,lng:-106.6780809}},center:{lat:34.8375,lng:-106.2371}},VA:{counties:{Accomack:{lat:37.765944,lng:-75.757807},Albemarle:{lat:38.024184,lng:-78.553506},Alleghany:{lat:37.787905,lng:-80.008669},Amelia:{lat:37.336131,lng:-77.973218},Amherst:{lat:37.630362,lng:-79.147848},Appomattox:{lat:37.370725,lng:-78.81094},Arlington:{lat:38.878337,lng:-77.100703},Augusta:{lat:38.167807,lng:-79.146682},Bath:{lat:38.068988,lng:-79.732898},Bedford:{lat:37.338156,lng:-79.520705},Bland:{lat:37.130612,lng:-81.125853},Botetourt:{lat:37.553193,lng:-79.805318},Brunswick:{lat:36.764531,lng:-77.860916},Buchanan:{lat:37.26812,lng:-82.038151},Buckingham:{lat:37.573928,lng:-78.529169},Campbell:{lat:37.210151,lng:-79.095429},Caroline:{lat:38.030319,lng:-77.352348},Carroll:{lat:36.732426,lng:-80.728043},"Charles City":{lat:37.361048,lng:-77.054171},Charlotte:{lat:37.014091,lng:-78.661424},Chesterfield:{lat:37.378434,lng:-77.585847},Clarke:{lat:39.115931,lng:-77.992004},Craig:{lat:37.473129,lng:-80.231734},Culpeper:{lat:38.48593,lng:-77.956476},Cumberland:{lat:37.520189,lng:-78.252836},Dickenson:{lat:37.137081,lng:-82.349208},Dinwiddie:{lat:37.073498,lng:-77.635492},Essex:{lat:37.93948,lng:-76.941871},Fairfax:{lat:38.853183,lng:-77.299025},Fauquier:{lat:38.744103,lng:-77.821585},Floyd:{lat:36.931438,lng:-80.350309},Fluvanna:{lat:37.830606,lng:-78.284445},Franklin:{lat:36.684014,lng:-76.941396},Frederick:{lat:39.203637,lng:-78.263916},Giles:{lat:37.31193,lng:-80.717178},Gloucester:{lat:37.403541,lng:-76.523505},Goochland:{lat:37.724166,lng:-77.914273},Grayson:{lat:36.656303,lng:-81.225337},Greene:{lat:38.297981,lng:-78.470163},Greensville:{lat:36.680225,lng:-77.560261},Halifax:{lat:36.766461,lng:-78.939614},Hanover:{lat:37.760166,lng:-77.490992},Henrico:{lat:37.437521,lng:-77.300333},Henry:{lat:36.620593,lng:-79.980584},Highland:{lat:38.356672,lng:-79.567958},"Isle of Wight":{lat:36.901418,lng:-76.707569},"James City":{lat:37.324427,lng:-76.778319},"King and Queen":{lat:37.720995,lng:-76.89109},"King George":{lat:38.277179,lng:-77.162702},"King William":{lat:37.70826,lng:-77.091054},Lancaster:{lat:37.703831,lng:-76.413199},Lee:{lat:36.702162,lng:-83.130334},Loudoun:{lat:39.08113,lng:-77.638857},Louisa:{lat:37.971681,lng:-77.959178},Lunenburg:{lat:36.945757,lng:-78.242313},Madison:{lat:38.412059,lng:-78.276961},Mathews:{lat:37.425348,lng:-76.268808},Mecklenburg:{lat:36.687256,lng:-78.368959},Middlesex:{lat:37.606828,lng:-76.527958},Montgomery:{lat:37.174885,lng:-80.387314},Nelson:{lat:37.790016,lng:-78.879394},"New Kent":{lat:37.498974,lng:-76.993339},Northampton:{lat:37.302629,lng:-75.923868},Northumberland:{lat:37.856974,lng:-76.379687},Nottoway:{lat:37.143696,lng:-78.052162},Orange:{lat:38.250439,lng:-78.00998},Page:{lat:38.623751,lng:-78.490471},Patrick:{lat:36.667327,lng:-80.286141},Pittsylvania:{lat:36.821721,lng:-79.398502},Powhatan:{lat:37.549404,lng:-77.912855},"Prince Edward":{lat:37.224881,lng:-78.432957},"Prince George":{lat:37.187326,lng:-77.220993},"Prince William":{lat:38.702332,lng:-77.478887},Pulaski:{lat:37.063385,lng:-80.713444},Rappahannock:{lat:38.684522,lng:-78.168824},Richmond:{lat:37.531399,lng:-77.476009},Roanoke:{lat:37.27783,lng:-79.958472},Rockbridge:{lat:37.814517,lng:-79.447754},Rockingham:{lat:38.511257,lng:-78.876307},Russell:{lat:36.93342,lng:-82.095934},Scott:{lat:36.712778,lng:-82.613627},Shenandoah:{lat:38.856204,lng:-78.573987},Smyth:{lat:36.842318,lng:-81.539786},Southampton:{lat:36.720173,lng:-77.103856},Spotsylvania:{lat:38.182311,lng:-77.65628},Stafford:{lat:38.418933,lng:-77.459043},Surry:{lat:37.119761,lng:-76.880172},Sussex:{lat:36.926645,lng:-77.259732},Tazewell:{lat:37.125395,lng:-81.562924},Warren:{lat:38.908187,lng:-78.207131},Washington:{lat:36.747813,lng:-81.950291},Westmoreland:{lat:38.109191,lng:-76.80417},Wise:{lat:36.974561,lng:-82.62156},Wythe:{lat:36.901471,lng:-81.084209},York:{lat:37.220914,lng:-76.395533},Alexandria:{lat:38.818343,lng:-77.082026},Bristol:{lat:36.616954,lng:-82.157564},"Buena Vista":{lat:37.731663,lng:-79.356375},Charlottesville:{lat:38.037658,lng:-78.485381},Chesapeake:{lat:36.679376,lng:-76.301788},"Colonial Heights":{lat:37.261685,lng:-77.396804},Covington:{lat:37.778143,lng:-79.986039},Danville:{lat:36.583334,lng:-79.408071},Emporia:{lat:36.696182,lng:-77.535975},"Falls Church":{lat:38.883787,lng:-77.174639},Fredericksburg:{lat:38.299272,lng:-77.486658},Galax:{lat:36.66564,lng:-80.914308},Hampton:{lat:37.04803,lng:-76.297149},Harrisonburg:{lat:38.436013,lng:-78.874197},Hopewell:{lat:37.29101,lng:-77.298944},Lexington:{lat:37.782332,lng:-79.44432},Lynchburg:{lat:37.399016,lng:-79.195458},Manassas:{lat:38.747561,lng:-77.484727},"Manassas Park":{lat:38.768991,lng:-77.448681},Martinsville:{lat:36.683527,lng:-79.863648},"Newport News":{lat:37.075978,lng:-76.521719},Norfolk:{lat:36.923015,lng:-76.244641},Norton:{lat:36.931549,lng:-82.625996},Petersburg:{lat:37.20473,lng:-77.392368},Poquoson:{lat:37.12836,lng:-76.303534},Portsmouth:{lat:36.85943,lng:-76.356269},Radford:{lat:37.120036,lng:-80.557048},Salem:{lat:37.285333,lng:-80.055241},Staunton:{lat:38.158056,lng:-79.061501},Suffolk:{lat:36.697157,lng:-76.634781},"Virginia Beach":{lat:36.779322,lng:-76.02402},Waynesboro:{lat:38.067157,lng:-78.90142},Williamsburg:{lat:37.269293,lng:-76.706717},Winchester:{lat:39.173869,lng:-78.176356}},cities:{Alexandria:{lat:38.8048355,lng:-77.0469214},Arlington:{lat:38.8799697,lng:-77.1067698},Ashburn:{lat:39.0414079,lng:-77.48101799999999},Blacksburg:{lat:37.2295733,lng:-80.4139393},Centreville:{lat:38.8403909,lng:-77.42887689999999},Charlottesville:{lat:38.0293059,lng:-78.47667810000002},Chesapeake:{lat:36.7682088,lng:-76.2874927},"Dale City":{lat:38.6370622,lng:-77.31109459999999},Danville:{lat:36.5859718,lng:-79.39502279999999
},Hampton:{lat:37.0298687,lng:-76.34522179999999},Harrisonburg:{lat:38.4495688,lng:-78.8689155},"Lake Ridge":{lat:38.68789400000001,lng:-77.29776180000002},Leesburg:{lat:39.1156615,lng:-77.56360149999999},"Linton Hall":{lat:38.7598381,lng:-77.5749905},Lynchburg:{lat:37.4137536,lng:-79.14224639999999},McLean:{lat:38.9338676,lng:-77.1772604},"Newport News":{lat:37.0870821,lng:-76.4730122},Norfolk:{lat:36.8507689,lng:-76.28587259999999},Portsmouth:{lat:36.8354258,lng:-76.2982742},Reston:{lat:38.9586307,lng:-77.35700279999999},Richmond:{lat:37.5407246,lng:-77.4360481},Roanoke:{lat:37.2709704,lng:-79.9414266},Suffolk:{lat:36.7282054,lng:-76.5835621},Tuckahoe:{lat:37.5901463,lng:-77.5563761},"Virginia Beach":{lat:36.8529263,lng:-75.97798499999999}},center:{lat:37.768,lng:-78.2057}},LA:{counties:{Acadia:{lat:30.291497,lng:-92.411037},Allen:{lat:30.652744,lng:-92.819605},Ascension:{lat:30.202946,lng:-90.910023},Assumption:{lat:29.899884,lng:-91.050528},Avoyelles:{lat:31.085094,lng:-91.993798},Beauregard:{lat:30.645018,lng:-93.340253},Bienville:{lat:32.344268,lng:-93.061513},Bossier:{lat:32.696202,lng:-93.617977},Caddo:{lat:32.577195,lng:-93.882423},Calcasieu:{lat:30.229559,lng:-93.358015},Caldwell:{lat:32.101244,lng:-92.11418},Cameron:{lat:29.871989,lng:-93.165437},Catahoula:{lat:31.666517,lng:-91.846703},Claiborne:{lat:32.827585,lng:-92.991125},Concordia:{lat:31.469806,lng:-91.626314},"De Soto":{lat:32.059248,lng:-93.740797},"East Baton Rouge":{lat:30.544002,lng:-91.093174},"East Carroll":{lat:32.73017,lng:-91.234141},"East Feliciana":{lat:30.839784,lng:-91.043434},Evangeline:{lat:30.720693,lng:-92.404086},Franklin:{lat:32.138279,lng:-91.672101},Grant:{lat:31.597787,lng:-92.561716},Iberia:{lat:29.606013,lng:-91.842706},Iberville:{lat:30.288394,lng:-91.36315},Jackson:{lat:32.30448,lng:-92.556672},Jefferson:{lat:29.5033,lng:-90.036231},"Jefferson Davis":{lat:30.269529,lng:-92.816221},Lafayette:{lat:30.206507,lng:-92.06417},Lafourche:{lat:29.491993,lng:-90.394849},"La Salle":{lat:31.680836,lng:-92.161809},Lincoln:{lat:32.601148,lng:-92.662082},Livingston:{lat:30.440419,lng:-90.727474},Madison:{lat:32.365824,lng:-91.240729},Morehouse:{lat:32.820008,lng:-91.800399},Natchitoches:{lat:31.734982,lng:-93.086106},Orleans:{lat:30.068636,lng:-89.939007},Ouachita:{lat:32.477495,lng:-92.154798},Plaquemines:{lat:29.402337,lng:-89.298489},"Pointe Coupee":{lat:30.708319,lng:-91.604621},Rapides:{lat:31.193204,lng:-92.535953},"Red River":{lat:32.101213,lng:-93.34905},Richland:{lat:32.418121,lng:-91.758375},Sabine:{lat:31.560209,lng:-93.559228},"St. Bernard":{lat:29.91811,lng:-89.263494},"St. Charles":{lat:29.913833,lng:-90.359314},"St. Helena":{lat:30.821423,lng:-90.70935},"St. James":{lat:30.02482,lng:-90.793956},"St. John the Baptist":{lat:30.117471,lng:-90.504677},"St. Landry":{lat:30.583441,lng:-91.989275},"St. Martin":{lat:30.121433,lng:-91.611481},"St. Mary":{lat:29.629349,lng:-91.463804},"St. Tammany":{lat:30.410022,lng:-89.951962},Tangipahoa:{lat:30.621581,lng:-90.406633},Tensas:{lat:32.001489,lng:-91.342576},Terrebonne:{lat:29.333266,lng:-90.844191},Union:{lat:32.829349,lng:-92.37565},Vermilion:{lat:29.786872,lng:-92.29009},Vernon:{lat:31.110563,lng:-93.18152},Washington:{lat:30.852144,lng:-90.046253},Webster:{lat:32.732152,lng:-93.339825},"West Baton Rouge":{lat:30.464052,lng:-91.309808},"West Carroll":{lat:32.79248,lng:-91.451998},"West Feliciana":{lat:30.872701,lng:-91.421008},Winn:{lat:31.941187,lng:-92.641269}},cities:{Alexandria:{lat:31.3112936,lng:-92.4451371},"Baton Rouge":{lat:30.4582829,lng:-91.1403196},"Bossier City":{lat:32.5159852,lng:-93.7321228},Kenner:{lat:29.9940924,lng:-90.2417434},Lafayette:{lat:30.2240897,lng:-92.0198427},"Lake Charles":{lat:30.2265949,lng:-93.2173758},Metairie:{lat:29.9840922,lng:-90.1528519},Monroe:{lat:32.5093109,lng:-92.1193012},"New Orleans":{lat:29.95106579999999,lng:-90.0715323},Shreveport:{lat:32.5251516,lng:-93.7501789}},center:{lat:31.1801,lng:-91.8749}},PA:{counties:{Adams:{lat:39.869471,lng:-77.21773},Allegheny:{lat:40.46892,lng:-79.98092},Armstrong:{lat:40.812379,lng:-79.464128},Beaver:{lat:40.68414,lng:-80.350721},Bedford:{lat:39.997115,lng:-78.48998},Berks:{lat:40.413957,lng:-75.92686},Blair:{lat:40.497926,lng:-78.31064},Bradford:{lat:41.791495,lng:-76.502124},Bucks:{lat:40.336887,lng:-75.10706},Butler:{lat:40.913834,lng:-79.91896},Cambria:{lat:40.494127,lng:-78.715284},Cameron:{lat:41.438289,lng:-78.198315},Carbon:{lat:40.917833,lng:-75.709428},Centre:{lat:40.90916,lng:-77.84783},Chester:{lat:39.973965,lng:-75.749732},Clarion:{lat:41.198239,lng:-79.420404},Clearfield:{lat:41.000249,lng:-78.473749},Clinton:{lat:41.245301,lng:-77.649141},Columbia:{lat:41.045517,lng:-76.40426},Crawford:{lat:41.68684,lng:-80.107811},Cumberland:{lat:40.164782,lng:-77.26344},Dauphin:{lat:40.412565,lng:-76.792634},Delaware:{lat:39.91667,lng:-75.398786},Elk:{lat:41.427334,lng:-78.653938},Erie:{lat:42.117952,lng:-80.096386},Fayette:{lat:39.914115,lng:-79.644586},Forest:{lat:41.513304,lng:-79.249705},Franklin:{lat:39.926686,lng:-77.724485},Fulton:{lat:39.910751,lng:-78.122617},Greene:{lat:39.848983,lng:-80.225694},Huntingdon:{lat:40.422321,lng:-77.968584},Indiana:{lat:40.651432,lng:-79.087545},Jefferson:{lat:41.130287,lng:-78.999044},Juniata:{lat:40.530673,lng:-77.400438},Lackawanna:{lat:41.44025,lng:-75.609587},Lancaster:{lat:40.041992,lng:-76.250198},Lawrence:{lat:40.992735,lng:-80.334446},Lebanon:{lat:40.367344,lng:-76.458009},Lehigh:{lat:40.614241,lng:-75.590627},Luzerne:{lat:41.172787,lng:-75.976035},Lycoming:{lat:41.343624,lng:-77.055253},McKean:{lat:41.81459,lng:-78.572463},Mercer:{lat:41.300014,lng:-80.252786},Mifflin:{lat:40.61189,lng:-77.620661},Monroe:{lat:41.056233,lng:-75.329037},Montgomery:{lat:40.209999,lng:-75.370201},Montour:{lat:41.029261,lng:-76.665259},Northampton:{lat:40.752791,lng:-75.307447},Northumberland:{lat:40.851524,lng:-76.709877},Perry:{lat:40.39778,lng:-77.266328},Philadelphia:{lat:40.009376,lng:-75.133346},Pike:{lat:41.325949,lng:-75.031514},Potter:{lat:41.748222,lng:-77.894735},Schuylkill:{lat:40.70369,lng:-76.2178},Snyder:{lat:40.755348,lng:-77.072954},Somerset:{lat:39.981297,lng:-79.028486},Sullivan:{lat:41.43979,lng:-76.511525},Susquehanna:{lat:41.819665,lng:-75.800969},Tioga:{lat:41.766859,lng:-77.257288},Union:{lat:40.962179,lng:-77.055475},Venango:{lat:41.40198,lng:-79.754418},Warren:{lat:41.843669,lng:-79.313173},Washington:{lat:40.200005,lng:-80.252132},Wayne:{lat:41.646589,lng:-75.292485},Westmoreland:{lat:40.311068,lng:-79.466688},Wyoming:{lat:41.525137,lng:-76.00878},York:{lat:39.921839,lng:-76.728446}},cities:{Allentown:{lat:40.6084305,lng:-75.4901833},Altoona:{lat:40.5186809,lng:-78.3947359},Bethlehem:{lat:40.6259316,lng:-75.37045789999999},Erie:{lat:42.12922409999999,lng:-80.085059},Harrisburg:{lat:40.2737002,lng:-76.8844179},Lancaster:{lat:40.0378755,lng:-76.3055144},Levittown:{lat:40.1551096,lng:-74.8287747},Philadelphia:{lat:39.952335,lng:-75.16378900000001},"California-Kirkbride":{lat:40.4600435,lng:-80.0213538},Pittsburgh:{lat:40.44062479999999,lng:-79.9958864},Reading:{lat:40.3356483,lng:-75.9268747},Scranton:{lat:41.408969,lng:-75.66241219999999},"State College":{lat:40.7933949,lng:-77.8600012},"Wilkes-Barre":{lat:41.2459149,lng:-75.88130749999999},York:{lat:39.9625984,lng:-76.727745}},center:{lat:40.5773,lng:-77.264}},IA:{counties:{Adair:{lat:41.328528,lng:-94.478164},Adams:{lat:41.021656,lng:-94.696906},Allamakee:{lat:43.274964,lng:-91.382751},Appanoose:{lat:40.744683,lng:-92.870345},Audubon:{lat:41.679178,lng:-94.904312},Benton:{lat:42.092547,lng:-92.05763},"Black Hawk":{lat:42.472888,lng:-92.306059},Boone:{lat:42.038601,lng:-93.939138},Bremer:{lat:42.78089,lng:-92.327586},Buchanan:{lat:42.470328,lng:-91.838666},"Buena Vista":{lat:42.741522,lng:-95.141433},Butler:{lat:42.734708,lng:-92.780066},Calhoun:{lat:42.38617,lng:-94.643683},Carroll:{lat:42.039492,lng:-94.867647},Cass:{lat:41.333824,lng:-94.933302},Cedar:{lat:41.772355,lng:-91.13219},"Cerro Gordo":{lat:43.075171,lng:-93.251266},Cherokee:{lat:42.742738,lng:-95.633262},Chickasaw:{lat:43.059741,lng:-92.31721},Clarke:{lat:41.029191,lng:-93.784096},Clay:{lat:43.079822,lng:-95.149726},Clayton:{lat:42.840998,lng:-91.323511},Clinton:{lat:41.898073,lng:-90.534243},Crawford:{lat:42.043119,lng:-95.38909},Dallas:{lat:41.685321,lng:-94.040707},Davis:{lat:40.748089,lng:-92.410345},Decatur:{lat:40.736379,lng:-93.78458},Delaware:{lat:42.473003,lng:-91.359443},"Des Moines":{lat:40.915339,lng:-91.186925},Dickinson:{lat:43.389611,lng:-95.196057},Dubuque:{lat:42.463481,lng:-90.878771},Emmet:{lat:43.377984,lng:-94.66937},Fayette:{lat:42.86445,lng:-91.839373},Floyd:{lat:43.052741,lng:-92.787367},Franklin:{lat:42.736549,lng:-93.271425},Fremont:{lat:40.743726,lng:-95.599516},Greene:{lat:42.042494,lng:-94.388703},Grundy:{lat:42.403323,lng:-92.790261},Guthrie:{lat:41.683573,lng:-94.501272},Hamilton:{lat:42.390768,lng:-93.709198},Hancock:{lat:43.075411,lng:-93.743697},Hardin:{lat:42.389955,lng:-93.241081},Harrison:{lat:41.688584,lng:-95.827149},Henry:{lat:40.985864,lng:-91.54427},Howard:{lat:43.365313,lng:-92.321908},Humboldt:{lat:42.782221,lng:-94.202775},Ida:{lat:42.39186,lng:-95.507421},Iowa:{lat:41.683918,lng:-92.059123},Jackson:{lat:42.164281,lng:-90.574597},Jasper:{lat:41.685686,lng:-93.052971},Jefferson:{lat:41.00688,lng:-91.967137},Johnson:{lat:41.668737,lng:-91.588812},Jones:{lat:42.125118,lng:-91.116914},Keokuk:{lat:41.331182,lng:-92.167721},Kossuth:{lat:43.212478,lng:-94.213983},Lee:{lat:40.647588,lng:-91.477157},Linn:{lat:42.077951,lng:-91.597674},Louisa:{lat:41.218211,lng:-91.256994},Lucas:{lat:41.033344,lng:-93.331467},Lyon:{lat:43.38358,lng:-96.207201},Madison:{lat:41.330622,lng:-94.015184},Mahaska:{lat:41.330797,lng:-92.636366},Marion:{lat:41.331455,lng:-93.093849},Marshall:{lat:42.041691,lng:-92.981452},Mills:{lat:41.033703,lng:-95.619101},Mitchell:{lat:43.348564,lng:-92.784466},Monona:{lat:42.049432,lng:-95.956566},Monroe:{lat:41.028847,lng:-92.869642},Montgomery:{lat:41.021735,lng:-95.15779},Muscatine:{lat:41.483776,lng:-91.118699},"O'Brien":{lat:43.083746,lng:-95.625624},Osceola:{lat:43.378542,lng:-95.633788},Page:{lat:40.73909,lng:-95.14429},"Palo Alto":{lat:43.075854,lng:-94.667297},Plymouth:{lat:42.737585,lng:-96.215864},Pocahontas:{lat:42.734033,lng:-94.678279},Polk:{lat:41.684281,lng:-93.56972},Pottawattamie:{lat:41.340184,lng:-95.544905},Poweshiek:{lat:41.684526,lng:-92.522882},Ringgold:{lat:40.735334,lng:-94.244251},Sac:{lat:42.387526,lng:-95.105224},Scott:{lat:41.641679,lng:-90.62229},Shelby:{lat:41.679014,lng:-95.308917},Sioux:{lat:43.082854,lng:-96.177929},Story:{lat:42.037538,lng:-93.466093},Tama:{lat:42.074848,lng:-92.529412},Taylor:{lat:40.737949,lng:-94.697108},Union:{lat:41.02855,lng:-94.245091},"Van Buren":{lat:40.754117,lng:-91.952943},Wapello:{lat:41.031263,lng:-92.409482},Warren:{lat:41.336769,lng:-93.564366},Washington:{lat:41.329401,lng:-91.725052},Wayne:{lat:40.739983,lng:-93.332613},Webster:{lat:42.434397,lng:-94.179157},Winnebago:{lat:43.378124,lng:-93.743488},Winneshiek:{lat:43.292989,lng:-91.850788},Woodbury:{lat:42.39322,lng:-96.053296},Worth:{lat:43.373491,lng:-93.248533},Wright:{lat:42.733007,lng:-93.734735}},cities:{Ames:{lat:42.02335,lng:-93.62562199999999},Ankeny:{lat:41.7266667,lng:-93.6041667},"Cedar Rapids":{lat:41.9778795,lng:-91.6656232},"Council Bluffs":{lat:41.2619444,lng:-95.8608333},Davenport:{lat:41.5236437,lng:-90.5776367},"Des Moines":{lat:41.6005448,lng:-93.6091064},Dubuque:{lat:42.5005583,lng:-90.66457179999999},"Iowa City":{lat:41.6611277,lng:-91.5301683},"Sioux City":{lat:42.4999942,lng:-96.40030689999999},Urbandale:{lat:41.6266555,lng:-93.71216559999999},Waterloo:{lat:42.4927641,lng:-92.34296309999999},"West Des Moines":{lat:41.5772115,lng:-93.711332}},center:{lat:42.0046,lng:-93.214}},AK:{counties:{"Aleutians East":{lat:55.243722,lng:-161.950749},"Aleutians West":{lat:51.959447,lng:-178.338813},Anchorage:{lat:61.177549,lng:-149.274354},Bethel:{lat:60.928916,lng:-160.15335},"Bristol Bay":{lat:58.731373,lng:-156.986612},Denali:{lat:63.682732,lng:-150.026719},Dillingham:{lat:59.824816,lng:-158.602233},"Fairbanks North Star":{lat:64.690832,lng:-146.599867},Haines:{lat:59.099905,lng:-135.578102},"Hoonah-Angoon":{lat:58.076434,lng:-135.1851},Juneau:{lat:58.3727,lng:-134.178781},"Kenai Peninsula":{lat:60.366373,lng:-152.321973},"Ketchikan Gateway":{lat:55.449938,lng:-131.106685},"Kodiak Island":{lat:57.553611,lng:-153.630911},"Lake and Peninsula":{lat:58.205065,lng:-156.705188},"Matanuska-Susitna":{lat:62.182174,lng:-149.407974},Nome:{lat:64.783686,lng:-164.188912},"North Slope":{lat:69.449343,lng:-153.47283},"Northwest Arctic":{lat:67.005066,lng:-160.021086},Petersburg:{lat:56.639612,lng:-133.527996},"Prince of Wales-Hyder":{lat:55.415683,lng:-132.875734},Sitka:{lat:57.142509,lng:-135.332624},Skagway:{lat:59.575097,lng:-135.335418},"Southeast Fairbanks":{lat:63.864997,lng:-143.218628},"Valdez-Cordova":{lat:61.34984,lng:-145.023141},"Wade Hampton":{lat:62.283174,lng:-163.19095},Wrangell:{lat:56.279121,lng:-132.040326},Yakutat:{lat:59.999083,lng:-140.239593},"Yukon-Koyukuk":{lat:65.376131,lng:-151.576855}},cities:{Anchorage:{lat:61.2180556,lng:-149.9002778}},center:{lat:61.385,lng:-152.2683}},IN:{counties:{Adams:{lat:40.745733,lng:-84.936131},Allen:{lat:41.091855,lng:-85.07223},Bartholomew:{lat:39.205843,lng:-85.897999},Benton:{lat:40.608253,lng:-87.315479},Blackford:{lat:40.472672,lng:-85.32373},Boone:{lat:40.050892,lng:-86.469014},Brown:{lat:39.192585,lng:-86.23941},Carroll:{lat:40.58498,lng:-86.565141},Cass:{lat:40.753799,lng:-86.355169},Clark:{lat:38.476217,lng:-85.711122},Clay:{lat:39.393951,lng:-87.115837},Clinton:{lat:40.305944,lng:-86.477567},Crawford:{lat:38.289433,lng:-86.440871},Daviess:{lat:38.696155,lng:-87.076988},Dearborn:{lat:39.151491,lng:-84.97346},Decatur:{lat:39.30598,lng:-85.499831},DeKalb:{lat:41.401189,lng:-85.000185},Delaware:{lat:40.227165,lng:-85.398856},Dubois:{lat:38.373344,lng:-86.873385},Elkhart:{lat:41.600693,lng:-85.863986},Fayette:{lat:39.639655,lng:-85.185032},Floyd:{lat:38.317937,lng:-85.911474},Fountain:{lat:40.121282,lng:-87.234806},Franklin:{lat:39.409762,lng:-85.066964},Fulton:{lat:41.050384,lng:-86.265006},Gibson:{lat:38.317413,lng:-87.580566},Grant:{lat:40.515758,lng:-85.654946},Greene:{lat:39.0486,lng:-87.005245},Hamilton:{lat:40.04987,lng:-86.020586},Hancock:{lat:39.822604,lng:-85.772904},Harrison:{lat:38.18644,lng:-86.103681},Hendricks:{lat:39.768749,lng:-86.510287},Henry:{lat:39.929576,lng:-85.397338},Howard:{lat:40.483537,lng:-86.114118},Huntington:{lat:40.826394,lng:-85.478598},Jackson:{lat:38.911957,lng:-86.042516},Jasper:{lat:41.017688,lng:-87.118814},Jay:{lat:40.434972,lng:-85.00338},Jefferson:{lat:38.783604,lng:-85.44009},Jennings:{lat:38.996234,lng:-85.628111},Johnson:{lat:39.495986,lng:-86.0946},Knox:{lat:38.688663,lng:-87.420182},Kosciusko:{lat:41.244293,lng:-85.861575},LaGrange:{lat:41.642468,lng:-85.426302},Lake:{lat:41.472239,lng:-87.374337},LaPorte:{lat:41.549011,lng:-86.744729},Lawrence:{lat:38.839815,lng:-86.48782},Madison:{lat:40.166203,lng:-85.722454},Marion:{lat:39.782976,lng:-86.135794},Marshall:{lat:41.325003,lng:-86.269036},Martin:{lat:38.705322,lng:-86.801847},Miami:{lat:40.772881,lng:-86.044259},Monroe:{lat:39.160751,lng:-86.523325},Montgomery:{lat:40.040296,lng:-86.892715},Morgan:{lat:39.482646,lng:-86.447457},Newton:{lat:40.962399,lng:-87.402172},Noble:{lat:41.400794,lng:-85.41785},Ohio:{lat:38.940527,lng:-84.964299},Orange:{lat:38.547381,lng:-86.489257},Owen:{lat:39.317339,lng:-86.838845},Parke:{lat:39.77425,lng:-87.19695},Perry:{lat:38.081436,lng:-86.62654},Pike:{lat:38.397898,lng:-87.232532},Porter:{lat:41.509922,lng:-87.071308},Posey:{lat:38.027614,lng:-87.868653},Pulaski:{lat:41.045272,lng:-86.692538},Putnam:{lat:39.665545,lng:-86.853325},Randolph:{lat:40.164414,lng:-85.005004},Ripley:{lat:39.10023,lng:-85.260541},Rush:{lat:39.622312,lng:-85.466527},"St. Joseph":{lat:41.617699,lng:-86.288159},Scott:{lat:38.679431,lng:-85.751898},Shelby:{lat:39.524135,lng:-85.792174},Spencer:{lat:38.009789,lng:-87.010645},Starke:{lat:41.28322,lng:-86.64757},Steuben:{lat:41.643437,lng:-85.002467},Sullivan:{lat:39.089225,lng:-87.415843},Switzerland:{lat:38.825846,lng:-85.029679},Tippecanoe:{lat:40.38926,lng:-86.893943},Tipton:{lat:40.310229,lng:-86.056207},Union:{lat:39.623111,lng:-84.925152},Vanderburgh:{lat:38.02007,lng:-87.586166},Vermillion:{lat:39.854045,lng:-87.462071},Vigo:{lat:39.429143,lng:-87.390375},Wabash:{lat:40.843717,lng:-85.795175},Warren:{lat:40.352658,lng:-87.375847},Warrick:{lat:38.097764,lng:-87.272023},Washington:{lat:38.600613,lng:-86.104751},Wayne:{lat:39.863091,lng:-85.006735},Wells:{lat:40.735273,lng:-85.212974},White:{lat:40.75095,lng:-86.864293},Whitley:{lat:41.136426,lng:-85.501892}},cities:{Anderson:{lat:40.1053196,lng:-85.6802541},Bloomington:{lat:39.165325,lng:-86.52638569999999},Carmel:{lat:39.978371,lng:-86.1180435},Columbus:{lat:39.2014404,lng:-85.9213796},Elkhart:{lat:41.6819935,lng:-85.9766671},Evansville:{lat:37.9715592,lng:-87.5710898},Fishers:{lat:39.9555928,lng:-86.0138729},"Fort Wayne":{lat:41.079273,lng:-85.1393513},Gary:{lat:41.5933696,lng:-87.3464271},Greenwood:{lat:39.6136578,lng:-86.10665259999999},Hammond:{lat:41.5833688,lng:-87.5000412},Indianapolis:{lat:39.7685155,lng:-86.1580736},Jeffersonville:{lat:38.2775702,lng:-85.7371847},Kokomo:{lat:40.486427,lng:-86.13360329999999},Lafayette:{lat:40.4167022,lng:-86.87528689999999},Lawrence:{lat:39.8386516,lng:-86.0252612},Mishawaka:{lat:41.6619927,lng:-86.15861559999999},Muncie:{lat:40.1933767,lng:-85.3863599},Noblesville:{lat:40.0455917,lng:-86.0085955},"South Bend":{lat:41.6833813,lng:-86.25000659999999},"Terre Haute":{lat:39.4667034,lng:-87.41390919999999}},center:{lat:39.8647,lng:-86.2604}},MI:{counties:{Alcona:{lat:44.682535,lng:-82.83408},Alger:{lat:47.080077,lng:-86.564108},Allegan:{lat:42.595788,lng:-86.634745},Alpena:{lat:44.894954,lng:-83.426574},Antrim:{lat:45.005457,lng:-85.175625},Arenac:{lat:44.03687,lng:-83.740675},Baraga:{lat:46.696068,lng:-88.356022},Barry:{lat:42.582811,lng:-85.31455},Bay:{lat:43.699711,lng:-83.978701},Benzie:{lat:44.648621,lng:-86.494317},Berrien:{lat:41.792639,lng:-86.741822},Branch:{lat:41.918585,lng:-85.066523},Calhoun:{lat:42.24299,lng:-85.012385},Cass:{lat:41.91624,lng:-85.999457},Charlevoix:{lat:45.513164,lng:-85.450392},Cheboygan:{lat:45.47612,lng:-84.495271},Chippewa:{lat:46.321819,lng:-84.52063},Clare:{lat:43.991137,lng:-84.838325},Clinton:{lat:42.950455,lng:-84.591695},Crawford:{lat:44.680208,lng:-84.611132},Delta:{lat:45.805101,lng:-86.901373},Dickinson:{lat:46.012823,lng:-87.866119},Eaton:{lat:42.589614,lng:-84.846524},Emmet:{lat:45.590094,lng:-84.986822},Genesee:{lat:43.021077,lng:-83.706372},Gladwin:{lat:43.98975,lng:-84.389816},Gogebic:{lat:46.488054,lng:-89.788314},"Grand Traverse":{lat:44.718688,lng:-85.553848},Gratiot:{lat:43.292326,lng:-84.60469},Hillsdale:{lat:41.864475,lng:-84.642409},Houghton:{lat:46.998305,lng:-88.652066},Huron:{lat:43.907616,lng:-82.857045},Ingham:{lat:42.603534,lng:-84.373811},Ionia:{lat:42.94465,lng:-85.073766},Iosco:{lat:44.329482,lng:-82.849447},Iron:{lat:46.170249,lng:-88.540409},Isabella:{lat:43.645233,lng:-84.839425},Jackson:{lat:42.248474,lng:-84.420868},Kalamazoo:{lat:42.246266,lng:-85.532854},Kalkaska:{lat:44.678881,lng:-85.088992},Kent:{lat:43.032497,lng:-85.547446},Keweenaw:{lat:47.681981,lng:-88.148802},Lake:{lat:43.995187,lng:-85.8114},Lapeer:{lat:43.088633,lng:-83.224325},Leelanau:{lat:45.146182,lng:-86.051574},Lenawee:{lat:41.895915,lng:-84.066853},Livingston:{lat:42.602532,lng:-83.911718},Luce:{lat:46.940602,lng:-85.582368},Mackinac:{lat:46.167981,lng:-85.303756},Macomb:{lat:42.671467,lng:-82.910869},Manistee:{lat:44.350385,lng:-86.602967},Marquette:{lat:46.656597,lng:-87.584028},Mason:{lat:43.996636,lng:-86.750814},Mecosta:{lat:43.635295,lng:-85.332751},Menominee:{lat:45.544174,lng:-87.509892},Midland:{lat:43.648378,lng:-84.37922},Missaukee:{lat:44.325424,lng:-85.085471},Monroe:{lat:41.916097,lng:-83.487106},Montcalm:{lat:43.312782,lng:-85.149468},Montmorency:{lat:45.024134,lng:-84.130107},Muskegon:{lat:43.289258,lng:-86.751892},Newaygo:{lat:43.562709,lng:-85.791423},Oakland:{lat:42.660452,lng:-83.38421},Oceana:{lat:43.647255,lng:-86.807575},Ogemaw:{lat:44.33328,lng:-84.128073},Ontonagon:{lat:47.216604,lng:-89.500461},Osceola:{lat:43.997552,lng:-85.322283},Oscoda:{lat:44.685121,lng:-84.124894},Otsego:{lat:45.021794,lng:-84.576597},Ottawa:{lat:42.942346,lng:-86.655342},"Presque Isle":{lat:45.489515,lng:-83.384019},Roscommon:{lat:44.339517,lng:-84.611272},Saginaw:{lat:43.328267,lng:-84.05541},"St. Clair":{lat:42.928804,lng:-82.668914},"St. Joseph":{lat:41.911488,lng:-85.52287},Sanilac:{lat:43.449155,lng:-82.642815},Schoolcraft:{lat:46.020758,lng:-86.199352},Shiawassee:{lat:42.951545,lng:-84.146352},Tuscola:{lat:43.487902,lng:-83.436618},"Van Buren":{lat:42.283986,lng:-86.305697},Washtenaw:{lat:42.252327,lng:-83.844634},Wayne:{lat:42.284664,lng:-83.261953},Wexford:{lat:44.331375,lng:-85.570046}},cities:{"Ann Arbor":{lat:42.3076493,lng:-83.8473015},"Battle Creek":{lat:42.3211522,lng:-85.17971419999999},Dearborn:{lat:42.3222599,lng:-83.17631449999999},"Dearborn Heights":{lat:42.3369816,lng:-83.27326269999999},Detroit:{lat:42.331427,lng:-83.0457538},"East Lansing":{lat:42.7369792,lng:-84.48386540000001},"Farmington Hills":{lat:42.4828221,lng:-83.41838229999999},Flint:{lat:43.0777289,lng:-83.67739279999999},"Grand Rapids":{lat:42.9633599,lng:-85.6680863},"Grand Rapids Charter Township":{lat:43.0020023,lng:-85.57150150000001},Kalamazoo:{lat:42.2917069,lng:-85.5872286},Kentwood:{lat:42.8694731,lng:-85.64474919999999},Lansing:{lat:42.732535,lng:-84.5555347},"Lansing Charter Township":{lat:42.7563594,lng:-84.5283267},Livonia:{lat:42.36837,lng:-83.35270969999999},Midland:{lat:43.57509779999999,lng:-84.3542049},Novi:{lat:42.48059,lng:-83.4754913},Pontiac:{lat:42.6389216,lng:-83.29104679999999},Portage:{lat:42.2011538,lng:-85.5800022},"Portage Township":{lat:46.9338608,lng:-88.66166109999999},"Rochester Hills":{lat:42.65836609999999,lng:-83.1499322},Roseville:{lat:42.4972583,lng:-82.9371409},"Royal Oak":{lat:42.4894801,lng:-83.1446485},Saginaw:{lat:43.4194699,lng:-83.9508068},"St Clair Shores":{lat:42.4931,lng:-82.8911339},Southfield:{lat:42.4733688,lng:-83.2218731},"Sterling Heights":{lat:42.5803122,lng:-83.0302033},Taylor:{lat:42.240872,lng:-83.2696509},Troy:{lat:42.6055893,lng:-83.1499304},Warren:{lat:42.49299999999999,lng:-83.02819699999999},Westland:{lat:42.32420399999999,lng:-83.400211},Wyoming:{lat:42.9133602,lng:-85.7053085}},center:{lat:43.3504,lng:-84.5603}},AZ:{counties:{Apache:{lat:35.385845,lng:-109.493747},Cochise:{lat:31.881793,lng:-109.75412},Coconino:{lat:35.829692,lng:-111.773728},Gila:{lat:33.789618,lng:-110.81187},Graham:{lat:32.931828,lng:-109.87831},Greenlee:{lat:33.238872,lng:-109.242323},"La Paz":{lat:33.727625,lng:-114.038793},Maricopa:{lat:33.346541,lng:-112.495534},Mohave:{lat:35.717705,lng:-113.749689},Navajo:{lat:35.390934,lng:-110.320908},Pima:{lat:32.128237,lng:-111.783018},Pinal:{lat:32.91891,lng:-111.367257},"Santa Cruz":{lat:31.525904,lng:-110.84519},Yavapai:{lat:34.630044,lng:-112.573745},Yuma:{lat:32.773942,lng:-113.910905}},cities:{"Apache Junction":{lat:33.4150485,lng:-111.5495777},Avondale:{lat:33.4355977,lng:-112.3496021},Buckeye:{lat:33.3703197,lng:-112.5837766},"Bullhead City":{lat:35.1477774,lng:-114.5682983},"Casa Grande":{lat:32.8795022,lng:-111.7573521},"Casas Adobes":{lat:32.3234078,lng:-110.9950966},"Catalina Foothills":{lat:32.297853,lng:-110.9187037},Chandler:{lat:33.3061605,lng:-111.8412502},Flagstaff:{lat:35.2013516,lng:-111.639249},Gilbert:{lat:33.3528264,lng:-111.789027},Glendale:{lat:33.5386523,lng:-112.1859866},Goodyear:{lat:33.449806,lng:-112.3582136},"Lake Havasu City":{lat:34.483901,lng:-114.3224548},Maricopa:{lat:33.0581063,lng:-112.0476423},Mesa:{lat:33.4151843,lng:-111.8314724},"Oro Valley":{lat:32.3909071,lng:-110.966488},Peoria:{lat:33.5805955,lng:-112.2373779},Phoenix:{lat:33.4483771,lng:-112.0740373},Prescott:{lat:34.5400242,lng:-112.4685025},"Prescott Valley":{lat:34.6100243,lng:-112.315721},"San Tan Valley":{lat:33.1702778,lng:-111.5722222},Scottsdale:{lat:33.4941704,lng:-111.9260519},"Sierra Vista":{lat:31.5455001,lng:-110.2772856},Surprise:{lat:33.639099,lng:-112.3957576},Tempe:{lat:33.4255104,lng:-111.9400054},Tucson:{lat:32.2217429,lng:-110.926479},Yuma:{lat:32.6926512,lng:-114.6276916}},center:{lat:33.7712,lng:-111.3877}},NC:{counties:{Alamance:{lat:36.041974,lng:-79.399935},Alexander:{lat:35.920951,lng:-81.177467},Alleghany:{lat:36.489356,lng:-81.132299},Anson:{lat:34.974996,lng:-80.109959},Ashe:{lat:36.436305,lng:-81.49877},Avery:{lat:36.072894,lng:-81.920363},Beaufort:{lat:35.482313,lng:-76.842014},Bertie:{lat:36.06133,lng:-76.962367},Bladen:{lat:34.591949,lng:-78.539513},Brunswick:{lat:34.038708,lng:-78.227688},Buncombe:{lat:35.609371,lng:-82.530426},Burke:{lat:35.746182,lng:-81.70618},Cabarrus:{lat:35.387845,lng:-80.552868},Caldwell:{lat:35.957857,lng:-81.530076},Camden:{lat:36.342344,lng:-76.162488},Carteret:{lat:34.858313,lng:-76.526967},Caswell:{lat:36.393097,lng:-79.332546},Catawba:{lat:35.663182,lng:-81.214151},Chatham:{lat:35.704994,lng:-79.251454},Cherokee:{lat:35.136233,lng:-84.061308},Chowan:{lat:36.127288,lng:-76.60207},Clay:{lat:35.052997,lng:-83.752264},Cleveland:{lat:35.33463,lng:-81.557115},Columbus:{lat:34.260471,lng:-78.636378},Craven:{lat:35.118179,lng:-77.082541},Cumberland:{lat:35.050192,lng:-78.828719},Currituck:{lat:36.372174,lng:-75.941224},Dare:{lat:35.606269,lng:-75.767536},Davidson:{lat:35.795123,lng:-80.206525},Davie:{lat:35.929356,lng:-80.542542},Duplin:{lat:34.934403,lng:-77.933543},Durham:{lat:36.036589,lng:-78.877919},Edgecombe:{lat:35.917055,lng:-77.602655},Forsyth:{lat:36.131667,lng:-80.257289},Franklin:{lat:36.088241,lng:-78.28309},Gaston:{lat:35.293344,lng:-81.177256},Gates:{lat:36.442135,lng:-76.702355},Graham:{lat:35.348111,lng:-83.830909},Granville:{lat:36.299884,lng:-78.657634},Greene:{lat:35.481933,lng:-77.681667},Guilford:{lat:36.079065,lng:-79.788665},Halifax:{lat:36.251438,lng:-77.644842},Harnett:{lat:35.368635,lng:-78.87161},Haywood:{lat:35.557097,lng:-82.972807},Henderson:{lat:35.336424,lng:-82.479634},Hertford:{lat:36.363517,lng:-76.981616},Hoke:{lat:35.017233,lng:-79.241964},Hyde:{lat:35.408157,lng:-76.153687},Iredell:{lat:35.806356,lng:-80.874545},Jackson:{lat:35.286463,lng:-83.130641},Johnston:{lat:35.513405,lng:-78.367267},Jones:{lat:35.03216,lng:-77.356443},Lee:{lat:35.476075,lng:-79.17222},Lenoir:{lat:35.238062,lng:-77.639023},Lincoln:{lat:35.487825,lng:-81.225176},McDowell:{lat:35.682232,lng:-82.048029},Macon:{lat:35.152959,lng:-83.421901},Madison:{lat:35.86408,lng:-82.712731},Martin:{lat:35.841059,lng:-77.112867},Mecklenburg:{lat:35.246862,lng:-80.833832},Mitchell:{lat:36.013102,lng:-82.163554},Montgomery:{lat:35.338071,lng:-79.904196},Moore:{lat:35.310163,lng:-79.480664},Nash:{lat:35.965945,lng:-77.987555},"New Hanover":{lat:34.177466,lng:-77.871378},Northampton:{lat:36.421774,lng:-77.398352},Onslow:{lat:34.76346,lng:-77.503297},Orange:{lat:36.062499,lng:-79.119355},Pamlico:{lat:35.147462,lng:-76.665069},Pasquotank:{lat:36.265276,lng:-76.260355},Pender:{lat:34.512581,lng:-77.888029},Perquimans:{lat:36.178261,lng:-76.404269},Person:{lat:36.386387,lng:-78.965471},Pitt:{lat:35.591065,lng:-77.372404},Polk:{lat:35.278928,lng:-82.167667},Randolph:{lat:35.709915,lng:-79.806215},Richmond:{lat:35.001957,lng:-79.747809},Robeson:{lat:34.63921,lng:-79.100881},Rockingham:{lat:36.380927,lng:-79.782889},Rowan:{lat:35.639218,lng:-80.525344},Rutherford:{lat:35.402747,lng:-81.919583},Sampson:{lat:34.990575,lng:-78.371382},Scotland:{lat:34.840023,lng:-79.477337},Stanly:{lat:35.310523,lng:-80.254355},Stokes:{lat:36.404195,lng:-80.239271},Surry:{lat:36.415416,lng:-80.686463},Swain:{lat:35.568849,lng:-83.465614},Transylvania:{lat:35.210095,lng:-82.816696},Tyrrell:{lat:35.87042,lng:-76.165345},Union:{lat:34.991501,lng:-80.530131},Vance:{lat:36.365481,lng:-78.405434},Wake:{lat:35.789846,lng:-78.650624},Warren:{lat:36.397979,lng:-78.099924},Washington:{lat:35.844589,lng:-76.572334},Watauga:{lat:36.235371,lng:-81.709919},Wayne:{lat:35.362741,lng:-78.004826},Wilkes:{lat:36.209303,lng:-81.165354},Wilson:{lat:35.704125,lng:-77.918982},Yadkin:{lat:36.158765,lng:-80.665164},Yancey:{lat:35.889504,lng:-82.30398}},cities:{Apex:{lat:35.732652,lng:-78.85028559999999},Asheville:{lat:35.6009452,lng:-82.55401499999999},Burlington:{lat:36.0956918,lng:-79.43779909999999},Cary:{lat:35.79154,lng:-78.7811169},"Chapel Hill":{lat:35.9131996,lng:-79.0558445},Charlotte:{lat:35.2270869,lng:-80.8431267},Concord:{lat:35.4087517,lng:-80.579511},Durham:{lat:35.9940329,lng:-78.898619},Fayetteville:{lat:35.0526641,lng:-78.87835849999999},Gastonia:{lat:35.262082,lng:-81.18730049999999},Greensboro:{lat:36.0726354,lng:-79.7919754},Greenville:{lat:35.612661,lng:-77.3663538},"High Point":{lat:35.9556923,lng:-80.0053176},Huntersville:{lat:35.410694,lng:-80.84285040000002},Jacksonville:{lat:34.7540524,lng:-77.4302414},Kannapolis:{lat:35.4873613,lng:-80.6217341},Raleigh:{lat:35.772096,lng:-78.6386145},"Rocky Mt":{lat:35.9382103,lng:-77.7905339},Wilmington:{lat:34.2257255,lng:-77.9447102},Wilson:{lat:35.7212689,lng:-77.9155395},"Winston-Salem":{lat:36.09985959999999,lng:-80.244216}},center:{lat:35.6411,lng:-79.8431}},WI:{counties:{Adams:{lat:43.973763,lng:-89.767223},Ashland:{lat:46.546291,lng:-90.665154},Barron:{lat:45.437192,lng:-91.852892},Bayfield:{lat:46.634199,lng:-91.177282},Brown:{lat:44.473961,lng:-87.995926},Buffalo:{lat:44.389759,lng:-91.758714},Burnett:{lat:45.865255,lng:-92.367978},Calumet:{lat:44.07841,lng:-88.212132},Chippewa:{lat:45.069092,lng:-91.283505},Clark:{lat:44.733596,lng:-90.610201},Columbia:{lat:43.471882,lng:-89.330472},Crawford:{lat:43.24991,lng:-90.95123},Dane:{lat:43.067468,lng:-89.417852},Dodge:{lat:43.422706,lng:-88.704379},Door:{lat:45.067808,lng:-87.087936},Douglas:{lat:46.463316,lng:-91.89258},Dunn:{lat:44.947741,lng:-91.89772},"Eau Claire":{lat:44.726355,lng:-91.286414},Florence:{lat:45.849646,lng:-88.400322},"Fond du Lac":{lat:43.754722,lng:-88.493284},Forest:{lat:45.666882,lng:-88.773225},Grant:{lat:42.870062,lng:-90.695368},Green:{lat:42.677728,lng:-89.605639},"Green Lake":{lat:43.76141,lng:-88.987228},Iowa:{lat:43.001021,lng:-90.133692},Iron:{lat:46.32655,lng:-90.261299},Jackson:{lat:44.324895,lng:-90.806541},Jefferson:{lat:43.013807,lng:-88.773986},Juneau:{lat:43.932836,lng:-90.113984},Kenosha:{lat:42.579703,lng:-87.424898},Kewaunee:{lat:44.500949,lng:-87.161813},"La Crosse":{lat:43.908222,lng:-91.111758},Lafayette:{lat:42.655578,lng:-90.130292},Langlade:{lat:45.259204,lng:-89.06819},Lincoln:{lat:45.338319,lng:-89.742082},Manitowoc:{lat:44.105108,lng:-87.313828},Marathon:{lat:44.898036,lng:-89.757823},Marinette:{lat:45.346899,lng:-87.991198},Marquette:{lat:43.826053,lng:-89.409095},Menominee:{lat:44.991304,lng:-88.669251},Milwaukee:{lat:43.017655,lng:-87.481575},Monroe:{lat:43.945175,lng:-90.619969},Oconto:{lat:44.996575,lng:-88.206516},Oneida:{lat:45.713791,lng:-89.536693},Outagamie:{lat:44.418226,lng:-88.464988},Ozaukee:{lat:43.360715,lng:-87.496553},Pepin:{lat:44.627436,lng:-91.83489},Pierce:{lat:44.725337,lng:-92.426279},Polk:{lat:45.46803,lng:-92.453154},Portage:{lat:44.476246,lng:-89.49807},Price:{lat:45.679072,lng:-90.35965},Racine:{lat:42.754075,lng:-87.414676},Richland:{lat:43.376199,lng:-90.435693},Rock:{lat:42.669931,lng:-89.075119},Rusk:{lat:45.472734,lng:-91.136745},"St. Croix":{lat:45.028959,lng:-92.447284},Sauk:{lat:43.427998,lng:-89.943329},Sawyer:{lat:45.864913,lng:-91.14713},Shawano:{lat:44.789641,lng:-88.755813},Sheboygan:{lat:43.746002,lng:-87.730546},Taylor:{lat:45.211656,lng:-90.504853},Trempealeau:{lat:44.30305,lng:-91.358867},Vernon:{lat:43.599858,lng:-90.815226},Vilas:{lat:46.049848,lng:-89.501254},Walworth:{lat:42.66811,lng:-88.541731},Washburn:{lat:45.892463,lng:-91.796423},Washington:{lat:43.391156,lng:-88.232917},Waukesha:{lat:43.019308,lng:-88.306707},Waupaca:{lat:44.478004,
lng:-88.967006},Waushara:{lat:44.112825,lng:-89.239752},Winnebago:{lat:44.085707,lng:-88.668149},Wood:{lat:44.461413,lng:-90.038825}},cities:{Appleton:{lat:44.2619309,lng:-88.41538469999999},"Eau Claire":{lat:44.811349,lng:-91.4984941},"Fond du Lac":{lat:43.7730448,lng:-88.4470508},"Green Bay":{lat:44.51915899999999,lng:-88.019826},Janesville:{lat:42.6827885,lng:-89.0187222},Kenosha:{lat:42.5847425,lng:-87.82118539999999},"La Crosse":{lat:43.8013556,lng:-91.23958069999999},Madison:{lat:43.0730517,lng:-89.4012302},Milwaukee:{lat:43.0389025,lng:-87.9064736},Oshkosh:{lat:44.0247062,lng:-88.5426136},Racine:{lat:42.7261309,lng:-87.78285230000002},Sheboygan:{lat:43.7508284,lng:-87.71453},Waukesha:{lat:43.0116784,lng:-88.2314813},Wauwatosa:{lat:43.0494572,lng:-88.0075875},"West Allis":{lat:43.0166806,lng:-88.0070315}},center:{lat:44.2563,lng:-89.6385}},MN:{counties:{Aitkin:{lat:46.602446,lng:-93.41976},Anoka:{lat:45.27411,lng:-93.242723},Becker:{lat:46.937629,lng:-95.741757},Beltrami:{lat:47.878825,lng:-94.986698},Benton:{lat:45.701227,lng:-94.00144},"Big Stone":{lat:45.419925,lng:-96.402226},"Blue Earth":{lat:44.038225,lng:-94.064071},Brown:{lat:44.246542,lng:-94.733647},Carlton:{lat:46.603818,lng:-92.671044},Carver:{lat:44.821381,lng:-93.800575},Cass:{lat:46.951427,lng:-94.333773},Chippewa:{lat:45.028625,lng:-95.564108},Chisago:{lat:45.505444,lng:-92.903849},Clay:{lat:46.898377,lng:-96.494901},Clearwater:{lat:47.575873,lng:-95.371117},Cook:{lat:47.538571,lng:-90.29019},Cottonwood:{lat:44.010711,lng:-95.18313},"Crow Wing":{lat:46.491114,lng:-94.071213},Dakota:{lat:44.670893,lng:-93.062481},Dodge:{lat:44.020706,lng:-92.869353},Douglas:{lat:45.936429,lng:-95.46061},Faribault:{lat:43.676522,lng:-93.947234},Fillmore:{lat:43.67727,lng:-92.093681},Freeborn:{lat:43.674202,lng:-93.350289},Goodhue:{lat:44.406178,lng:-92.716},Grant:{lat:45.930743,lng:-96.010699},Hennepin:{lat:45.006064,lng:-93.475185},Houston:{lat:43.66699,lng:-91.501556},Hubbard:{lat:47.095551,lng:-94.91329},Isanti:{lat:45.562431,lng:-93.296339},Itasca:{lat:47.490843,lng:-93.613128},Jackson:{lat:43.673025,lng:-95.149704},Kanabec:{lat:45.94776,lng:-93.297788},Kandiyohi:{lat:45.152714,lng:-95.004981},Kittson:{lat:48.77604,lng:-96.780349},Koochiching:{lat:48.24549,lng:-93.782842},"Lac qui Parle":{lat:44.999855,lng:-96.176836},Lake:{lat:47.517111,lng:-91.411704},"Lake of the Woods":{lat:48.7681,lng:-94.904634},"Le Sueur":{lat:44.373397,lng:-93.73018},Lincoln:{lat:44.408238,lng:-96.272032},Lyon:{lat:44.409195,lng:-95.847268},McLeod:{lat:44.821644,lng:-94.27232},Mahnomen:{lat:47.325842,lng:-95.810703},Marshall:{lat:48.362728,lng:-96.357761},Martin:{lat:43.677118,lng:-94.537198},Meeker:{lat:45.123156,lng:-94.527346},"Mille Lacs":{lat:45.929043,lng:-93.632996},Morrison:{lat:46.020484,lng:-94.266619},Mower:{lat:43.666249,lng:-92.759514},Murray:{lat:44.015594,lng:-95.761581},Nicollet:{lat:44.35882,lng:-94.245685},Nobles:{lat:43.677686,lng:-95.763132},Norman:{lat:47.32947,lng:-96.463807},Olmsted:{lat:44.00343,lng:-92.406722},"Otter Tail":{lat:46.405725,lng:-95.714578},Pennington:{lat:48.069247,lng:-96.037725},Pine:{lat:46.10094,lng:-92.763094},Pipestone:{lat:44.015361,lng:-96.257015},Polk:{lat:47.774254,lng:-96.400027},Pope:{lat:45.589623,lng:-95.446705},Ramsey:{lat:45.01525,lng:-93.100141},"Red Lake":{lat:47.865487,lng:-96.08718},Redwood:{lat:44.403536,lng:-95.254242},Renville:{lat:44.723697,lng:-94.955617},Rice:{lat:44.350943,lng:-93.298503},Rock:{lat:43.669587,lng:-96.263238},Roseau:{lat:48.761066,lng:-95.82153},"St. Louis":{lat:47.583852,lng:-92.463645},Scott:{lat:44.651932,lng:-93.534553},Sherburne:{lat:45.443171,lng:-93.775092},Sibley:{lat:44.575734,lng:-94.230123},Stearns:{lat:45.555235,lng:-94.610482},Steele:{lat:44.015261,lng:-93.220453},Stevens:{lat:45.593461,lng:-95.992315},Swift:{lat:45.27545,lng:-95.690398},Todd:{lat:46.066569,lng:-94.900576},Traverse:{lat:45.76984,lng:-96.475049},Wabasha:{lat:44.289693,lng:-92.233341},Wadena:{lat:46.586784,lng:-94.988331},Waseca:{lat:44.01846,lng:-93.589844},Washington:{lat:45.037929,lng:-92.890117},Watonwan:{lat:43.978366,lng:-94.614128},Wilkin:{lat:46.362335,lng:-96.476657},Winona:{lat:43.982268,lng:-91.776708},Wright:{lat:45.175091,lng:-93.966397},"Yellow Medicine":{lat:44.715736,lng:-95.862756}},cities:{"Apple Valley":{lat:44.7319094,lng:-93.21772000000001},Blaine:{lat:45.1607987,lng:-93.23494889999999},Bloomington:{lat:44.840798,lng:-93.2982799},"Brooklyn Park":{lat:45.0941315,lng:-93.3563405},Burnsville:{lat:44.7677424,lng:-93.27772259999999},"Coon Rapids":{lat:45.1199652,lng:-93.28772769999999},Duluth:{lat:46.78667189999999,lng:-92.1004852},Eagan:{lat:44.8041322,lng:-93.1668858},"Eden Prairie":{lat:44.8546856,lng:-93.47078599999999},Edina:{lat:44.8896866,lng:-93.3499489},Lakeville:{lat:44.6496868,lng:-93.24271999999999},"Maple Grove":{lat:45.0724642,lng:-93.4557877},Minneapolis:{lat:44.9799654,lng:-93.26383609999999},Minnetonka:{lat:44.9211836,lng:-93.4687489},Plymouth:{lat:45.0105194,lng:-93.4555093},Rochester:{lat:44.0216306,lng:-92.4698992},"St Cloud":{lat:45.5538889,lng:-94.1702778},"St Louis Park":{lat:44.9597376,lng:-93.3702186},"St Paul":{lat:44.95416669999999,lng:-93.11388889999999},Shakopee:{lat:44.7973962,lng:-93.5272861},Woodbury:{lat:44.9238552,lng:-92.9593797}},center:{lat:45.7326,lng:-93.9196}},MA:{counties:{Barnstable:{lat:41.798819,lng:-70.211083},Berkshire:{lat:42.375314,lng:-73.213948},Bristol:{lat:41.748576,lng:-71.087062},Dukes:{lat:41.380939,lng:-70.701536},Essex:{lat:42.642711,lng:-70.865107},Franklin:{lat:42.583791,lng:-72.591655},Hampden:{lat:42.136198,lng:-72.635648},Hampshire:{lat:42.339459,lng:-72.663694},Middlesex:{lat:42.479477,lng:-71.396507},Nantucket:{lat:41.305878,lng:-70.14191},Norfolk:{lat:42.169703,lng:-71.179875},Plymouth:{lat:41.987196,lng:-70.741942},Suffolk:{lat:42.33196,lng:-71.020173},Worcester:{lat:42.311693,lng:-71.940282}},cities:{Arlington:{lat:42.4153925,lng:-71.1564729},Attleboro:{lat:41.94454409999999,lng:-71.2856082},Barnstable:{lat:41.7014167,lng:-70.3030556},Billerica:{lat:42.5584218,lng:-71.2689461},Boston:{lat:42.3584308,lng:-71.0597732},Brockton:{lat:42.0834335,lng:-71.0183787},Brookline:{lat:42.33176419999999,lng:-71.1211635},Cambridge:{lat:42.3726399,lng:-71.10965279999999},Chicopee:{lat:42.1487043,lng:-72.6078672},Everett:{lat:42.40843,lng:-71.0536625},"Fall River":{lat:41.7014912,lng:-71.1550451},Framingham:{lat:42.279286,lng:-71.4161565},Haverhill:{lat:42.7762015,lng:-71.0772796},Lawrence:{lat:42.7070354,lng:-71.1631137},Lowell:{lat:42.6334247,lng:-71.31617179999999},Lynn:{lat:42.46676300000001,lng:-70.9494938},Malden:{lat:42.4250964,lng:-71.066163},Medford:{lat:42.4184296,lng:-71.1061639},Methuen:{lat:42.7262016,lng:-71.1908924},"New Bedford":{lat:41.6362152,lng:-70.93420499999999},Newton:{lat:42.3370413,lng:-71.20922139999999},"North Attleboro":{lat:41.9695516,lng:-71.35654389999999},Peabody:{lat:42.5278731,lng:-70.9286609},Pittsfield:{lat:42.4500845,lng:-73.2453824},Quincy:{lat:42.2528772,lng:-71.0022705},Revere:{lat:42.4084302,lng:-71.0119948},Salem:{lat:42.51954,lng:-70.8967155},Somerville:{lat:42.3875968,lng:-71.0994968},Springfield:{lat:42.1014831,lng:-72.589811},Taunton:{lat:41.900101,lng:-71.0897674},Waltham:{lat:42.3764852,lng:-71.2356113},Westfield:{lat:42.1250929,lng:-72.749538},Weymouth:{lat:42.2180724,lng:-70.94103559999999},Worcester:{lat:42.2625932,lng:-71.8022934}},center:{lat:42.2373,lng:-71.5314}},IL:{counties:{Adams:{lat:39.986053,lng:-91.194961},Alexander:{lat:37.183683,lng:-89.349506},Bond:{lat:38.885924,lng:-89.436592},Boone:{lat:42.318983,lng:-88.824295},Brown:{lat:39.962069,lng:-90.75031},Bureau:{lat:41.401304,lng:-89.528377},Calhoun:{lat:39.164262,lng:-90.666295},Carroll:{lat:42.059084,lng:-89.926485},Cass:{lat:39.969202,lng:-90.245705},Champaign:{lat:40.13915,lng:-88.197201},Christian:{lat:39.545524,lng:-89.279593},Clark:{lat:39.332364,lng:-87.791687},Clay:{lat:38.747312,lng:-88.483789},Clinton:{lat:38.606423,lng:-89.423136},Coles:{lat:39.51368,lng:-88.220782},Cook:{lat:41.894294,lng:-87.645455},Crawford:{lat:39.00373,lng:-87.757172},Cumberland:{lat:39.273121,lng:-88.240619},DeKalb:{lat:41.894613,lng:-88.768991},"De Witt":{lat:40.181499,lng:-88.901853},Douglas:{lat:39.766078,lng:-88.222866},DuPage:{lat:41.852058,lng:-88.086038},Edgar:{lat:39.679037,lng:-87.74711},Edwards:{lat:38.417095,lng:-88.047941},Effingham:{lat:39.047694,lng:-88.592786},Fayette:{lat:39.001125,lng:-89.017923},Ford:{lat:40.594423,lng:-88.224746},Franklin:{lat:37.991848,lng:-88.926246},Fulton:{lat:40.465688,lng:-90.206793},Gallatin:{lat:37.768677,lng:-88.227964},Greene:{lat:39.355444,lng:-90.387757},Grundy:{lat:41.29241,lng:-88.401055},Hamilton:{lat:38.085226,lng:-88.539005},Hancock:{lat:40.405792,lng:-91.167988},Hardin:{lat:37.517852,lng:-88.266148},Henderson:{lat:40.815141,lng:-90.93848},Henry:{lat:41.350021,lng:-90.130838},Iroquois:{lat:40.748867,lng:-87.833601},Jackson:{lat:37.786096,lng:-89.381212},Jasper:{lat:39.004874,lng:-88.150763},Jefferson:{lat:38.30078,lng:-88.92421},Jersey:{lat:39.080192,lng:-90.361365},"Jo Daviess":{lat:42.362391,lng:-90.211471},Johnson:{lat:37.460815,lng:-88.882962},Kane:{lat:41.939594,lng:-88.42804},Kankakee:{lat:41.139494,lng:-87.861125},Kendall:{lat:41.58814,lng:-88.430626},Knox:{lat:40.930941,lng:-90.213761},Lake:{lat:42.326444,lng:-87.436118},"La Salle":{lat:41.343341,lng:-88.885931},Lawrence:{lat:38.718954,lng:-87.730221},Lee:{lat:41.747442,lng:-89.299351},Livingston:{lat:40.894376,lng:-88.552852},Logan:{lat:40.12907,lng:-89.365308},McDonough:{lat:40.455789,lng:-90.677579},McHenry:{lat:42.324298,lng:-88.452245},McLean:{lat:40.494559,lng:-88.844539},Macon:{lat:39.860237,lng:-88.961529},Macoupin:{lat:39.2659,lng:-89.926344},Madison:{lat:38.827082,lng:-89.900195},Marion:{lat:38.648396,lng:-88.920221},Marshall:{lat:41.031119,lng:-89.342371},Mason:{lat:40.236993,lng:-89.913575},Massac:{lat:37.216119,lng:-88.705658},Menard:{lat:40.022569,lng:-89.794133},Mercer:{lat:41.204791,lng:-90.741433},Monroe:{lat:38.277983,lng:-90.179078},Montgomery:{lat:39.228092,lng:-89.478007},Morgan:{lat:39.716806,lng:-90.202277},Moultrie:{lat:39.636896,lng:-88.625726},Ogle:{lat:42.041884,lng:-89.320176},Peoria:{lat:40.785999,lng:-89.767358},Perry:{lat:38.084385,lng:-89.368487},Piatt:{lat:40.009056,lng:-88.592328},Pike:{lat:39.625106,lng:-90.889034},Pope:{lat:37.417169,lng:-88.542374},Pulaski:{lat:37.215615,lng:-89.127755},Putnam:{lat:41.19894,lng:-89.298386},Randolph:{lat:38.056515,lng:-89.82121},Richland:{lat:38.71155,lng:-88.085698},"Rock Island":{lat:41.468404,lng:-90.572203},"St. Clair":{lat:38.470198,lng:-89.928546},Saline:{lat:37.751653,lng:-88.545031},Sangamon:{lat:39.756378,lng:-89.662311},Schuyler:{lat:40.156905,lng:-90.613464},Scott:{lat:39.63698,lng:-90.477759},Shelby:{lat:39.384926,lng:-88.798862},Stark:{lat:41.096908,lng:-89.797411},Stephenson:{lat:42.349726,lng:-89.665994},Tazewell:{lat:40.508074,lng:-89.51626},Union:{lat:37.475104,lng:-89.252875},Vermilion:{lat:40.18674,lng:-87.726772},Wabash:{lat:38.445821,lng:-87.839167},Warren:{lat:40.850441,lng:-90.620223},Washington:{lat:38.353141,lng:-89.417187},Wayne:{lat:38.431948,lng:-88.432129},White:{lat:38.087372,lng:-88.178585},Whiteside:{lat:41.750571,lng:-89.910957},Will:{lat:41.448474,lng:-87.978456},Williamson:{lat:37.730353,lng:-88.930018},Winnebago:{lat:42.337396,lng:-89.161205},Woodford:{lat:40.789596,lng:-89.210301}},cities:{"Arlington Heights":{lat:42.0883603,lng:-87.98062650000001},Aurora:{lat:41.7605849,lng:-88.32007150000001},Bartlett:{lat:41.9950276,lng:-88.1856301},Belleville:{lat:38.5200504,lng:-89.9839935},Berwyn:{lat:41.85058739999999,lng:-87.7936685},Bloomington:{lat:40.4842027,lng:-88.99368729999999},Bolingbrook:{lat:41.69864159999999,lng:-88.0683955},"Buffalo Grove":{lat:42.1662831,lng:-87.9631308},Champaign:{lat:40.1164204,lng:-88.2433829},Chicago:{lat:41.8781136,lng:-87.6297982},Cicero:{lat:41.8455877,lng:-87.7539448},"Crystal Lake":{lat:42.2411344,lng:-88.31619649999999},Decatur:{lat:39.8403147,lng:-88.9548001},DeKalb:{lat:41.9294736,lng:-88.75036469999999},"Des Plaines":{lat:42.0333623,lng:-87.88339909999999},"Downers Grove":{lat:41.8089191,lng:-88.01117459999999},Elgin:{lat:42.0372487,lng:-88.2811895},Elmhurst:{lat:41.8994744,lng:-87.9403418},Evanston:{lat:42.0411414,lng:-87.6900587},Glenview:{lat:42.0697509,lng:-87.7878408},"Hoffman Estates":{lat:42.0629915,lng:-88.12271989999999},Joliet:{lat:41.525031,lng:-88.0817251},Lombard:{lat:41.8800296,lng:-88.00784349999999},Moline:{lat:41.5067003,lng:-90.51513419999999},"Mt Prospect":{lat:42.0664167,lng:-87.9372908},Naperville:{lat:41.7858629,lng:-88.1472893},Normal:{lat:40.5142026,lng:-88.9906312},"Oak Lawn":{lat:41.7108662,lng:-87.7581081},"Oak Park":{lat:41.8850317,lng:-87.7845025},"Orland Park":{lat:41.6303103,lng:-87.85394250000002},Palatine:{lat:42.1103041,lng:-88.03424000000001},Peoria:{lat:40.6936488,lng:-89.5889864},Plainfield:{lat:41.615915,lng:-88.20406899999999},Rockford:{lat:42.2711311,lng:-89.0939952},Romeoville:{lat:41.6475306,lng:-88.0895061},Schaumburg:{lat:42.0333607,lng:-88.0834059},Skokie:{lat:42.0333636,lng:-87.7333934},Springfield:{lat:39.78172130000001,lng:-89.6501481},"Tinley Park":{lat:41.5733669,lng:-87.7844944},Urbana:{lat:40.1105875,lng:-88.2072697},Waukegan:{lat:42.3636331,lng:-87.84479379999999},Wheaton:{lat:41.8661403,lng:-88.1070127}},center:{lat:40.3363,lng:-89.0022}},CO:{counties:{Adams:{lat:39.874325,lng:-104.331872},Alamosa:{lat:37.568442,lng:-105.788041},Arapahoe:{lat:39.644632,lng:-104.331733},Archuleta:{lat:37.202395,lng:-107.050863},Baca:{lat:37.303144,lng:-102.535457},Bent:{lat:37.931891,lng:-103.077584},Boulder:{lat:40.094826,lng:-105.398382},Broomfield:{lat:39.953383,lng:-105.052125},Chaffee:{lat:38.738246,lng:-106.316972},Cheyenne:{lat:38.835387,lng:-102.604585},"Clear Creek":{lat:39.689403,lng:-105.670791},Conejos:{lat:37.213407,lng:-106.176447},Costilla:{lat:37.277547,lng:-105.42894},Crowley:{lat:38.321956,lng:-103.787562},Custer:{lat:38.101994,lng:-105.373515},Delta:{lat:38.861756,lng:-107.864757},Denver:{lat:39.761849,lng:-104.880625},Dolores:{lat:37.747602,lng:-108.530383},Douglas:{lat:39.326435,lng:-104.926199},Eagle:{lat:39.630638,lng:-106.692944},Elbert:{lat:39.310817,lng:-104.117928},"El Paso":{lat:38.827383,lng:-104.527472},Fremont:{lat:38.455658,lng:-105.421438},Garfield:{lat:39.599352,lng:-107.90978},Gilpin:{lat:39.861082,lng:-105.528947},Grand:{lat:40.123289,lng:-106.095876},Gunnison:{lat:38.669679,lng:-107.078108},Hinsdale:{lat:37.811625,lng:-107.383405},Huerfano:{lat:37.687815,lng:-104.959928},Jackson:{lat:40.663432,lng:-106.329248},Jefferson:{lat:39.58646,lng:-105.245601},Kiowa:{lat:38.388466,lng:-102.75621},"Kit Carson":{lat:39.30534,lng:-102.603023},Lake:{lat:39.204316,lng:-106.349696},"La Plata":{lat:37.287367,lng:-107.839718},Larimer:{lat:40.663091,lng:-105.482131},"Las Animas":{lat:37.318831,lng:-104.04411},Lincoln:{lat:38.99374,lng:-103.507555},Logan:{lat:40.728091,lng:-103.090464},Mesa:{lat:39.019492,lng:-108.461837},Mineral:{lat:37.651478,lng:-106.9323},Moffat:{lat:40.573984,lng:-108.204521},Montezuma:{lat:37.338025,lng:-108.595786},Montrose:{lat:38.413427,lng:-108.263042},Morgan:{lat:40.262354,lng:-103.807092},Otero:{lat:37.88417,lng:-103.72126},Ouray:{lat:38.1506,lng:-107.767133},Park:{lat:39.118914,lng:-105.717648},Phillips:{lat:40.594712,lng:-102.345105},Pitkin:{lat:39.217533,lng:-106.915943},Prowers:{lat:37.958181,lng:-102.392161},Pueblo:{lat:38.170658,lng:-104.489893},"Rio Blanco":{lat:39.972606,lng:-108.200685},"Rio Grande":{lat:37.485763,lng:-106.453214},Routt:{lat:40.48316,lng:-106.985289},Saguache:{lat:38.033952,lng:-106.246675},"San Juan":{lat:37.781075,lng:-107.670257},"San Miguel":{lat:38.009374,lng:-108.427326},Sedgwick:{lat:40.871568,lng:-102.355358},Summit:{lat:39.621023,lng:-106.137555},Teller:{lat:38.871994,lng:-105.182552},Washington:{lat:39.965413,lng:-103.209605},Weld:{lat:40.555794,lng:-104.383649},Yuma:{lat:40.000631,lng:-102.422649}},cities:{Arvada:{lat:39.8027644,lng:-105.0874842},Aurora:{lat:39.7294319,lng:-104.8319195},Boulder:{lat:40.0149856,lng:-105.2705456},Broomfield:{lat:39.9205411,lng:-105.0866504},"Castle Rock":{lat:39.3722121,lng:-104.8560902},Centennial:{lat:39.5807452,lng:-104.8771726},"Colorado Springs":{lat:38.8338816,lng:-104.8213634},"Commerce City":{lat:39.8083196,lng:-104.9338675},Denver:{lat:39.7391536,lng:-104.9847034},"Fort Collins":{lat:40.5852602,lng:-105.084423},"Grand Junction":{lat:39.0638705,lng:-108.5506486},Greeley:{lat:40.4233142,lng:-104.7091322},"Highlands Ranch":{lat:39.5444444,lng:-104.9680556},Lakewood:{lat:39.7047095,lng:-105.0813734},Littleton:{lat:39.613321,lng:-105.0166498},Longmont:{lat:40.1672068,lng:-105.1019275},Loveland:{lat:40.3977612,lng:-105.0749801},Parker:{lat:39.5186002,lng:-104.7613633},Pueblo:{lat:38.2544472,lng:-104.6091409},Thornton:{lat:39.8680412,lng:-104.9719243},Westminster:{lat:39.8366528,lng:-105.0372046}},center:{lat:39.0646,lng:-105.3272}},MD:{counties:{Allegany:{lat:39.612309,lng:-78.703108},"Anne Arundel":{lat:38.993374,lng:-76.560511},Baltimore:{lat:39.300214,lng:-76.610516},Calvert:{lat:38.521358,lng:-76.525864},Caroline:{lat:38.871531,lng:-75.831631},Carroll:{lat:39.563189,lng:-77.015512},Cecil:{lat:39.562352,lng:-75.941584},Charles:{lat:38.472853,lng:-77.015427},Dorchester:{lat:38.429196,lng:-76.047433},Frederick:{lat:39.470427,lng:-77.397627},Garrett:{lat:39.529871,lng:-79.269416},Harford:{lat:39.537429,lng:-76.299789},Howard:{lat:39.252264,lng:-76.924406},Kent:{lat:39.239177,lng:-76.1242},Montgomery:{lat:39.137382,lng:-77.203063},"Prince George's":{lat:38.82588,lng:-76.847272},"Queen Anne's":{lat:39.040693,lng:-76.082405},"St. Mary's":{lat:38.222666,lng:-76.534271},Somerset:{lat:38.07445,lng:-75.853323},Talbot:{lat:38.749427,lng:-76.17913},Washington:{lat:39.603621,lng:-77.814671},Wicomico:{lat:38.367389,lng:-75.632206},Worcester:{lat:38.222133,lng:-75.309932}},cities:{"Aspen Hill":{lat:39.0795529,lng:-77.07303379999999},Baltimore:{lat:39.2903848,lng:-76.6121893},"Bel Air South":{lat:39.504033,lng:-76.3181},Bethesda:{lat:38.984652,lng:-77.0947092},Bowie:{lat:39.0067768,lng:-76.77913649999999},Catonsville:{lat:39.2720509,lng:-76.73191609999999},Columbia:{lat:39.2040236,lng:-76.860565},Dundalk:{lat:39.2506633,lng:-76.5205184},"Ellicott City":{lat:39.2673283,lng:-76.7983067},Frederick:{lat:39.41426879999999,lng:-77.4105409},Gaithersburg:{lat:39.1434406,lng:-77.2013705},Germantown:{lat:39.1731621,lng:-77.2716502},"Glen Burnie":{lat:39.1626084,lng:-76.6246886},"North Bethesda":{lat:39.0445535,lng:-77.11886779999999},Odenton:{lat:39.0839981,lng:-76.7002462},Potomac:{lat:39.0181651,lng:-77.2085914},Rockville:{lat:39.0839973,lng:-77.1527578},Severn:{lat:39.1370528,lng:-76.6983022},"Silver Spring":{lat:38.99066570000001,lng:-77.026088},Towson:{lat:39.4014955,lng:-76.6019125},Waldorf:{lat:38.6343544,lng:-76.90668289999999},Wheaton:{lat:39.0398314,lng:-77.05525550000002}},center:{lat:39.0724,lng:-76.7902}},WA:{counties:{Adams:{lat:47.00484,lng:-118.533308},Asotin:{lat:46.181861,lng:-117.227781},Benton:{lat:46.228072,lng:-119.516864},Chelan:{lat:47.859892,lng:-120.618543},Clallam:{lat:48.113009,lng:-123.930611},Clark:{lat:45.771674,lng:-122.485903},Columbia:{lat:46.292851,lng:-117.911635},Cowlitz:{lat:46.185923,lng:-122.658682},Douglas:{lat:47.735866,lng:-119.69588},Ferry:{lat:48.437246,lng:-118.517074},Franklin:{lat:46.53458,lng:-118.906944},Garfield:{lat:46.429474,lng:-117.536715},Grant:{lat:47.213633,lng:-119.467788},"Grays Harbor":{lat:47.142786,lng:-123.827043},Island:{lat:48.158436,lng:-122.670503},Jefferson:{lat:47.802641,lng:-123.52181},King:{lat:47.493554,lng:-121.832375},Kitsap:{lat:47.639687,lng:-122.649636},Kittitas:{lat:47.124444,lng:-120.676714},Klickitat:{lat:45.869509,lng:-120.780117},Lewis:{lat:46.580071,lng:-122.377444},Lincoln:{lat:47.582718,lng:-118.417668},Mason:{lat:47.354126,lng:-123.17385},Okanogan:{lat:48.550971,lng:-119.691035},Pacific:{lat:46.556587,lng:-123.782419},"Pend Oreille":{lat:48.543877,lng:-117.232183},Pierce:{lat:47.040716,lng:-122.144709},"San Juan":{lat:48.508862,lng:-123.100616},Skagit:{lat:48.493066,lng:-121.816278},Skamania:{lat:46.024782,lng:-121.953227},Snohomish:{lat:48.054913,lng:-121.766412},Spokane:{lat:47.620379,lng:-117.404392},Stevens:{lat:48.390648,lng:-117.854897},Thurston:{lat:46.932598,lng:-122.829441},Wahkiakum:{lat:46.294638,lng:-123.424458},"Walla Walla":{lat:46.254606,lng:-118.480374},Whatcom:{lat:48.842653,lng:-121.836433},Whitman:{lat:46.903322,lng:-117.522962},Yakima:{lat:46.456558,lng:-120.740145}},cities:{Auburn:{lat:47.30732279999999,lng:-122.2284532},Bellevue:{lat:47.610377,lng:-122.2006786},Bellingham:{lat:48.7595529,lng:-122.4882249},Everett:{lat:47.9789848,lng:-122.2020794},"Federal Way":{lat:47.3223221,lng:-122.3126222},Kennewick:{lat:46.2112458,lng:-119.1372338},Kent:{lat:47.3809335,lng:-122.2348431},Kirkland:{lat:47.6814875,lng:-122.2087353},Lacey:{lat:47.03426289999999,lng:-122.8231915},Lakewood:{lat:47.1717649,lng:-122.518458},Marysville:{lat:48.0517637,lng:-122.1770818},Olympia:{lat:47.0378741,lng:-122.9006951},Pasco:{lat:46.2395793,lng:-119.1005657},Redmond:{lat:47.6739881,lng:-122.121512},Renton:{lat:47.48287759999999,lng:-122.2170661},Richland:{lat:46.2856907,lng:-119.2844621},Sammamish:{lat:47.64176639999999,lng:-122.0803998},Seattle:{lat:47.6062095,lng:-122.3320708},Shoreline:{lat:47.7556531,lng:-122.3415178},"South Hill":{lat:47.1412122,lng:-122.2701183},Spokane:{lat:47.6587802,lng:-117.4260466},"Spokane Valley":{lat:47.6732281,lng:-117.2393748},Tacoma:{lat:47.2528768,lng:-122.4442906},Vancouver:{lat:45.6387281,lng:-122.6614861},Yakima:{lat:46.6020711,lng:-120.5058987}},center:{lat:47.3917,lng:-121.5708}},AL:{counties:{Autauga:{lat:32.536382,lng:-86.64449},Baldwin:{lat:30.659218,lng:-87.746067},Barbour:{lat:31.87067,lng:-85.405456},Bibb:{lat:33.015893,lng:-87.127148},Blount:{lat:33.977448,lng:-86.567246},Bullock:{lat:32.101759,lng:-85.717261},Butler:{lat:31.751667,lng:-86.681969},Calhoun:{lat:33.771706,lng:-85.822513},Chambers:{lat:32.917943,lng:-85.391812},Cherokee:{lat:34.069515,lng:-85.654242},Chilton:{lat:32.85406,lng:-86.726628},Choctaw:{lat:31.991008,lng:-88.248887},Clarke:{lat:31.685521,lng:-87.818624},Clay:{lat:33.267809,lng:-85.862051},Cleburne:{lat:33.671981,lng:-85.516109},Coffee:{lat:31.402183,lng:-85.989201},Colbert:{lat:34.703112,lng:-87.801457},Conecuh:{lat:31.428293,lng:-86.992029},Coosa:{lat:32.931445,lng:-86.243482},Covington:{lat:31.243987,lng:-86.448721},Crenshaw:{lat:31.732826,lng:-86.319222},Cullman:{lat:34.131923,lng:-86.869267},Dale:{lat:31.430654,lng:-85.609476},Dallas:{lat:32.33354,lng:-87.114356},DeKalb:{lat:34.460929,lng:-85.803992},Elmore:{lat:32.597229,lng:-86.142739},Escambia:{lat:31.121748,lng:-87.168429},Etowah:{lat:34.047638,lng:-86.03442},Fayette:{lat:33.732249,lng:-87.752049},Franklin:{lat:34.441988,lng:-87.842815},Geneva:{lat:31.090866,lng:-85.824346},Greene:{lat:32.844497,lng:-87.964201},Hale:{lat:32.752796,lng:-87.623061},Henry:{lat:31.516978,lng:-85.239971},Houston:{lat:31.158193,lng:-85.296398},Jackson:{lat:34.763522,lng:-85.9774},Jefferson:{lat:33.553444,lng:-86.896536},Lamar:{lat:33.787085,lng:-88.087431},Lauderdale:{lat:34.904122,lng:-87.650997},Lawrence:{lat:34.529776,lng:-87.321865},Lee:{lat:32.604064,lng:-85.353048},Limestone:{lat:34.810239,lng:-86.9814},Lowndes:{lat:32.147888,lng:-86.650586},Macon:{lat:32.387027,lng:-85.692887},Madison:{lat:34.764238,lng:-86.55108},Marengo:{lat:32.247591,lng:-87.791091},Marion:{lat:34.138219,lng:-87.881551},Marshall:{lat:34.309564,lng:-86.321668},Mobile:{lat:30.684573,lng:-88.196568},Monroe:{lat:31.580332,lng:-87.383266},Montgomery:{lat:32.203651,lng:-86.203831},Morgan:{lat:34.454484,lng:-86.846402},Perry:{lat:32.639005,lng:-87.293827},Pickens:{lat:33.296809,lng:-88.096878},Pike:{lat:31.798726,lng:-85.941997},Randolph:{lat:33.296475,lng:-85.464068},Russell:{lat:32.289811,lng:-85.18698},"St. Clair":{lat:33.712963,lng:-86.315663},Shelby:{lat:33.262937,lng:-86.678104},Sumter:{lat:32.597481,lng:-88.200057},Talladega:{lat:33.369277,lng:-86.175805},Tallapoosa:{lat:32.863369,lng:-85.799553},Tuscaloosa:{lat:33.290202,lng:-87.52286},Walker:{lat:33.791571,lng:-87.301092},Washington:{lat:31.406974,lng:-88.202078},Wilcox:{lat:31.99033,lng:-87.302205},Winston:{lat:34.155888,lng:-87.364147}},cities:{Auburn:{lat:32.6098566,lng:-85.48078249999999},Birmingham:{lat:33.5206608,lng:-86.80248999999999},Decatur:{lat:34.6059253,lng:-86.9833417},Dothan:{lat:31.2232313,lng:-85.3904888},Hoover:{lat:33.4053867,lng:-86.8113781},Huntsville:{lat:34.7303688,lng:-86.5861037},Madison:{lat:34.6992579,lng:-86.74833180000002},Mobile:{lat:30.6943566,lng:-88.04305409999999},Montgomery:{lat:32.3668052,lng:-86.2999689},Tuscaloosa:{lat:33.2098407,lng:-87.56917349999999}},center:{lat:32.799,lng:-86.8073}},TN:{counties:{Anderson:{lat:36.116731,lng:-84.195418},Bedford:{lat:35.51366,lng:-86.458294},Benton:{lat:36.069253,lng:-88.071212},Bledsoe:{lat:35.593668,lng:-85.205979},Blount:{lat:35.688185,lng:-83.922973},Bradley:{lat:35.153914,lng:-84.859414},Campbell:{lat:36.401592,lng:-84.15925},Cannon:{lat:35.808394,lng:-86.062404},Carroll:{lat:35.967896,lng:-88.451659},Carter:{lat:36.284744,lng:-82.126593},Cheatham:{lat:36.25518,lng:-87.100816},Chester:{lat:35.416639,lng:-88.605505},Claiborne:{lat:36.501557,lng:-83.660724},Clay:{lat:36.545765,lng:-85.545718},Cocke:{lat:35.916198,lng:-83.119223},Coffee:{lat:35.488759,lng:-86.078219},Crockett:{lat:35.811312,lng:-89.135349},Cumberland:{lat:35.952398,lng:-84.994761},Davidson:{lat:36.169129,lng:-86.78479},Decatur:{lat:35.603422,lng:-88.107384},DeKalb:{lat:35.98222,lng:-85.833596},Dickson:{lat:36.145533,lng:-87.364155},Dyer:{lat:36.054196,lng:-89.398306},Fayette:{lat:35.196993,lng:-89.413803},Fentress:{lat:36.376079,lng:-84.932703},Franklin:{lat:35.155926,lng:-86.099203},Gibson:{lat:35.991694,lng:-88.933776},Giles:{lat:35.202723,lng:-87.035319},Grainger:{lat:36.277463,lng:-83.509493},Greene:{lat:36.178998,lng:-82.847746},Grundy:{lat:35.387273,lng:-85.722188},Hamblen:{lat:36.218397,lng:-83.266071},Hamilton:{lat:35.159186,lng:-85.202296},Hancock:{lat:36.52142,lng:-83.227453},Hardeman:{lat:35.218131,lng:-88.989037},Hardin:{lat:35.201893,lng:-88.185696},Hawkins:{lat:36.452206,lng:-82.931386},Haywood:{lat:35.58669,lng:-89.282536},Henderson:{lat:35.653995,lng:-88.387674},Henry:{lat:36.325398,lng:-88.300384},Hickman:{lat:35.802396,lng:-87.467114},Houston:{lat:36.285777,lng:-87.705605},Humphreys:{lat:36.04044,lng:-87.790625},Jackson:{lat:36.354242,lng:-85.674182},Jefferson:{lat:36.048479,lng:-83.440966},Johnson:{lat:36.453204,lng:-81.861237},Knox:{lat:35.992727,lng:-83.937721},Lake:{lat:36.333905,lng:-89.485537},Lauderdale:{lat:35.762951,lng:-89.627732},Lawrence:{lat:35.220476,lng:-87.396546},Lewis:{lat:35.523244,lng:-87.496983},Lincoln:{lat:35.142532,lng:-86.593388},Loudon:{lat:35.73745,lng:-84.316204},McMinn:{lat:35.424471,lng:-84.619963},McNairy:{lat:35.175626,lng:-88.564671},Macon:{lat:36.537838,lng:-86.001231},Madison:{lat:35.606056,lng:-88.833424},Marion:{lat:35.133422,lng:-85.618399},Marshall:{lat:35.468387,lng:-86.765886},Maury:{lat:35.615696,lng:-87.077763},Meigs:{lat:35.503397,lng:-84.823888},Monroe:{lat:35.447666,lng:-84.249786},Montgomery:{lat:36.500354,lng:-87.380887},Moore:{lat:35.288889,lng:-86.358684},Morgan:{lat:36.138697,lng:-84.639262},Obion:{lat:36.358175,lng:-89.150175},Overton:{lat:36.34485,lng:-85.283076},Perry:{lat:35.659785,lng:-87.877027},Pickett:{lat:36.559364,lng:-85.075741},Polk:{lat:35.109437,lng:-84.541112},Putnam:{lat:36.140807,lng:-85.496928},Rhea:{lat:35.600587,lng:-84.949552},Roane:{lat:35.847472,lng:-84.523861},Robertson:{lat:36.52753,lng:-86.869377},Rutherford:{lat:35.843369,lng:-86.417213},Scott:{lat:36.437239,lng:-84.498386},Sequatchie:{lat:35.372335,lng:-85.410344},Sevier:{lat:35.791284,lng:-83.521955},Shelby:{lat:35.183794,lng:-89.895397},Smith:{lat:36.25565,lng:-85.942078},Stewart:{lat:36.511756,lng:-87.851548},Sullivan:{lat:36.510212,lng:-82.299397},Sumner:{lat:36.470015,lng:-86.458517},Tipton:{lat:35.500297,lng:-89.763708},Trousdale:{lat:36.39303,lng:-86.156691},Unicoi:{lat:36.100215,lng:-82.418245},Union:{lat:36.28414,lng:-83.836088},"Van Buren":{lat:35.699245,lng:-85.458411},Warren:{lat:35.678282,lng:-85.777363},Washington:{lat:36.295665,lng:-82.495037},Wayne:{lat:35.242687,lng:-87.819703},Weakley:{lat:36.303523,lng:-88.720785},White:{lat:35.927062,lng:-85.455766},Williamson:{lat:35.894972,lng:-86.896958},Wilson:{lat:36.148476,lng:-86.29021}},cities:{Bartlett:{lat:35.2045328,lng:-89.8739753},Chattanooga:{lat:35.0456297,lng:-85.3096801},Clarksville:{lat:36.5297706,lng:-87.3594528},Cleveland:{lat:35.1595182,lng:-84.8766115},Collierville:{lat:35.042036,lng:-89.6645266},Franklin:{lat:35.9250637,lng:-86.8688899},Hendersonville:{lat:36.3047735,lng:-86.6199957},Jackson:{lat:35.6145169,lng:-88.81394689999999},"Johnson City":{lat:36.3134397,lng:-82.3534727},Kingsport:{lat:36.548434,lng:-82.5618186},Knoxville:{lat:35.9606384,lng:-83.9207392},Memphis:{lat:35.1495343,lng:-90.0489801},Murfreesboro:{lat:35.8456213,lng:-86.39027},Nashville:{lat:36.1658899,lng:-86.7844432},Smyrna:{lat:35.9828412,lng:-86.5186045}},center:{lat:35.7449,lng:-86.7489}},NJ:{counties:{Atlantic:{lat:39.469354,lng:-74.633758},Bergen:{lat:40.95909,lng:-74.074522},Burlington:{lat:39.875786,lng:-74.663006},Camden:{lat:39.802352,lng:-74.961251},"Cape May":{lat:39.086143,lng:-74.847716},Cumberland:{lat:39.328387,lng:-75.121644},Essex:{lat:40.787217,lng:-74.246136},Gloucester:{lat:39.721019,lng:-75.143708},Hudson:{lat:40.731384,lng:-74.078627},Hunterdon:{lat:40.565283,lng:-74.91197},Mercer:{lat:40.282503,lng:-74.703724},Middlesex:{lat:40.439593,lng:-74.407585},Monmouth:{lat:40.287056,lng:-74.152446},Morris:{lat:40.858581,lng:-74.547427},Ocean:{lat:39.86585,lng:-74.263027},Passaic:{lat:41.033763,lng:-74.300308},Salem:{lat:39.573828,lng:-75.357356},Somerset:{lat:40.565522,lng:-74.61993},Sussex:{lat:41.137424,lng:-74.691855},Union:{lat:40.659871,lng:-74.308696},Warren:{lat:40.853524,lng:-75.009542}},cities:{Bayonne:{lat:40.6687141,lng:-74.1143091},Camden:{lat:39.9259463,lng:-75.1196199},Clifton:{lat:40.8584328,lng:-74.16375529999999},"East Orange":{lat:40.767323,lng:-74.2048677},Elizabeth:{lat:40.6639916,lng:-74.2107006},Hackensack:{lat:40.8859325,lng:-74.0434736},Hoboken:{lat:40.7439905,lng:-74.0323626},"Jersey City":{lat:40.72815749999999,lng:-74.0776417},Kearny:{lat:40.7684342,lng:-74.1454214},"Lakewood Township":{lat:40.08212899999999,lng:-74.2097014},Newark:{lat:40.735657,lng:-74.1723667},"New Brunswick":{lat:40.4862157,lng:-74.4518188},Passaic:{lat:40.8567662,lng:-74.1284764},Paterson:{lat:40.9167654,lng:-74.17181099999999},"Perth Amboy":{lat:40.5067723,lng:-74.2654234},Plainfield:{lat:40.6337136,lng:-74.4073736},Sayreville:{lat:40.45940210000001,lng:-74.360846},"Toms River":{lat:39.9537358,lng:-74.1979458},Trenton:{lat:40.2170534,lng:-74.7429384},"Union City":{lat:40.7795455,lng:-74.02375119999999},Union:{lat:40.6357419,lng:-74.9580495},Vineland:{lat:39.4862267,lng:-75.02573129999999},"West New York":{lat:40.7878788,lng:-74.0143064}},center:{lat:40.314,lng:-74.5089}},NE:{counties:{Adams:{lat:40.520632,lng:-98.500044},Antelope:{lat:42.183225,lng:-98.058037},Arthur:{lat:41.570856,lng:-101.697045},Banner:{lat:41.53975,lng:-103.726263},Blaine:{lat:41.92523,lng:-99.990771},Boone:{lat:41.7054,lng:-98.066794},"Box Butte":{lat:42.215665,lng:-103.087821},Boyd:{lat:42.894448,lng:-98.773022},Brown:{lat:42.34939,lng:-99.923176},Buffalo:{lat:40.855226,lng:-99.074983},Burt:{lat:41.854179,lng:-96.337746},Butler:{lat:41.226072,lng:-97.13204},Cass:{lat:40.909878,lng:-96.140609},Cedar:{lat:42.604511,lng:-97.256824},Chase:{lat:40.53039,lng:-101.694192},Cherry:{lat:42.566985,lng:-101.072622},Cheyenne:{lat:41.214236,lng:-103.011929},Clay:{lat:40.523669,lng:-98.05105},Colfax:{lat:41.574675,lng:-97.089455},Cuming:{lat:41.915865,lng:-96.788517},Custer:{lat:41.393893,lng:-99.726866},Dakota:{lat:42.390456,lng:-96.562549},Dawes:{lat:42.711214,lng:-103.134872},Dawson:{lat:40.867378,lng:-99.815154},Deuel:{lat:41.112988,lng:-102.332604
},Dixon:{lat:42.48528,lng:-96.855862},Dodge:{lat:41.577008,lng:-96.645853},Douglas:{lat:41.297091,lng:-96.154066},Dundy:{lat:40.180165,lng:-101.681133},Fillmore:{lat:40.52504,lng:-97.596705},Franklin:{lat:40.183203,lng:-98.96208},Frontier:{lat:40.530947,lng:-100.406683},Furnas:{lat:40.191991,lng:-99.909661},Gage:{lat:40.255234,lng:-96.683453},Garden:{lat:41.659381,lng:-102.328229},Garfield:{lat:41.905572,lng:-98.922998},Gosper:{lat:40.509838,lng:-99.824078},Grant:{lat:41.915867,lng:-101.756875},Greeley:{lat:41.5676,lng:-98.530566},Hall:{lat:40.866023,lng:-98.498004},Hamilton:{lat:40.877145,lng:-98.021943},Harlan:{lat:40.178766,lng:-99.403418},Hayes:{lat:40.535786,lng:-101.05558},Hitchcock:{lat:40.176896,lng:-101.044217},Holt:{lat:42.459287,lng:-98.784766},Hooker:{lat:41.9187,lng:-101.11681},Howard:{lat:41.219403,lng:-98.513303},Jefferson:{lat:40.175736,lng:-97.143103},Johnson:{lat:40.395457,lng:-96.268562},Kearney:{lat:40.506269,lng:-98.948461},Keith:{lat:41.194404,lng:-101.644474},"Keya Paha":{lat:42.87548,lng:-99.718351},Kimball:{lat:41.199155,lng:-103.711105},Knox:{lat:42.634405,lng:-97.891349},Lancaster:{lat:40.783547,lng:-96.688658},Lincoln:{lat:41.050322,lng:-100.744481},Logan:{lat:41.542156,lng:-100.443665},Loup:{lat:41.897714,lng:-99.509764},McPherson:{lat:41.596473,lng:-101.060237},Madison:{lat:41.909929,lng:-97.606856},Merrick:{lat:41.169801,lng:-98.031051},Morrill:{lat:41.732205,lng:-102.990599},Nance:{lat:41.402386,lng:-97.991408},Nemaha:{lat:40.387448,lng:-95.850954},Nuckolls:{lat:40.176492,lng:-98.046842},Otoe:{lat:40.637992,lng:-96.131027},Pawnee:{lat:40.13785,lng:-96.245225},Perkins:{lat:40.856065,lng:-101.636443},Phelps:{lat:40.516365,lng:-99.406557},Pierce:{lat:42.271413,lng:-97.610992},Platte:{lat:41.576866,lng:-97.513467},Polk:{lat:41.187925,lng:-97.570663},"Red Willow":{lat:40.16942,lng:-100.468576},Richardson:{lat:40.123743,lng:-95.718603},Rock:{lat:42.413325,lng:-99.45853},Saline:{lat:40.516802,lng:-97.131755},Sarpy:{lat:41.115064,lng:-96.109125},Saunders:{lat:41.223152,lng:-96.640923},"Scotts Bluff":{lat:41.851589,lng:-103.70586},Seward:{lat:40.871944,lng:-97.140383},Sheridan:{lat:42.507074,lng:-102.389698},Sherman:{lat:41.218743,lng:-98.972849},Sioux:{lat:42.483806,lng:-103.742605},Stanton:{lat:41.904793,lng:-97.174724},Thayer:{lat:40.173845,lng:-97.596263},Thomas:{lat:41.84862,lng:-100.506911},Thurston:{lat:42.154061,lng:-96.533943},Valley:{lat:41.564094,lng:-98.983484},Washington:{lat:41.533979,lng:-96.224574},Wayne:{lat:42.210746,lng:-97.126243},Webster:{lat:40.180646,lng:-98.49859},Wheeler:{lat:41.937859,lng:-98.522289},York:{lat:40.873056,lng:-97.596742}},cities:{Bellevue:{lat:41.1586111,lng:-95.93416669999999},"Grand Island":{lat:40.9222222,lng:-98.35805560000001},Lincoln:{lat:40.806862,lng:-96.681679},Omaha:{lat:41.2523634,lng:-95.99798829999999}},center:{lat:41.1289,lng:-98.2883}},MT:{counties:{Beaverhead:{lat:45.133863,lng:-112.892869},"Big Horn":{lat:45.407869,lng:-107.518163},Blaine:{lat:48.428282,lng:-108.967648},Broadwater:{lat:46.334476,lng:-111.496103},Carbon:{lat:45.224475,lng:-109.028551},Carter:{lat:45.516825,lng:-104.515324},Cascade:{lat:47.316443,lng:-111.350571},Chouteau:{lat:47.886837,lng:-110.436189},Custer:{lat:46.261481,lng:-105.550508},Daniels:{lat:48.794429,lng:-105.541739},Dawson:{lat:47.272425,lng:-104.901027},"Deer Lodge":{lat:46.099059,lng:-113.139108},Fallon:{lat:46.318184,lng:-104.405718},Fergus:{lat:47.222997,lng:-109.22328},Flathead:{lat:48.314696,lng:-114.054319},Gallatin:{lat:45.535559,lng:-111.173443},Garfield:{lat:47.281174,lng:-106.982212},Glacier:{lat:48.705671,lng:-112.990502},"Golden Valley":{lat:46.380624,lng:-109.174586},Granite:{lat:46.395358,lng:-113.425683},Hill:{lat:48.628331,lng:-110.106372},Jefferson:{lat:46.126557,lng:-112.056771},"Judith Basin":{lat:47.032558,lng:-110.30532},Lake:{lat:47.642901,lng:-114.083687},"Lewis and Clark":{lat:47.122133,lng:-112.382954},Liberty:{lat:48.559654,lng:-111.036924},Lincoln:{lat:48.542232,lng:-115.404343},McCone:{lat:47.629628,lng:-105.757222},Madison:{lat:45.319288,lng:-111.917328},Meagher:{lat:46.585706,lng:-110.921781},Mineral:{lat:47.155213,lng:-115.06455},Missoula:{lat:47.027263,lng:-113.892681},Musselshell:{lat:46.505665,lng:-108.436982},Park:{lat:45.421905,lng:-110.532798},Petroleum:{lat:47.141917,lng:-108.226575},Phillips:{lat:48.250155,lng:-107.928833},Pondera:{lat:48.230312,lng:-112.219928},"Powder River":{lat:45.40889,lng:-105.555259},Powell:{lat:46.844225,lng:-112.9311},Prairie:{lat:46.852434,lng:-105.375808},Ravalli:{lat:46.079298,lng:-114.119065},Richland:{lat:47.785513,lng:-104.563387},Roosevelt:{lat:48.282747,lng:-104.99517},Rosebud:{lat:46.161734,lng:-106.701953},Sanders:{lat:47.756469,lng:-115.180225},Sheridan:{lat:48.705523,lng:-104.533913},"Silver Bow":{lat:45.895959,lng:-112.660222},Stillwater:{lat:45.663496,lng:-109.391752},"Sweet Grass":{lat:45.81306,lng:-109.941312},Teton:{lat:47.819035,lng:-112.281725},Toole:{lat:48.645052,lng:-111.733493},Treasure:{lat:46.209636,lng:-107.280494},Valley:{lat:48.365713,lng:-106.687883},Wheatland:{lat:46.497047,lng:-109.857147},Wibaux:{lat:46.962866,lng:-104.274466},Yellowstone:{lat:45.936987,lng:-108.276656}},cities:{Billings:{lat:45.7832856,lng:-108.5006904},"Great Falls":{lat:47.5002354,lng:-111.3008083},Missoula:{lat:46.8605189,lng:-114.019501}},center:{lat:46.9048,lng:-110.3261}},MS:{counties:{Adams:{lat:31.486218,lng:-91.351781},Alcorn:{lat:34.886648,lng:-88.581014},Amite:{lat:31.203933,lng:-90.795542},Attala:{lat:33.09047,lng:-89.588622},Benton:{lat:34.810773,lng:-89.200029},Bolivar:{lat:33.799278,lng:-90.884476},Calhoun:{lat:33.936634,lng:-89.337114},Carroll:{lat:33.440795,lng:-89.918887},Chickasaw:{lat:33.921654,lng:-88.945808},Choctaw:{lat:33.345964,lng:-89.251332},Claiborne:{lat:31.97281,lng:-90.915424},Clarke:{lat:32.048448,lng:-88.685964},Clay:{lat:33.661734,lng:-88.783326},Coahoma:{lat:34.22867,lng:-90.603165},Copiah:{lat:31.866915,lng:-90.448758},Covington:{lat:31.633331,lng:-89.548897},DeSoto:{lat:34.874266,lng:-89.99324},Forrest:{lat:31.18858,lng:-89.259447},Franklin:{lat:31.477798,lng:-90.895884},George:{lat:30.855431,lng:-88.642268},Greene:{lat:31.212846,lng:-88.634811},Grenada:{lat:33.770031,lng:-89.80274},Hancock:{lat:30.391437,lng:-89.47985},Harrison:{lat:30.416536,lng:-89.083376},Hinds:{lat:32.267924,lng:-90.4659},Holmes:{lat:33.125942,lng:-90.091197},Humphreys:{lat:33.132978,lng:-90.523911},Issaquena:{lat:32.754977,lng:-90.988552},Itawamba:{lat:34.281075,lng:-88.363127},Jackson:{lat:30.458491,lng:-88.619991},Jasper:{lat:32.016989,lng:-89.11943},Jefferson:{lat:31.733633,lng:-91.043878},"Jefferson Davis":{lat:31.564734,lng:-89.826626},Jones:{lat:31.621044,lng:-89.167262},Kemper:{lat:32.750136,lng:-88.625631},Lafayette:{lat:34.349298,lng:-89.485903},Lamar:{lat:31.197135,lng:-89.514952},Lauderdale:{lat:32.403998,lng:-88.660449},Lawrence:{lat:31.550009,lng:-90.10753},Leake:{lat:32.753268,lng:-89.522568},Lee:{lat:34.288965,lng:-88.680887},Leflore:{lat:33.54979,lng:-90.294934},Lincoln:{lat:31.535216,lng:-90.453566},Lowndes:{lat:33.471424,lng:-88.439723},Madison:{lat:32.63437,lng:-90.03416},Marion:{lat:31.230126,lng:-89.821736},Marshall:{lat:34.76619,lng:-89.504231},Monroe:{lat:33.89003,lng:-88.485038},Montgomery:{lat:33.500714,lng:-89.639625},Neshoba:{lat:32.752518,lng:-89.119274},Newton:{lat:32.40197,lng:-89.118412},Noxubee:{lat:33.10627,lng:-88.565787},Oktibbeha:{lat:33.422313,lng:-88.876151},Panola:{lat:34.365205,lng:-89.963065},"Pearl River":{lat:30.773791,lng:-89.586832},Perry:{lat:31.169307,lng:-88.988755},Pike:{lat:31.177517,lng:-90.397725},Pontotoc:{lat:34.227081,lng:-89.037239},Prentiss:{lat:34.620866,lng:-88.52224},Quitman:{lat:34.25264,lng:-90.290525},Rankin:{lat:32.262057,lng:-89.946552},Scott:{lat:32.427127,lng:-89.533209},Sharkey:{lat:32.89249,lng:-90.827388},Simpson:{lat:31.902503,lng:-89.917707},Smith:{lat:32.019034,lng:-89.494973},Stone:{lat:30.790184,lng:-89.112297},Sunflower:{lat:33.605529,lng:-90.59509},Tallahatchie:{lat:33.955891,lng:-90.172833},Tate:{lat:34.649553,lng:-89.943105},Tippah:{lat:34.763618,lng:-88.918819},Tishomingo:{lat:34.737699,lng:-88.236067},Tunica:{lat:34.652201,lng:-90.37177},Union:{lat:34.489101,lng:-89.0023},Walthall:{lat:31.164492,lng:-90.103431},Warren:{lat:32.357005,lng:-90.851791},Washington:{lat:33.273131,lng:-90.94443},Wayne:{lat:31.64476,lng:-88.682057},Webster:{lat:33.612048,lng:-89.283836},Wilkinson:{lat:31.160249,lng:-91.325567},Winston:{lat:33.078724,lng:-89.037391},Yalobusha:{lat:34.030669,lng:-89.703793},Yazoo:{lat:32.765675,lng:-90.387928}},cities:{Biloxi:{lat:30.3960318,lng:-88.88530779999999},Gulfport:{lat:30.3674198,lng:-89.0928155},Hattiesburg:{lat:31.3271189,lng:-89.29033919999999},Jackson:{lat:32.2987573,lng:-90.1848103},Meridian:{lat:32.3643098,lng:-88.703656},Southaven:{lat:34.9889818,lng:-90.0125913}},center:{lat:32.7673,lng:-89.6812}},ND:{counties:{Adams:{lat:46.096815,lng:-102.533198},Barnes:{lat:46.94255,lng:-98.070195},Benson:{lat:48.071738,lng:-99.361987},Billings:{lat:47.009283,lng:-103.364924},Bottineau:{lat:48.794412,lng:-100.831257},Bowman:{lat:46.107807,lng:-103.506586},Burke:{lat:48.786453,lng:-102.520087},Burleigh:{lat:46.971843,lng:-100.462001},Cass:{lat:46.927003,lng:-97.252375},Cavalier:{lat:48.768439,lng:-98.46379},Dickey:{lat:46.107756,lng:-98.496518},Divide:{lat:48.818142,lng:-103.497653},Dunn:{lat:47.35461,lng:-102.612365},Eddy:{lat:47.723436,lng:-98.900475},Emmons:{lat:46.284255,lng:-100.237842},Foster:{lat:47.464327,lng:-98.872817},"Golden Valley":{lat:46.938924,lng:-103.844612},"Grand Forks":{lat:47.926003,lng:-97.450851},Grant:{lat:46.357827,lng:-101.639049},Griggs:{lat:47.463463,lng:-98.232444},Hettinger:{lat:46.434939,lng:-102.458385},Kidder:{lat:46.935385,lng:-99.742727},LaMoure:{lat:46.464195,lng:-98.526057},Logan:{lat:46.469278,lng:-99.504585},McHenry:{lat:48.233842,lng:-100.633267},McIntosh:{lat:46.117034,lng:-99.443041},McKenzie:{lat:47.742475,lng:-103.403215},McLean:{lat:47.653055,lng:-101.421794},Mercer:{lat:47.303279,lng:-101.820765},Morton:{lat:46.713789,lng:-101.279743},Mountrail:{lat:48.210291,lng:-102.364756},Nelson:{lat:47.918667,lng:-98.204428},Oliver:{lat:47.118079,lng:-101.33142},Pembina:{lat:48.766896,lng:-97.545405},Pierce:{lat:48.238883,lng:-99.966497},Ramsey:{lat:48.265551,lng:-98.737329},Ransom:{lat:46.449276,lng:-97.647554},Renville:{lat:48.712782,lng:-101.658152},Richland:{lat:46.265219,lng:-96.93796},Rolette:{lat:48.768272,lng:-99.840463},Sargent:{lat:46.108206,lng:-97.63003},Sheridan:{lat:47.581373,lng:-100.341499},Sioux:{lat:46.109282,lng:-101.047525},Slope:{lat:46.445834,lng:-103.462462},Stark:{lat:46.817031,lng:-102.662026},Steele:{lat:47.458288,lng:-97.718895},Stutsman:{lat:46.971103,lng:-98.957592},Towner:{lat:48.682183,lng:-99.248158},Traill:{lat:47.446215,lng:-97.164754},Walsh:{lat:48.376979,lng:-97.72223},Ward:{lat:48.216686,lng:-101.540537},Wells:{lat:47.580851,lng:-99.671502},Williams:{lat:48.345867,lng:-103.4874}},cities:{Bismarck:{lat:46.8083268,lng:-100.7837392},Fargo:{lat:46.8771863,lng:-96.7898034},"Grand Forks":{lat:47.9252568,lng:-97.0328547},Minot:{lat:48.2325095,lng:-101.2962732}},center:{lat:47.5362,lng:-99.793}},MO:{counties:{Adair:{lat:40.190666,lng:-92.603592},Andrew:{lat:39.988863,lng:-94.803551},Atchison:{lat:40.431846,lng:-95.437555},Audrain:{lat:39.21448,lng:-91.843415},Barry:{lat:36.699378,lng:-93.834326},Barton:{lat:37.500799,lng:-94.344089},Bates:{lat:38.257217,lng:-94.339246},Benton:{lat:38.301036,lng:-93.287942},Bollinger:{lat:37.318349,lng:-90.024601},Boone:{lat:38.989657,lng:-92.310779},Buchanan:{lat:39.66037,lng:-94.808173},Butler:{lat:36.71518,lng:-90.40313},Caldwell:{lat:39.658998,lng:-93.979179},Callaway:{lat:38.835966,lng:-91.924089},Camden:{lat:38.031995,lng:-92.765138},"Cape Girardeau":{lat:37.383882,lng:-89.684908},Carroll:{lat:39.427375,lng:-93.500227},Carter:{lat:36.944783,lng:-90.945626},Cass:{lat:38.647159,lng:-94.354242},Cedar:{lat:37.733655,lng:-93.850014},Chariton:{lat:39.517969,lng:-92.961621},Christian:{lat:36.969739,lng:-93.187614},Clark:{lat:40.407275,lng:-91.729472},Clay:{lat:39.315551,lng:-94.421502},Clinton:{lat:39.608723,lng:-94.395803},Cole:{lat:38.506847,lng:-92.271404},Cooper:{lat:38.845386,lng:-92.812323},Crawford:{lat:37.966561,lng:-91.313933},Dade:{lat:37.43235,lng:-93.854878},Dallas:{lat:37.683583,lng:-93.033812},Daviess:{lat:39.962839,lng:-93.970053},DeKalb:{lat:39.894665,lng:-94.40719},Dent:{lat:37.60325,lng:-91.495916},Douglas:{lat:36.946517,lng:-92.515892},Dunklin:{lat:36.153025,lng:-90.062254},Franklin:{lat:38.408313,lng:-91.07341},Gasconade:{lat:38.441183,lng:-91.50578},Gentry:{lat:40.209379,lng:-94.40411},Greene:{lat:37.258196,lng:-93.340641},Grundy:{lat:40.112541,lng:-93.565054},Harrison:{lat:40.34562,lng:-93.992582},Henry:{lat:38.386491,lng:-93.792628},Hickory:{lat:37.9367,lng:-93.322835},Holt:{lat:40.095724,lng:-95.219072},Howard:{lat:39.143365,lng:-92.695926},Howell:{lat:36.774369,lng:-91.887368},Iron:{lat:37.62596,lng:-90.699627},Jackson:{lat:39.007233,lng:-94.342507},Jasper:{lat:37.200865,lng:-94.338869},Jefferson:{lat:38.257414,lng:-90.543138},Johnson:{lat:38.74588,lng:-93.805999},Knox:{lat:40.136776,lng:-92.146809},Laclede:{lat:37.65969,lng:-92.594832},Lafayette:{lat:39.068705,lng:-93.802639},Lawrence:{lat:37.106135,lng:-93.833262},Lewis:{lat:40.084559,lng:-91.728803},Lincoln:{lat:39.058568,lng:-90.957771},Linn:{lat:39.86444,lng:-93.108019},Livingston:{lat:39.778587,lng:-93.548201},McDonald:{lat:36.630218,lng:-94.343956},Macon:{lat:39.829795,lng:-92.56434},Madison:{lat:37.473235,lng:-90.345453},Maries:{lat:38.162615,lng:-91.923601},Marion:{lat:39.807538,lng:-91.635379},Mercer:{lat:40.421414,lng:-93.567631},Miller:{lat:38.21672,lng:-92.429871},Mississippi:{lat:36.826264,lng:-89.295929},Moniteau:{lat:38.633037,lng:-92.583642},Monroe:{lat:39.49827,lng:-92.006458},Montgomery:{lat:38.935162,lng:-91.465437},Morgan:{lat:38.420807,lng:-92.874835},"New Madrid":{lat:36.594261,lng:-89.655949},Newton:{lat:36.908017,lng:-94.334741},Nodaway:{lat:40.360484,lng:-94.883281},Oregon:{lat:36.684867,lng:-91.402902},Osage:{lat:38.464254,lng:-91.859504},Ozark:{lat:36.649643,lng:-92.45858},Pemiscot:{lat:36.209916,lng:-89.785942},Perry:{lat:37.71113,lng:-89.802125},Pettis:{lat:38.727367,lng:-93.285207},Phelps:{lat:37.866326,lng:-91.790349},Pike:{lat:39.344178,lng:-91.171042},Platte:{lat:39.378696,lng:-94.761472},Polk:{lat:37.616761,lng:-93.400817},Pulaski:{lat:37.824835,lng:-92.207022},Putnam:{lat:40.478606,lng:-93.014531},Ralls:{lat:39.553455,lng:-91.524787},Randolph:{lat:39.441601,lng:-92.492725},Ray:{lat:39.308401,lng:-93.995746},Reynolds:{lat:37.360857,lng:-90.969516},Ripley:{lat:36.648902,lng:-90.86706},"St. Charles":{lat:38.781102,lng:-90.674915},"St. Clair":{lat:38.039069,lng:-93.773077},"Ste. Genevieve":{lat:37.89018,lng:-90.18117},"St. Francois":{lat:37.810707,lng:-90.473868},"St. Louis":{lat:38.635699,lng:-90.244582},Saline:{lat:39.13584,lng:-93.204164},Schuyler:{lat:40.469361,lng:-92.519016},Scotland:{lat:40.447686,lng:-92.142824},Scott:{lat:37.047793,lng:-89.568098},Shannon:{lat:37.15198,lng:-91.398364},Shelby:{lat:39.797531,lng:-92.088719},Stoddard:{lat:36.855428,lng:-89.941735},Stone:{lat:36.747857,lng:-93.467782},Sullivan:{lat:40.209587,lng:-93.109783},Taney:{lat:36.649827,lng:-93.042819},Texas:{lat:37.314257,lng:-91.964478},Vernon:{lat:37.850196,lng:-94.341597},Warren:{lat:38.761902,lng:-91.159307},Washington:{lat:37.942315,lng:-90.897056},Wayne:{lat:37.113825,lng:-90.460868},Webster:{lat:37.280804,lng:-92.87608},Worth:{lat:40.480482,lng:-94.419129},Wright:{lat:37.267636,lng:-92.48001}},cities:{"Blue Springs":{lat:39.0169509,lng:-94.2816148},Chesterfield:{lat:38.6631083,lng:-90.5770675},Columbia:{lat:38.9517053,lng:-92.3340724},Florissant:{lat:38.789217,lng:-90.322614},Independence:{lat:39.0911161,lng:-94.41550679999999},"Jefferson City":{lat:38.57670170000001,lng:-92.1735164},Joplin:{lat:37.08422710000001,lng:-94.51328099999999},"Kansas City":{lat:39.0997265,lng:-94.5785667},"Lee's Summit":{lat:38.916343,lng:-94.383516},"O'Fallon":{lat:38.8106075,lng:-90.69984769999999},"St Charles":{lat:38.7833333,lng:-90.5166667},"St Joseph":{lat:39.7577778,lng:-94.83638889999999},"St Louis":{lat:38.6270025,lng:-90.19940419999999},"St Peters":{lat:38.778475,lng:-90.60528099999999},Springfield:{lat:37.2089572,lng:-93.29229889999999}},center:{lat:38.4623,lng:-92.302}},ID:{counties:{Ada:{lat:43.447861,lng:-116.244456},Adams:{lat:44.884583,lng:-116.431873},Bannock:{lat:42.692939,lng:-112.228986},"Bear Lake":{lat:42.285833,lng:-111.327445},Benewah:{lat:47.218451,lng:-116.633541},Bingham:{lat:43.216357,lng:-112.399206},Blaine:{lat:43.394482,lng:-113.95529},Boise:{lat:43.987275,lng:-115.715111},Bonner:{lat:48.312512,lng:-116.59694},Bonneville:{lat:43.395171,lng:-111.621878},Boundary:{lat:48.773065,lng:-116.524619},Butte:{lat:43.6851,lng:-113.177627},Camas:{lat:43.463396,lng:-114.804427},Canyon:{lat:43.623051,lng:-116.708527},Caribou:{lat:42.786273,lng:-111.544172},Cassia:{lat:42.288635,lng:-113.605498},Clark:{lat:44.286251,lng:-112.36112},Clearwater:{lat:46.67257,lng:-115.6535},Custer:{lat:44.273341,lng:-114.252251},Elmore:{lat:43.394826,lng:-115.470751},Franklin:{lat:42.173589,lng:-111.822955},Fremont:{lat:44.218091,lng:-111.484429},Gem:{lat:44.061473,lng:-116.398784},Gooding:{lat:42.973185,lng:-114.82142},Idaho:{lat:45.849237,lng:-115.467376},Jefferson:{lat:43.796965,lng:-112.318588},Jerome:{lat:42.691172,lng:-114.263009},Kootenai:{lat:47.677113,lng:-116.694918},Latah:{lat:46.81892,lng:-116.730974},Lemhi:{lat:44.928789,lng:-113.887841},Lewis:{lat:46.236328,lng:-116.42376},Lincoln:{lat:42.986181,lng:-114.153899},Madison:{lat:43.789709,lng:-111.65655},Minidoka:{lat:42.856937,lng:-113.64001},"Nez Perce":{lat:46.333766,lng:-116.760903},Oneida:{lat:42.18389,lng:-112.520465},Owyhee:{lat:42.593063,lng:-116.142655},Payette:{lat:44.00274,lng:-116.748655},Power:{lat:42.694126,lng:-112.844407},Shoshone:{lat:47.347694,lng:-115.885092},Teton:{lat:43.760994,lng:-111.211765},"Twin Falls":{lat:42.352309,lng:-114.665639},Valley:{lat:44.771532,lng:-115.637875},Washington:{lat:44.448213,lng:-116.79783}},cities:{Boise:{lat:43.612631,lng:-116.211076},Caldwell:{lat:43.66293839999999,lng:-116.6873596},"Coeur d'Alene":{lat:47.6776832,lng:-116.7804664},"Idaho Falls":{lat:43.49165139999999,lng:-112.0339645},Meridian:{lat:43.6121087,lng:-116.3915131},Nampa:{lat:43.5407172,lng:-116.5634624},Pocatello:{lat:42.8713032,lng:-112.4455344},"Twin Falls":{lat:42.5629668,lng:-114.4608711}},center:{lat:44.2394,lng:-114.5103}},UT:{counties:{Beaver:{lat:38.357535,lng:-113.238948},"Box Elder":{lat:41.476021,lng:-113.052922},Cache:{lat:41.734225,lng:-111.744581},Carbon:{lat:39.67005,lng:-110.590357},Daggett:{lat:40.890099,lng:-109.505786},Davis:{lat:41.037045,lng:-112.202123},Duchesne:{lat:40.289649,lng:-110.42983},Emery:{lat:39.009028,lng:-110.721111},Garfield:{lat:37.831622,lng:-111.450886},Grand:{lat:38.974326,lng:-109.57345},Iron:{lat:37.882727,lng:-113.290059},Juab:{lat:39.710827,lng:-112.794262},Kane:{lat:37.275118,lng:-111.815413},Millard:{lat:39.09454,lng:-113.525014},Morgan:{lat:41.091027,lng:-111.577885},Piute:{lat:38.335881,lng:-112.129376},Rich:{lat:41.627598,lng:-111.240227},"Salt Lake":{lat:40.667882,lng:-111.924244},"San Juan":{lat:37.623064,lng:-109.78932},Sanpete:{lat:39.380588,lng:-111.570451},Sevier:{lat:38.746825,lng:-111.81193},Summit:{lat:40.87206,lng:-110.968486},Tooele:{lat:40.467692,lng:-113.124015},Uintah:{lat:40.125887,lng:-109.517748},Utah:{lat:40.120409,lng:-111.668667},Wasatch:{lat:40.334884,lng:-111.161568},Washington:{lat:37.262531,lng:-113.4878},Wayne:{lat:38.261229,lng:-110.990323},Weber:{lat:41.270355,lng:-111.875879}},cities:{Bountiful:{lat:40.8893895,lng:-111.880771},Draper:{lat:40.5246711,lng:-111.8638226},Layton:{lat:41.0602216,lng:-111.9710529},Lehi:{lat:40.3916172,lng:-111.8507662},Logan:{lat:41.7354861,lng:-111.834388},Millcreek:{lat:40.6868914,lng:-111.8754907},Murray:{lat:40.6668916,lng:-111.8879909},Ogden:{lat:41.223,lng:-111.9738304},Orem:{lat:40.2968979,lng:-111.6946475},Provo:{lat:40.2338438,lng:-111.6585337},Riverton:{lat:40.521893,lng:-111.9391023},"St George":{lat:37.0952778,lng:-113.5780556},"Salt Lake City":{lat:40.7607793,lng:-111.8910474},Sandy:{lat:40.57250000000001,lng:-111.8597222},"South Jordan":{lat:40.5621704,lng:-111.929658},Taylorsville:{lat:40.66772479999999,lng:-111.9388258},"West Jordan":{lat:40.6096698,lng:-111.9391031},"West Valley City":{lat:40.6916132,lng:-112.0010501}},center:{lat:40.1135,lng:-111.8535}},KY:{counties:{Adair:{lat:37.105541,lng:-85.281401},Allen:{lat:36.75077,lng:-86.192458},Anderson:{lat:38.005396,lng:-84.986417},Ballard:{lat:37.05112,lng:-89.009178},Barren:{lat:36.963614,lng:-85.92499},Bath:{lat:38.152249,lng:-83.737641},Bell:{lat:36.72268,lng:-83.681046},Boone:{lat:38.974595,lng:-84.731444},Bourbon:{lat:38.202562,lng:-84.20986},Boyd:{lat:38.360004,lng:-82.681406},Boyle:{lat:37.6182,lng:-84.873016},Bracken:{lat:38.678523,lng:-84.100355},Breathitt:{lat:37.521178,lng:-83.322401},Breckinridge:{lat:37.778109,lng:-86.432829},Bullitt:{lat:37.969572,lng:-85.703036},Butler:{lat:37.207013,lng:-86.682471},Caldwell:{lat:37.148643,lng:-87.87051},Calloway:{lat:36.620978,lng:-88.274086},Campbell:{lat:38.946981,lng:-84.379583},Carlisle:{lat:36.857726,lng:-88.975757},Carroll:{lat:38.668284,lng:-85.124083},Carter:{lat:38.309555,lng:-83.048821},Casey:{lat:37.321962,lng:-84.92822},Christian:{lat:36.893388,lng:-87.493554},Clark:{lat:37.970133,lng:-84.144974},Clay:{lat:37.164466,lng:-83.710763},Clinton:{lat:36.729124,lng:-85.153499},Crittenden:{lat:37.358149,lng:-88.10501},Cumberland:{lat:36.784227,lng:-85.393499},Daviess:{lat:37.731671,lng:-87.087139},Edmonson:{lat:37.227856,lng:-86.217778},Elliott:{lat:38.116425,lng:-83.097541},Estill:{lat:37.69246,lng:-83.963927},Fayette:{lat:38.040157,lng:-84.458443},Fleming:{lat:38.368431,lng:-83.706152},Floyd:{lat:37.558283,lng:-82.740337},Franklin:{lat:38.234919,lng:-84.868786},Fulton:{lat:36.55262,lng:-89.187723},Gallatin:{lat:38.760184,lng:-84.862114},Garrard:{lat:37.630162,lng:-84.545856},Grant:{lat:38.64921,lng:-84.625946},Graves:{lat:36.723344,lng:-88.649897},Grayson:{lat:37.458577,lng:-86.344011},Green:{lat:37.269637,lng:-85.561403},Greenup:{lat:38.563596,lng:-82.933833},Hancock:{lat:37.843389,lng:-86.792773},Hardin:{lat:37.695836,lng:-85.963183},Harlan:{lat:36.859223,lng:-83.221497},Harrison:{lat:38.443489,lng:-84.332796},Hart:{lat:37.313856,lng:-85.881995},Henderson:{lat:37.792542,lng:-87.572577},Henry:{lat:38.451561,lng:-85.120079},Hickman:{lat:36.675916,lng:-88.97202},Hopkins:{lat:37.31107,lng:-87.542196},Jackson:{lat:37.40332,lng:-84.020686},Jefferson:{lat:38.189533,lng:-85.657624},Jessamine:{lat:37.873291,lng:-84.58396},Johnson:{lat:37.84926,lng:-82.830639},Kenton:{lat:38.930477,lng:-84.533492},Knott:{lat:37.354703,lng:-82.949138},Knox:{lat:36.887476,lng:-83.85563},Larue:{lat:37.545518,lng:-85.697209},Laurel:{lat:37.113268,lng:-84.119395},Lawrence:{lat:38.074459,lng:-82.738305},Lee:{lat:37.605383,lng:-83.718497},Leslie:{lat:37.087846,lng:-83.388616},Letcher:{lat:37.118503,lng:-82.861175},Lewis:{lat:38.532051,lng:-83.373303},Lincoln:{lat:37.457257,lng:-84.658074},Livingston:{lat:37.209517,lng:-88.363426},Logan:{lat:36.859829,lng:-86.881436},Lyon:{lat:37.023976,lng:-88.083391},McCracken:{lat:37.053688,lng:-88.712378},McCreary:{lat:36.731136,lng:-84.491052},McLean:{lat:37.530575,lng:-87.262931},Madison:{lat:37.723528,lng:-84.277008},Magoffin:{lat:37.698954,lng:-83.069716},Marion:{lat:37.552247,lng:-85.269242},Marshall:{lat:36.882017,lng:-88.332752},Martin:{lat:37.796774,lng:-82.506623},Mason:{lat:38.594068,lng:-83.828052},Meade:{lat:37.967476,lng:-86.200863},Menifee:{lat:37.950715,lng:-83.597345},Mercer:{lat:37.812085,lng:-84.879695},Metcalfe:{lat:36.990394,lng:-85.629554},Monroe:{lat:36.714077,lng:-85.713508},Montgomery:{lat:38.038138,lng:-83.912338},Morgan:{lat:37.92294,lng:-83.258944},Muhlenberg:{lat:37.213816,lng:-87.134092},Nelson:{lat:37.803188,lng:-85.465955},Nicholas:{lat:38.337132,lng:-84.025554},Ohio:{lat:37.477859,lng:-86.844871},Oldham:{lat:38.400046,lng:-85.456059},Owen:{lat:38.499603,lng:-84.841509},Owsley:{lat:37.423452,lng:-83.691566},Pendleton:{lat:38.690765,lng:-84.354041},Perry:{lat:37.241282,lng:-83.217772},Pike:{lat:37.482067,lng:-82.402869},Powell:{lat:37.810379,lng:-83.826985},Pulaski:{lat:37.108312,lng:-84.579986},Robertson:{lat:38.513826,lng:-84.063757},Rockcastle:{lat:37.36122,lng:-84.314419},Rowan:{lat:38.205894,lng:-83.425969},Russell:{lat:36.989127,lng:-85.058976},Scott:{lat:38.289882,lng:-84.579376},Shelby:{lat:38.239426,lng:-85.22836},Simpson:{lat:36.740863,lng:-86.581464},Spencer:{lat:38.026976,lng:-85.321525},Taylor:{lat:37.365106,lng:-85.326698},Todd:{lat:36.840338,lng:-87.183642},Trigg:{lat:36.807681,lng:-87.858652},Trimble:{lat:38.618193,lng:-85.355171},Union:{lat:37.658029,lng:-87.95165},Warren:{lat:36.995634,lng:-86.423579},Washington:{lat:37.754209,lng:-85.175416},Wayne:{lat:36.802011,lng:-84.83044},Webster:{lat:37.520021,lng:-87.685095},Whitley:{lat:36.758021,lng:-84.14455},Wolfe:{lat:37.743774,lng:-83.495068},Woodford:{lat:38.042789,lng:-84.748147}},cities:{"Bowling Green":{lat:36.9903199,lng:-86.4436018},Lexington:{lat:38.0405837,lng:-84.5037164},Louisville:{lat:38.2526647,lng:-85.7584557},Owensboro:{lat:37.7719074,lng:-87.1111676}},center:{lat:37.669,lng:-84.6514}},CT:{counties:{Fairfield:{lat:41.228103,lng:-73.366757},Hartford:{lat:41.806053,lng:-72.732916},Litchfield:{lat:41.791897,lng:-73.235428},Middlesex:{lat:41.434525,lng:-72.524227},"New Haven":{lat:41.349717,lng:-72.900204},"New London":{lat:41.47863,lng:-72.103452},Tolland:{lat:41.858076,lng:-72.340977},Windham:{lat:41.824999,lng:-71.990702}},cities:{Bridgeport:{lat:41.1865478,lng:-73.19517669999999},Bristol:{lat:41.67176480000001,lng:-72.9492703},Danbury:{lat:41.394817,lng:-73.4540111},"East Hartford":{lat:41.7634219,lng:-72.6128339},Hartford:{lat:41.76371109999999,lng:-72.6850932},Meriden:{lat:41.5381535,lng:-72.80704349999999},Middletown:{lat:41.5623209,lng:-72.6506488},Milford:{lat:41.2308945,lng:-73.0635844},"New Britain":{lat:41.6612104,lng:-72.7795419},"New Haven":{lat:41.3081527,lng:-72.9281577},Norwalk:{lat:41.1175966,lng:-73.40789680000002},Stamford:{lat:41.0534302,lng:-73.5387341},Stratford:{lat:41.18454149999999,lng:-73.1331651},Waterbury:{lat:41.5581525,lng:-73.0514965},"West Hartford":{lat:41.7620842,lng:-72.7420151},"West Haven":{lat:41.2706527,lng:-72.94704709999999}},center:{lat:41.5834,lng:-72.7622}},OK:{counties:{Adair:{lat:35.8975,lng:-94.651671},Alfalfa:{lat:36.729703,lng:-98.323445},Atoka:{lat:34.374813,lng:-96.034705},Beaver:{lat:36.748334,lng:-100.483056},Beckham:{lat:35.273945,lng:-99.671638},Blaine:{lat:35.877782,lng:-98.428934},Bryan:{lat:33.964004,lng:-96.264137},Caddo:{lat:35.16792,lng:-98.381045},Canadian:{lat:35.543416,lng:-97.979836},Carter:{lat:34.251848,lng:-97.287927},Cherokee:{lat:35.904367,lng:-94.996796},Choctaw:{lat:34.027645,lng:-95.554208},Cimarron:{lat:36.755276,lng:-102.508735},Cleveland:{lat:35.203117,lng:-97.328332},Coal:{lat:34.582861,lng:-96.288039},Comanche:{lat:34.662628,lng:-98.476597},Cotton:{lat:34.290676,lng:-98.373438},Craig:{lat:36.76389,lng:-95.201553},Creek:{lat:35.907732,lng:-96.379793},Custer:{lat:35.645601,lng:-98.997386},Delaware:{lat:36.393369,lng:-94.808206},Dewey:{lat:35.978433,lng:-99.014094},Ellis:{lat:36.224258,lng:-99.750139},Garfield:{lat:36.378273,lng:-97.787729},Garvin:{lat:34.70935,lng:-97.312723},Grady:{lat:35.021058,lng:-97.88689},Grant:{lat:36.788254,lng:-97.788151},Greer:{lat:34.935263,lng:-99.552968},Harmon:{lat:34.745971,lng:-99.844194},Harper:{lat:36.800456,lng:-99.662842},Haskell:{lat:35.232294,lng:-95.109578},Hughes:{lat:35.052934,lng:-96.251183},Jackson:{lat:34.593949,lng:-99.41221},Jefferson:{lat:34.105092,lng:-97.838814},Johnston:{lat:34.313455,lng:-96.654255},Kay:{lat:36.814842,lng:-97.143755},Kingfisher:{lat:35.949431,lng:-97.934568},Kiowa:{lat:34.921489,lng:-98.981617},Latimer:{lat:34.875137,lng:-95.272263},"Le Flore":{lat:34.899642,lng:-94.703491},Lincoln:{lat:35.703118,lng:-96.881392},Logan:{lat:35.914151,lng:-97.450764},Love:{lat:33.957775,lng:-97.245124},McClain:{lat:35.016414,lng:-97.449811},McCurtain:{lat:34.117073,lng:-94.766086},McIntosh:{lat:35.369092,lng:-95.671764},Major:{lat:36.313119,lng:-98.542015},Marshall:{lat:34.027007,lng:-96.770533},Mayes:{lat:36.303804,lng:-95.235638},Murray:{lat:34.485766,lng:-97.071557},Muskogee:{lat:35.617551,lng:-95.383911},Noble:{lat:36.384901,lng:-97.236335},Nowata:{lat:36.789615,lng:-95.613312},Okfuskee:{lat:35.466804,lng:-96.327762},Oklahoma:{lat:35.554611,lng:-97.409401},Okmulgee:{lat:35.646879,lng:-95.96458},Osage:{lat:36.62468,lng:-96.408385},Ottawa:{lat:36.835764,lng:-94.802681},Pawnee:{lat:36.313704,lng:-96.696669},Payne:{lat:36.079225,lng:-96.975255},Pittsburg:{lat:34.92554,lng:-95.74813},Pontotoc:{lat:34.721071,lng:-96.692738},Pottawatomie:{lat:35.211393,lng:-96.957007},Pushmataha:{lat:34.377896,lng:-95.408085},"Roger Mills":{lat:35.708554,lng:-99.741572},Rogers:{lat:36.378082,lng:-95.601337},Seminole:{lat:35.158366,lng:-96.602858},Sequoyah:{lat:35.502435,lng:-94.750757},Stephens:{lat:34.481361,lng:-97.855607},Texas:{lat:36.741964,lng:-101.488434},Tillman:{lat:34.371085,lng:-98.931701},Tulsa:{lat:36.120121,lng:-95.941731},Wagoner:{lat:35.963479,lng:-95.5141},Washington:{lat:36.70438,lng:-95.906155},Washita:{lat:35.290177,lng:-98.991962},Woods:{lat:36.765141,lng:-98.868967},Woodward:{lat:36.425619,lng:-99.273661}},cities:{"Broken Arrow":{lat:36.0525993,lng:-95.7908195},Edmond:{lat:35.6528323,lng:-97.47809540000002},Enid:{lat:36.3955891,lng:-97.8783911},Lawton:{lat:34.6086854,lng:-98.39033049999999},"Midwest City":{lat:35.4495065,lng:-97.3967019},Moore:{lat:35.3395079,lng:-97.48670279999999},Norman:{lat:35.2225668,lng:-97.4394777},"Oklahoma City":{lat:35.5006256,lng:-97.6114217},Stillwater:{lat:36.1156071,lng:-97.0583681},Tulsa:{lat:36.1539816,lng:-95.99277500000001}},center:{lat:35.5376,lng:-96.9247}},VT:{counties:{Addison:{lat:44.031248,lng:-73.141581},Bennington:{lat:43.035325,lng:-73.11146},Caledonia:{lat:44.468791,lng:-72.112168},Chittenden:{lat:44.460676,lng:-73.070525},Essex:{lat:44.724021,lng:-71.732736},Franklin:{lat:44.858964,lng:-72.909402},"Grand Isle":{lat:44.801788,lng:-73.300758},Lamoille:{lat:44.603504,lng:-72.638356},Orange:{lat:44.003392,lng:-72.369687},Orleans:{lat:44.828442,lng:-72.25163},Rutland:{lat:43.580844,lng:-73.038196},Washington:{lat:44.274953,lng:-72.609475},Windham:{lat:42.999143,lng:-72.716335},Windsor:{lat:43.588143,lng:-72.591515}},cities:{Burlington:{lat:44.4758825,lng:-73.21207199999999}},center:{lat:44.0407,lng:-72.7093}},WY:{counties:{Albany:{lat:41.665514,lng:-105.721883},"Big Horn":{lat:44.525654,lng:-107.993321},Campbell:{lat:44.241321,lng:-105.552029},Carbon:{lat:41.70359,lng:-106.933153},Converse:{lat:42.972839,lng:-105.507367},Crook:{lat:44.589266,lng:-104.567298},Fremont:{lat:43.055303,lng:-108.605531},Goshen:{lat:42.08958,lng:-104.353482},"Hot Springs":{lat:43.720871,lng:-108.435652},Johnson:{lat:44.044048,lng:-106.588541},Laramie:{lat:41.29283,lng:-104.660395},Lincoln:{lat:42.228788,lng:-110.679842},Natrona:{lat:42.973641,lng:-106.764877},Niobrara:{lat:43.062159,lng:-104.468373},Park:{lat:44.492387,lng:-109.593598},Platte:{lat:42.130319,lng:-104.960809},Sheridan:{lat:44.781369,lng:-106.881211},Sublette:{lat:42.767928,lng:-109.91617},Sweetwater:{lat:41.660339,lng:-108.875676},Teton:{lat:44.049321,lng:-110.588102},Uinta:{lat:41.284726,lng:-110.558947},Washakie:{lat:43.878831,lng:-107.669052},Weston:{lat:43.846213,lng:-104.57002}},cities:{Casper:{lat:42.866632,lng:-106.313081},Cheyenne:{lat:41.1399814,lng:-104.8202462}},center:{lat:42.7475,lng:-107.2085}},SC:{counties:{Abbeville:{lat:34.213809,lng:-82.46046},Aiken:{lat:33.549317,lng:-81.63387},Allendale:{lat:32.979784,lng:-81.363421},Anderson:{lat:34.519549,lng:-82.638086},Bamberg:{lat:33.203021,lng:-81.053161},Barnwell:{lat:33.26068,lng:-81.433753},Beaufort:{lat:32.358147,lng:-80.68932},Berkeley:{lat:33.2077,lng:-79.953655},Calhoun:{
lat:33.67478,lng:-80.780347},Charleston:{lat:32.800458,lng:-79.94248},Cherokee:{lat:35.049796,lng:-81.607647},Chester:{lat:34.689345,lng:-81.161249},Chesterfield:{lat:34.637018,lng:-80.159227},Clarendon:{lat:33.664682,lng:-80.217889},Colleton:{lat:32.83498,lng:-80.655345},Darlington:{lat:34.332185,lng:-79.962116},Dillon:{lat:34.390172,lng:-79.374964},Dorchester:{lat:33.082186,lng:-80.404697},Edgefield:{lat:33.776498,lng:-81.968245},Fairfield:{lat:34.395669,lng:-81.127001},Florence:{lat:34.028535,lng:-79.710233},Georgetown:{lat:33.41753,lng:-79.300812},Greenville:{lat:34.892645,lng:-82.372077},Greenwood:{lat:34.155796,lng:-82.127876},Hampton:{lat:32.778323,lng:-81.143362},Horry:{lat:33.909269,lng:-78.976675},Jasper:{lat:32.43059,lng:-81.021627},Kershaw:{lat:34.338356,lng:-80.590885},Lancaster:{lat:34.686818,lng:-80.703689},Laurens:{lat:34.483477,lng:-82.005657},Lee:{lat:34.15864,lng:-80.251209},Lexington:{lat:33.892554,lng:-81.272853},McCormick:{lat:33.897605,lng:-82.316192},Marion:{lat:34.080701,lng:-79.362131},Marlboro:{lat:34.601805,lng:-79.677942},Newberry:{lat:34.28973,lng:-81.600053},Oconee:{lat:34.748759,lng:-83.061522},Orangeburg:{lat:33.436135,lng:-80.802913},Pickens:{lat:34.887362,lng:-82.725368},Richland:{lat:34.029783,lng:-80.896566},Saluda:{lat:34.005278,lng:-81.727903},Spartanburg:{lat:34.933239,lng:-81.991053},Sumter:{lat:33.916046,lng:-80.382472},Union:{lat:34.690514,lng:-81.615831},Williamsburg:{lat:33.626463,lng:-79.716475},York:{lat:34.97019,lng:-81.183189}},cities:{Charleston:{lat:32.7765656,lng:-79.93092159999999},Columbia:{lat:34.0007104,lng:-81.0348144},Greenville:{lat:34.85261759999999,lng:-82.3940104},"Mt Pleasant":{lat:32.7940651,lng:-79.8625851},"North Charleston":{lat:32.8546197,lng:-79.9748103},"Rock Hill":{lat:34.9248667,lng:-81.02507840000001},Summerville:{lat:33.0185039,lng:-80.17564809999999}},center:{lat:33.8191,lng:-80.9066}},WV:{counties:{Barbour:{lat:39.139754,lng:-79.996914},Berkeley:{lat:39.457854,lng:-78.032338},Boone:{lat:38.022838,lng:-81.713314},Braxton:{lat:38.699302,lng:-80.731649},Brooke:{lat:40.272645,lng:-80.578691},Cabell:{lat:38.41958,lng:-82.243392},Calhoun:{lat:38.844159,lng:-81.115478},Clay:{lat:38.459826,lng:-81.081866},Doddridge:{lat:39.263482,lng:-80.701147},Fayette:{lat:38.030933,lng:-81.086051},Gilmer:{lat:38.915865,lng:-80.849409},Grant:{lat:39.105988,lng:-79.195064},Greenbrier:{lat:37.924418,lng:-80.45059},Hampshire:{lat:39.31214,lng:-78.611989},Hancock:{lat:40.516931,lng:-80.570057},Hardy:{lat:39.010818,lng:-78.843641},Harrison:{lat:39.279199,lng:-80.386487},Jackson:{lat:38.834234,lng:-81.677717},Jefferson:{lat:39.307399,lng:-77.86322},Kanawha:{lat:38.328061,lng:-81.523522},Lewis:{lat:38.988844,lng:-80.495518},Lincoln:{lat:38.171651,lng:-82.077547},Logan:{lat:37.830591,lng:-81.940853},McDowell:{lat:37.382663,lng:-81.658205},Marion:{lat:39.505839,lng:-80.243402},Marshall:{lat:39.854717,lng:-80.671378},Mason:{lat:38.759288,lng:-82.024172},Mercer:{lat:37.403448,lng:-81.106456},Mineral:{lat:39.405626,lng:-78.956581},Mingo:{lat:37.721151,lng:-82.158993},Monongalia:{lat:39.633645,lng:-80.059074},Monroe:{lat:37.550353,lng:-80.547891},Morgan:{lat:39.554835,lng:-78.257314},Nicholas:{lat:38.291416,lng:-80.797516},Ohio:{lat:40.098932,lng:-80.620728},Pendleton:{lat:38.686836,lng:-79.333707},Pleasants:{lat:39.368133,lng:-81.161172},Pocahontas:{lat:38.332513,lng:-80.012092},Preston:{lat:39.46903,lng:-79.668865},Putnam:{lat:38.510513,lng:-81.906109},Raleigh:{lat:37.76247,lng:-81.264671},Randolph:{lat:38.781087,lng:-79.867783},Ritchie:{lat:39.177112,lng:-81.066317},Roane:{lat:38.743033,lng:-81.354502},Summers:{lat:37.656003,lng:-80.856315},Taylor:{lat:39.329072,lng:-80.045629},Tucker:{lat:39.111175,lng:-79.559968},Tyler:{lat:39.465981,lng:-80.879493},Upshur:{lat:38.902537,lng:-80.231335},Wayne:{lat:38.145531,lng:-82.419698},Webster:{lat:38.492985,lng:-80.430262},Wetzel:{lat:39.596574,lng:-80.634394},Wirt:{lat:39.020034,lng:-81.382975},Wood:{lat:39.211679,lng:-81.515928},Wyoming:{lat:37.603717,lng:-81.548884}},cities:{Charleston:{lat:38.3498195,lng:-81.6326234},Huntington:{lat:38.4192496,lng:-82.44515400000002}},center:{lat:38.468,lng:-80.9696}},NH:{counties:{Belknap:{lat:43.519109,lng:-71.425366},Carroll:{lat:43.867567,lng:-71.201665},Cheshire:{lat:42.925455,lng:-72.248217},Coos:{lat:44.652419,lng:-71.289383},Grafton:{lat:43.926488,lng:-71.842264},Hillsborough:{lat:42.911643,lng:-71.723101},Merrimack:{lat:43.299485,lng:-71.68013},Rockingham:{lat:42.98936,lng:-71.099437},Strafford:{lat:43.293177,lng:-71.035927},Sullivan:{lat:43.361188,lng:-72.222084}},cities:{Concord:{lat:43.2081366,lng:-71.5375718},Manchester:{lat:42.9956397,lng:-71.4547891},Nashua:{lat:42.7653662,lng:-71.46756599999999}},center:{lat:43.4108,lng:-71.5653}},AR:{counties:{Arkansas:{lat:34.289574,lng:-91.376547},Ashley:{lat:33.190835,lng:-91.772267},Baxter:{lat:36.28071,lng:-92.330438},Benton:{lat:36.337825,lng:-94.256187},Boone:{lat:36.304308,lng:-93.079204},Bradley:{lat:33.463819,lng:-92.168164},Calhoun:{lat:33.56046,lng:-92.513879},Carroll:{lat:36.337774,lng:-93.541663},Chicot:{lat:33.267139,lng:-91.297158},Clark:{lat:34.053312,lng:-93.176205},Clay:{lat:36.367302,lng:-90.418704},Cleburne:{lat:35.566288,lng:-92.059974},Cleveland:{lat:33.893201,lng:-92.188714},Columbia:{lat:33.21507,lng:-93.226901},Conway:{lat:35.265702,lng:-92.689248},Craighead:{lat:35.828268,lng:-90.630411},Crawford:{lat:35.583041,lng:-94.236224},Crittenden:{lat:35.211878,lng:-90.315331},Cross:{lat:35.291259,lng:-90.773894},Dallas:{lat:33.967823,lng:-92.653999},Desha:{lat:33.828748,lng:-91.244427},Drew:{lat:33.587242,lng:-91.722778},Faulkner:{lat:35.146356,lng:-92.324654},Franklin:{lat:35.508573,lng:-93.887672},Fulton:{lat:36.383443,lng:-91.819239},Garland:{lat:34.578861,lng:-93.146915},Grant:{lat:34.288063,lng:-92.423984},Greene:{lat:36.119922,lng:-90.565241},Hempstead:{lat:33.728611,lng:-93.665809},"Hot Spring":{lat:34.315177,lng:-92.944147},Howard:{lat:34.083179,lng:-93.990988},Independence:{lat:35.737499,lng:-91.559942},Izard:{lat:36.094879,lng:-91.913625},Jackson:{lat:35.596605,lng:-91.223178},Jefferson:{lat:34.277696,lng:-91.930701},Johnson:{lat:35.573359,lng:-93.466322},Lafayette:{lat:33.24066,lng:-93.611643},Lawrence:{lat:36.041098,lng:-91.101153},Lee:{lat:34.77975,lng:-90.779288},Lincoln:{lat:33.957665,lng:-91.727624},"Little River":{lat:33.699497,lng:-94.229774},Logan:{lat:35.21855,lng:-93.720563},Lonoke:{lat:34.755114,lng:-91.894132},Madison:{lat:36.012545,lng:-93.724053},Marion:{lat:36.266656,lng:-92.678588},Miller:{lat:33.305505,lng:-93.901509},Mississippi:{lat:35.766943,lng:-90.052209},Monroe:{lat:34.679513,lng:-91.203314},Montgomery:{lat:34.545652,lng:-93.664147},Nevada:{lat:33.666699,lng:-93.305072},Newton:{lat:35.910063,lng:-93.215084},Ouachita:{lat:33.591158,lng:-92.878418},Perry:{lat:34.946363,lng:-92.926877},Phillips:{lat:34.425842,lng:-90.848386},Pike:{lat:34.158191,lng:-93.658659},Poinsett:{lat:35.568981,lng:-90.680595},Polk:{lat:34.490915,lng:-94.230884},Pope:{lat:35.455297,lng:-93.031535},Prairie:{lat:34.828225,lng:-91.5572},Pulaski:{lat:34.773988,lng:-92.316515},Randolph:{lat:36.341299,lng:-91.028441},"St. Francis":{lat:35.014438,lng:-90.742199},Saline:{lat:34.648525,lng:-92.674463},Scott:{lat:34.858869,lng:-94.063641},Searcy:{lat:35.90966,lng:-92.699351},Sebastian:{lat:35.196981,lng:-94.274989},Sevier:{lat:33.994608,lng:-94.24329},Sharp:{lat:36.173399,lng:-91.471069},Stone:{lat:35.856989,lng:-92.140494},Union:{lat:33.168219,lng:-92.598145},"Van Buren":{lat:35.582959,lng:-92.515977},Washington:{lat:35.971209,lng:-94.218417},White:{lat:35.254722,lng:-91.753158},Woodruff:{lat:35.189071,lng:-91.244418},Yell:{lat:34.997713,lng:-93.408303}},cities:{Conway:{lat:35.0886963,lng:-92.4421011},Fayetteville:{lat:36.0625795,lng:-94.1574263},"Fort Smith":{lat:35.3859242,lng:-94.39854749999999},Jonesboro:{lat:35.84229670000001,lng:-90.704279},"Little Rock":{lat:34.7464809,lng:-92.28959479999999},"North Little Rock":{lat:34.769536,lng:-92.2670941},"Pine Bluff":{lat:34.2284312,lng:-92.00319549999999},Rogers:{lat:36.3320196,lng:-94.1185366},Springdale:{lat:36.18674420000001,lng:-94.1288141}},center:{lat:34.9513,lng:-92.3809}},RI:{counties:{Bristol:{lat:41.705271,lng:-71.285053},Kent:{lat:41.67775,lng:-71.576314},Newport:{lat:41.502732,lng:-71.284063},Providence:{lat:41.870488,lng:-71.578242},Washington:{lat:41.401162,lng:-71.617612}},cities:{Cranston:{lat:41.7798226,lng:-71.4372796},"East Providence":{lat:41.8137116,lng:-71.3700545},Pawtucket:{lat:41.878711,lng:-71.38255579999999},Providence:{lat:41.8239891,lng:-71.4128343},Warwick:{lat:41.7001009,lng:-71.4161671},Woonsocket:{lat:42.00287609999999,lng:-71.51478390000001}},center:{lat:41.6772,lng:-71.5101}},HI:{counties:{"Hawaiʻi":{lat:19.597764,lng:-155.502443},Honolulu:{lat:21.461364,lng:-158.201976},Kalawao:{lat:21.218764,lng:-156.97401},"Kauaʻi":{lat:22.012038,lng:-159.705965},Maui:{lat:20.855931,lng:-156.60155}},cities:{Honolulu:{lat:21.3069444,lng:-157.8583333},Hilo:{lat:19.5429151,lng:-155.6658568},"Pearl City":{lat:21.3972222,lng:-157.9733333}},center:{lat:21.1098,lng:-157.5311}},NV:{counties:{Churchill:{lat:39.525701,lng:-118.270419},Clark:{lat:36.214236,lng:-115.013819},Douglas:{lat:38.905129,lng:-119.609019},Elko:{lat:41.141133,lng:-115.351424},Esmeralda:{lat:37.778966,lng:-117.632382},Eureka:{lat:39.977788,lng:-116.272208},Humboldt:{lat:41.407914,lng:-118.127592},Lander:{lat:39.900211,lng:-117.04724},Lincoln:{lat:37.634605,lng:-114.863037},Lyon:{lat:39.022214,lng:-119.197417},Mineral:{lat:38.516647,lng:-118.416279},Nye:{lat:37.966379,lng:-116.459047},Pershing:{lat:40.439639,lng:-118.409477},Storey:{lat:39.438385,lng:-119.524646},Washoe:{lat:40.703311,lng:-119.710315},"White Pine":{lat:39.417804,lng:-114.900945},"Carson City":{lat:39.153447,lng:-119.743442}},cities:{Enterprise:{lat:36.0252503,lng:-115.2419419},Henderson:{lat:36.0395247,lng:-114.9817213},"Las Vegas":{lat:36.114646,lng:-115.172816},"North Las Vegas":{lat:36.1988592,lng:-115.1175013},Paradise:{lat:36.0971945,lng:-115.1466648},Reno:{lat:39.5296329,lng:-119.8138027},Sparks:{lat:39.5349112,lng:-119.7526886},"Spring Valley":{lat:36.1080258,lng:-115.2450006},"Sunrise Manor":{lat:36.2110819,lng:-115.0730563},Whitney:{lat:36.0966897,lng:-115.0407412}},center:{lat:38.4199,lng:-117.1219}},KS:{counties:{Allen:{lat:37.884229,lng:-95.300945},Anderson:{lat:38.215114,lng:-95.292046},Atchison:{lat:39.532544,lng:-95.313398},Barber:{lat:37.222906,lng:-98.685052},Barton:{lat:38.481239,lng:-98.767837},Bourbon:{lat:37.8561,lng:-94.850928},Brown:{lat:39.825931,lng:-95.569905},Butler:{lat:37.773681,lng:-96.838762},Chase:{lat:38.298553,lng:-96.594064},Chautauqua:{lat:37.154259,lng:-96.245396},Cherokee:{lat:37.169392,lng:-94.845698},Cheyenne:{lat:39.789256,lng:-101.727302},Clark:{lat:37.233831,lng:-99.813869},Clay:{lat:39.344964,lng:-97.168853},Cloud:{lat:39.487329,lng:-97.64139},Coffey:{lat:38.23645,lng:-95.729137},Comanche:{lat:37.189071,lng:-99.254089},Cowley:{lat:37.234507,lng:-96.837247},Crawford:{lat:37.505628,lng:-94.853941},Decatur:{lat:39.783542,lng:-100.459708},Dickinson:{lat:38.867735,lng:-97.157943},Doniphan:{lat:39.788502,lng:-95.147225},Douglas:{lat:38.896573,lng:-95.290529},Edwards:{lat:37.883595,lng:-99.304746},Elk:{lat:37.456026,lng:-96.244642},Ellis:{lat:38.914596,lng:-99.317329},Ellsworth:{lat:38.700845,lng:-98.205355},Finney:{lat:38.049855,lng:-100.739929},Ford:{lat:37.688365,lng:-99.884734},Franklin:{lat:38.558019,lng:-95.278962},Geary:{lat:39.002155,lng:-96.768038},Gove:{lat:38.917239,lng:-100.48736},Graham:{lat:39.349445,lng:-99.880952},Grant:{lat:37.547537,lng:-101.299362},Gray:{lat:37.744513,lng:-100.451716},Greeley:{lat:38.480408,lng:-101.805984},Greenwood:{lat:37.878659,lng:-96.242232},Hamilton:{lat:37.995244,lng:-101.793689},Harper:{lat:37.188184,lng:-98.06659},Harvey:{lat:38.050144,lng:-97.436707},Haskell:{lat:37.55855,lng:-100.876869},Hodgeman:{lat:38.087493,lng:-99.898407},Jackson:{lat:39.410989,lng:-95.794509},Jefferson:{lat:39.239644,lng:-95.375314},Jewell:{lat:39.77701,lng:-98.222584},Johnson:{lat:38.883907,lng:-94.82233},Kearny:{lat:37.994461,lng:-101.308136},Kingman:{lat:37.552951,lng:-98.144529},Kiowa:{lat:37.561231,lng:-99.286539},Labette:{lat:37.191468,lng:-95.297473},Lane:{lat:38.481286,lng:-100.466185},Leavenworth:{lat:39.189511,lng:-95.038977},Lincoln:{lat:39.047276,lng:-98.214265},Linn:{lat:38.216549,lng:-94.844932},Logan:{lat:38.91327,lng:-101.157407},Lyon:{lat:38.455498,lng:-96.161589},McPherson:{lat:38.395812,lng:-97.647489},Marion:{lat:38.359647,lng:-97.102771},Marshall:{lat:39.782709,lng:-96.521243},Meade:{lat:37.243886,lng:-100.360094},Miami:{lat:38.566772,lng:-94.832963},Mitchell:{lat:39.393026,lng:-98.207362},Montgomery:{lat:37.189537,lng:-95.742403},Morris:{lat:38.687696,lng:-96.644905},Morton:{lat:37.18525,lng:-101.809516},Nemaha:{lat:39.791043,lng:-96.005381},Neosho:{lat:37.564283,lng:-95.315683},Ness:{lat:38.480437,lng:-99.908745},Norton:{lat:39.783867,lng:-99.899235},Osage:{lat:38.649706,lng:-95.727275},Osborne:{lat:39.348649,lng:-98.767876},Ottawa:{lat:39.137963,lng:-97.654803},Pawnee:{lat:38.182873,lng:-99.232154},Phillips:{lat:39.784506,lng:-99.34215},Pottawatomie:{lat:39.382187,lng:-96.337113},Pratt:{lat:37.647594,lng:-98.74012},Rawlins:{lat:39.786198,lng:-101.076738},Reno:{lat:37.948185,lng:-98.078346},Republic:{lat:39.82891,lng:-97.650921},Rice:{lat:38.347178,lng:-98.201415},Riley:{lat:39.291211,lng:-96.727489},Rooks:{lat:39.346006,lng:-99.324492},Rush:{lat:38.523592,lng:-99.309183},Russell:{lat:38.916839,lng:-98.765638},Saline:{lat:38.786327,lng:-97.650153},Scott:{lat:38.481877,lng:-100.90636},Sedgwick:{lat:37.683807,lng:-97.459451},Seward:{lat:37.180585,lng:-100.854741},Shawnee:{lat:39.041805,lng:-95.755664},Sheridan:{lat:39.350543,lng:-100.441206},Sherman:{lat:39.351352,lng:-101.719859},Smith:{lat:39.78466,lng:-98.78543},Stafford:{lat:38.03563,lng:-98.719889},Stanton:{lat:37.565932,lng:-101.789383},Stevens:{lat:37.202356,lng:-101.315796},Sumner:{lat:37.236663,lng:-97.493349},Thomas:{lat:39.357706,lng:-101.083439},Trego:{lat:38.921302,lng:-99.865423},Wabaunsee:{lat:38.955154,lng:-96.201262},Wallace:{lat:38.926626,lng:-101.771103},Washington:{lat:39.776714,lng:-97.095611},Wichita:{lat:38.481922,lng:-101.347434},Wilson:{lat:37.558515,lng:-95.745175},Woodson:{lat:37.888484,lng:-95.757553},Wyandotte:{lat:39.115384,lng:-94.763087}},cities:{Hutchinson:{lat:38.0608445,lng:-97.92977429999999},"Kansas City":{lat:39.114053,lng:-94.6274636},Lawrence:{lat:38.9716689,lng:-95.2352501},Lenexa:{lat:38.9536174,lng:-94.73357089999999},Manhattan:{lat:39.18360819999999,lng:-96.57166939999999},Olathe:{lat:38.8813958,lng:-94.81912849999999},"Overland Park":{lat:38.9822282,lng:-94.6707917},Salina:{lat:38.8402805,lng:-97.61142369999999},Shawnee:{lat:39.02284849999999,lng:-94.7151865},Topeka:{lat:39.0558235,lng:-95.68901849999999},Wichita:{lat:37.6922222,lng:-97.3372222}},center:{lat:38.5111,lng:-96.8005}},ME:{counties:{Androscoggin:{lat:44.167681,lng:-70.207435},Aroostook:{lat:46.727057,lng:-68.64941},Cumberland:{lat:43.808348,lng:-70.330375},Franklin:{lat:44.973012,lng:-70.444727},Hancock:{lat:44.564906,lng:-68.370703},Kennebec:{lat:44.417012,lng:-69.765764},Knox:{lat:44.042045,lng:-69.038515},Lincoln:{lat:43.994265,lng:-69.514029},Oxford:{lat:44.494585,lng:-70.734688},Penobscot:{lat:45.390602,lng:-68.657487},Piscataquis:{lat:45.917678,lng:-69.104548},Sagadahoc:{lat:43.916694,lng:-69.843994},Somerset:{lat:45.507482,lng:-69.97604},Waldo:{lat:44.505361,lng:-69.139678},Washington:{lat:44.967009,lng:-67.609354},York:{lat:43.427239,lng:-70.670402}},cities:{Portland:{lat:43.66147100000001,lng:-70.2553259}},center:{lat:44.6074,lng:-69.3977}},SD:{counties:{Aurora:{lat:43.724719,lng:-98.577587},Beadle:{lat:44.418265,lng:-98.279422},Bennett:{lat:43.184826,lng:-101.676426},"Bon Homme":{lat:42.986031,lng:-97.885613},Brookings:{lat:44.376675,lng:-96.797797},Brown:{lat:45.589254,lng:-98.352175},Brule:{lat:43.72988,lng:-99.092941},Buffalo:{lat:44.044306,lng:-99.203998},Butte:{lat:44.896435,lng:-103.501762},Campbell:{lat:45.782241,lng:-100.027951},"Charles Mix":{lat:43.206185,lng:-98.595143},Clark:{lat:44.855211,lng:-97.724912},Clay:{lat:42.912997,lng:-96.979795},Codington:{lat:44.966324,lng:-97.198843},Corson:{lat:45.69834,lng:-101.176017},Custer:{lat:43.684943,lng:-103.46225},Davison:{lat:43.680439,lng:-98.155868},Day:{lat:45.362283,lng:-97.593734},Deuel:{lat:44.75629,lng:-96.690239},Dewey:{lat:45.150005,lng:-100.852218},Douglas:{lat:43.391506,lng:-98.358433},Edmunds:{lat:45.41168,lng:-99.205362},"Fall River":{lat:43.221504,lng:-103.512102},Faulk:{lat:45.065476,lng:-99.153564},Grant:{lat:45.172637,lng:-96.772261},Gregory:{lat:43.179094,lng:-99.202158},Haakon:{lat:44.284312,lng:-101.59179},Hamlin:{lat:44.680619,lng:-97.178598},Hand:{lat:44.546713,lng:-99.004575},Hanson:{lat:43.680612,lng:-97.796845},Harding:{lat:45.596612,lng:-103.473867},Hughes:{lat:44.392258,lng:-99.985846},Hutchinson:{lat:43.33671,lng:-97.749383},Hyde:{lat:44.537301,lng:-99.492148},Jackson:{lat:43.677294,lng:-101.626455},Jerauld:{lat:44.063416,lng:-98.623188},Jones:{lat:43.95199,lng:-100.686139},Kingsbury:{lat:44.362969,lng:-97.499313},Lake:{lat:44.02845,lng:-97.123223},Lawrence:{lat:44.353669,lng:-103.796528},Lincoln:{lat:43.27942,lng:-96.722286},Lyman:{lat:43.894812,lng:-99.841925},McCook:{lat:43.678924,lng:-97.362036},McPherson:{lat:45.784249,lng:-99.211421},Marshall:{lat:45.737054,lng:-97.580884},Meade:{lat:44.606792,lng:-102.715864},Mellette:{lat:43.58493,lng:-100.760598},Miner:{lat:44.017327,lng:-97.60979},Minnehaha:{lat:43.667472,lng:-96.795726},Moody:{lat:44.012429,lng:-96.676054},Pennington:{lat:44.002349,lng:-102.823802},Perkins:{lat:45.483387,lng:-102.467995},Potter:{lat:45.064276,lng:-99.949631},Roberts:{lat:45.623397,lng:-96.947551},Sanborn:{lat:44.021032,lng:-98.092105},Shannon:{lat:43.341937,lng:-102.55948},Spink:{lat:44.931034,lng:-98.339644},Stanley:{lat:44.415547,lng:-100.749163},Sully:{lat:44.722325,lng:-100.131399},Todd:{lat:43.208172,lng:-100.717204},Tripp:{lat:43.349729,lng:-99.876219},Turner:{lat:43.30867,lng:-97.150185},Union:{lat:42.831106,lng:-96.650829},Walworth:{lat:45.427605,lng:-100.027856},Yankton:{lat:43.006607,lng:-97.388339},Ziebach:{lat:44.981666,lng:-101.669225}},cities:{"Rapid City":{lat:44.0805434,lng:-103.2310149},"Sioux Falls":{lat:43.5499749,lng:-96.700327}},center:{lat:44.2853,lng:-99.4632}},DC:{counties:{"District of Columbia":{lat:38.904149,lng:-77.017094}},cities:{Washington:{lat:38.8951118,lng:-77.0363658}},center:{lat:38.8964,lng:-77.0262}},DE:{counties:{Kent:{lat:39.097088,lng:-75.502982},"New Castle":{lat:39.575915,lng:-75.644132},Sussex:{lat:38.677511,lng:-75.335495}},cities:{Wilmington:{lat:39.7458333,lng:-75.5466667}},center:{lat:39.3498,lng:-75.5148}},AS:{counties:{},cities:{},center:{lat:14.2417,lng:-170.7197}},MP:{counties:{},cities:{},center:{lat:14.8058,lng:145.5505}},PR:{counties:{},cities:{},center:{lat:18.2766,lng:-66.335}},VI:{counties:{},cities:{},center:{lat:18.0001,lng:-64.8199}}}},{}],3:[function(t,n,e){n.exports=Backbone.View.extend({elements:{".toolbox-toggle-button":"toolboxToggleButton",".toolbox-toggle-view":"toolboxToggleViews",".toolbox":"toolbox","#filter-victim-age":"victimAgeSlider","#filter-victim-age-unknown":"victimAgeUnknown","#filter-victim-age-lower":"victimAgeLower","#filter-victim-age-upper":"victimAgeUpper","input[name=filter-victim-gender]":"victimGender","input[name=filter-victim-armed]":"victimArmed","input[name=filter-victim-outcome]":"victimOutcome","#filter-victim-race":"victimRace","#filter-searched-date-lower":"searchedDateLower","#filter-searched-date-upper":"searchedDateUpper",".count":"count",".count .number":"countNumber"},initialize:function(t){var n=this;this.refreshElements(),this.app=t.app,n.refetchData=_.bind(n.refetchData,n),n.listenTo(this.model,"change:data",function(t,e){var l=e.reduce(function(t,n){return t+(n.latlng?1:0)},0);n.render({total:e.length,mappable:l})}),n.$toolboxToggleButton.on("click",function(t){t.preventDefault(),n.$toolboxToggleViews.toggleClass("in-view")})},_linkDualSliderToInputs:function(t,n,e){var l=this;t.on("change",function(){var a=t.val();n.val(parseInt(a[0])),e.val(parseInt(a[1])),l.refetchData()}),n.on("change",function(){t.val([n.val(),null]),l.refetchData()}),e.on("change",function(){t.val([null,e.val()]),l.refetchData()})},_getMultiCheckboxValue:function(t){return t.filter(":checked").toArray().map(function(t){return $(t).val()})},refetchData:function(){var t=this,n={victim:{age:{lower:parseInt(t.$victimAgeLower.val()),upper:parseInt(t.$victimAgeUpper.val()),includeUnknown:!!t.$victimAgeUnknown.is(":checked")},gender:t._getMultiCheckboxValue(t.$victimGender),armed:t._getMultiCheckboxValue(t.$victimArmed),outcome:t._getMultiCheckboxValue(t.$victimOutcome)}};t.controlsSetup&&(n.victim.race=t.$victimRace.selectivity("value"),n.searched_date={lower:XDate.parse(t.$searchedDateLower.pickadate("picker").get()),upper:XDate.parse(t.$searchedDateUpper.pickadate("picker").get())}),t.model.fetch(n),t.fieldInfo||(t.model.on("change:fieldInfo",function(n,e){t.fieldInfo=e,t.render()}),t.model.fetchFieldInfo())},render:function(t){t=t||{};var n=this;if(n.fieldInfo&&!n.controlsSetup){n.$victimAgeSlider.noUiSlider({start:[1,100],step:1,connect:!0,range:{min:1,max:100}}),n._linkDualSliderToInputs(n.$victimAgeSlider,n.$victimAgeLower,n.$victimAgeUpper),n.$victimAgeUnknown.on("change",n.refetchData),n.$victimGender.on("change",n.refetchData),n.$victimArmed.on("change",n.refetchData),n.$victimOutcome.on("change",n.refetchData),n.$victimRace.selectivity({items:_.keys(n.fieldInfo.race),multiple:!0,placeholder:"(All races)"}),n.$victimRace.on("change",n.refetchData);var e=new Date(n.fieldInfo.searched_date.lower),l=new Date(n.fieldInfo.searched_date.upper),a={min:e,max:l,format:"yyyy-mm-dd",formatSubmit:"yyyy-mm-dd",selectYears:!0,selectMonths:!0,firstDay:1,onSet:n.refetchData};n.$searchedDateLower.val(new XDate(e).toString("yyyy-MM-dd")).pickadate(a),n.$searchedDateUpper.val(new XDate(l).toString("yyyy-MM-dd")).pickadate(a),n.controlsSetup=!0,mixpanel.track("controls setup")}void 0!==t.total&&this.$countNumber.text(t.mappable)}})},{}],4:[function(t,n,e){t("us_latlng_json");n.exports=Backbone.View.extend({initialize:function(t){var n=this;n.app=t.app,n.items=[],this.listenTo(this.model,"change:data",function(t,e){n.items=e,n.render()}),n.renderMarkers=_.bind(n.renderMarkers,n),n.mapPopupTemplate=_.template($("#mapPopup").html(),{interpolate:/\{\{(.+?)\}\}/g})},render:function(){var t=this;if(!t.map){t.$window=$(window);var n=function(){t.$el.height(t.$window.height()-$("nav.topbar").height()-10)};n(),t.$window.resize(n),t.map=L.map(t.$el.attr("id"),{zoom:3,zoomControl:!1,center:[41.5,-110.35]}),L.control.zoom({position:"bottomright"}).addTo(t.map),L.tileLayer("http://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}.png",{attribution:'&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors, &copy; <a href="http://cartodb.com/attributions">CartoDB</a>',reuseTiles:!0,maxZoom:11}).addTo(t.map)}t.renderMarkers()},renderMarkers:function(){var t=this;t.mapMarkers||(t.mapMarkers=new L.MarkerClusterGroup({iconCreateFunction:t.markerClusterIconCreateFunction,maxClusterRadius:90,spiderfyDistanceMultiplier:1.2,polygonOptions:{color:"#ff6f00"}}),t.map.addLayer(t.mapMarkers)),t.mapMarkers.clearLayers(),t.items.forEach(function(n){if(n.latlng){t.markerIcon||(t.markerIcon={},["killed","wounded","unknown"].forEach(function(n){t.markerIcon[n]=L.icon({iconUrl:"img/outcome_"+n+".svg",iconSize:[30,30],popupAnchor:[0,-3]})}));var e=L.marker([n.latlng.lat,n.latlng.lng],{icon:t.markerIcon[n.outcome]});e.on("click",function(){L.popup().setLatLng([n.latlng.lat,n.latlng.lng]).setContent(t.mapPopupTemplate(n)).openOn(t.map)}),t.mapMarkers.addLayer(e)}}),mixpanel.track("data rendered")},markerClusterIconCreateFunction:function(t){var n="normal",e=t.getChildCount();return n=10>e?"small":50>e?"medium":100>e?"large":200>e?"x-large":"xx-large",new L.DivIcon({html:'<div class="map-cluster-marker '+n+'"><span>'+t.getChildCount()+"</span></div>"})}})},{us_latlng_json:2}],5:[function(t,n,e){n.exports=Backbone.Model.extend({initialize:function(){Backbone.Model.prototype.initialize.call(this),this.worker=new Worker("worker.js"),this.worker.addEventListener("message",_.bind(this.onWorkerResponse,this)),this._fetchMeta={}},fetch:function(t){this._fetch("search",t)},fetchFieldInfo:function(){this._fetch("fieldInfo")},_fetch:function(t,n){var e=this;e._fetchMeta[t]=e._fetchMeta[t]||{},clearTimeout(e._fetchMeta[t].timeout),e._fetchMeta[t].timeout=setTimeout(function(){var l={};l["fetching-"+t]=!0,e.set(l),e._fetchMeta[t].id=""+1e7*Math.random(),e.worker.postMessage({type:t,id:e._fetchMeta[t].id,params:n})},200)},onWorkerResponse:function(t){var n=this,e=t.data;if(e.error)return n.set({error:e.error});var l=e.type;if(e.id!=this._fetchMeta[l].id)return void console.debug("Ignoring old reponse");switch(delete this._fetchMeta[l].id,l){case"fieldInfo":this.set({fieldInfo:e.results});break;case"search":this.set({data:e.results})}setTimeout(function(){if(!n._fetchMeta[l].id){var t={};t["fetching-"+l]=!1,n.set(t)}},200)}})},{}],6:[function(t,n,e){n.exports=Backbone.View.extend({elements:{".loading":"loader","a.about":"aboutButton","section.about":"aboutSection"},initialize:function(t){var n=this;this.app=t.app,this.refreshElements(),this.$aboutButton.on("click",function(t){t.preventDefault(),n.$aboutSection.toggle(400)}),this.listenTo(this.model,"change:fetching-search",function(t,e){n.render({progress:e===!0})})},render:function(t){t=t||{},t.progress?this.$loader.show():this.$loader.hide()}})},{}],7:[function(t,n,e){e.deepGet=function(t,n,e){if(void 0===t||null===t)return e;for(var l=n.split("."),a=t,i=0;i<l.length;++i){if("object"!=typeof a)return e;a=a[l[i]]}return a||e},e.compactJoin=function(t){return t.reduce(function(t,n){return n&&n.length?t+(t.length?", ":"")+n:t},"")};var l=e.Ajax=function(){};l.request=function(t){t=t||{url:""},t.type=t.type||"GET",t.headers=t.headers||{},t.timeout=parseInt(t.timeout)||0,t.success=t.success||function(){},t.error=t.error||function(){},t.async="undefined"==typeof t.async||t.async;var n=new XMLHttpRequest;t.timeout>0&&(n.timeout=t.timeout,n.ontimeout=function(){t.error("timeout","timeout",n)}),n.open(t.type,t.url,t.async);for(var e in t.headers)t.headers.hasOwnProperty(e)&&n.setRequestHeader(e,t.headers[e]);return n.send(t.data),n.onreadystatechange=function(){if(4==this.readyState&&200==this.status){var n=this.responseText,e=this.getResponseHeader("Content-Type");e&&e.match(/json/)&&(n=JSON.parse(this.responseText)),t.success(n,this.statusText,this)}else 4==this.readyState&&t.error(this.status,this.statusText,this)},0==t.async&&(4==n.readyState&&200==n.status?t.success(n.responseText,n):4==n.readyState&&t.error(n.status,n.statusText,n)),n},l.get=function(t,n,e){return"function"==typeof n&&(e=n,n=void 0),l.request({url:t,data:n,success:e})},l.post=function(t,n,e){return"function"==typeof n&&(e=n,n=void 0),l.request({url:t,type:"POST",data:n,success:e})}},{}]},{},[1]);